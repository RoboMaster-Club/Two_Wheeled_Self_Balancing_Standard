ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"FusionAhrs.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "BSP/BSP.c/FusionAhrs.c"
  20              		.section	.text.FusionVectorCrossProduct,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	FusionVectorCrossProduct:
  27              	.LFB10:
  28              		.file 2 "BSP/BSP.h/FusionMath.h"
   1:BSP/BSP.h/FusionMath.h **** /**
   2:BSP/BSP.h/FusionMath.h ****  * @file FusionMath.h
   3:BSP/BSP.h/FusionMath.h ****  * @author Seb Madgwick
   4:BSP/BSP.h/FusionMath.h ****  * @brief Math library.
   5:BSP/BSP.h/FusionMath.h ****  */
   6:BSP/BSP.h/FusionMath.h **** 
   7:BSP/BSP.h/FusionMath.h **** #ifndef FUSION_MATH_H
   8:BSP/BSP.h/FusionMath.h **** #define FUSION_MATH_H
   9:BSP/BSP.h/FusionMath.h **** 
  10:BSP/BSP.h/FusionMath.h **** //------------------------------------------------------------------------------
  11:BSP/BSP.h/FusionMath.h **** // Includes
  12:BSP/BSP.h/FusionMath.h **** 
  13:BSP/BSP.h/FusionMath.h **** #include <math.h> // M_PI, sqrtf, atan2f, asinf
  14:BSP/BSP.h/FusionMath.h **** #include <stdbool.h>
  15:BSP/BSP.h/FusionMath.h **** #include <stdint.h>
  16:BSP/BSP.h/FusionMath.h **** 
  17:BSP/BSP.h/FusionMath.h **** //------------------------------------------------------------------------------
  18:BSP/BSP.h/FusionMath.h **** // Definitions
  19:BSP/BSP.h/FusionMath.h **** 
  20:BSP/BSP.h/FusionMath.h **** /**
  21:BSP/BSP.h/FusionMath.h ****  * @brief 3D vector.
  22:BSP/BSP.h/FusionMath.h ****  */
  23:BSP/BSP.h/FusionMath.h **** typedef union {
  24:BSP/BSP.h/FusionMath.h ****     float array[3];
  25:BSP/BSP.h/FusionMath.h **** 
  26:BSP/BSP.h/FusionMath.h ****     struct {
  27:BSP/BSP.h/FusionMath.h ****         float x;
  28:BSP/BSP.h/FusionMath.h ****         float y;
  29:BSP/BSP.h/FusionMath.h ****         float z;
  30:BSP/BSP.h/FusionMath.h ****     } axis;
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 2


  31:BSP/BSP.h/FusionMath.h **** } FusionVector;
  32:BSP/BSP.h/FusionMath.h **** 
  33:BSP/BSP.h/FusionMath.h **** /**
  34:BSP/BSP.h/FusionMath.h ****  * @brief Quaternion.
  35:BSP/BSP.h/FusionMath.h ****  */
  36:BSP/BSP.h/FusionMath.h **** typedef union {
  37:BSP/BSP.h/FusionMath.h ****     float array[4];
  38:BSP/BSP.h/FusionMath.h **** 
  39:BSP/BSP.h/FusionMath.h ****     struct {
  40:BSP/BSP.h/FusionMath.h ****         float w;
  41:BSP/BSP.h/FusionMath.h ****         float x;
  42:BSP/BSP.h/FusionMath.h ****         float y;
  43:BSP/BSP.h/FusionMath.h ****         float z;
  44:BSP/BSP.h/FusionMath.h ****     } element;
  45:BSP/BSP.h/FusionMath.h **** } FusionQuaternion;
  46:BSP/BSP.h/FusionMath.h **** 
  47:BSP/BSP.h/FusionMath.h **** /**
  48:BSP/BSP.h/FusionMath.h ****  * @brief 3x3 matrix in row-major order.
  49:BSP/BSP.h/FusionMath.h ****  * See http://en.wikipedia.org/wiki/Row-major_order
  50:BSP/BSP.h/FusionMath.h ****  */
  51:BSP/BSP.h/FusionMath.h **** typedef union {
  52:BSP/BSP.h/FusionMath.h ****     float array[3][3];
  53:BSP/BSP.h/FusionMath.h **** 
  54:BSP/BSP.h/FusionMath.h ****     struct {
  55:BSP/BSP.h/FusionMath.h ****         float xx;
  56:BSP/BSP.h/FusionMath.h ****         float xy;
  57:BSP/BSP.h/FusionMath.h ****         float xz;
  58:BSP/BSP.h/FusionMath.h ****         float yx;
  59:BSP/BSP.h/FusionMath.h ****         float yy;
  60:BSP/BSP.h/FusionMath.h ****         float yz;
  61:BSP/BSP.h/FusionMath.h ****         float zx;
  62:BSP/BSP.h/FusionMath.h ****         float zy;
  63:BSP/BSP.h/FusionMath.h ****         float zz;
  64:BSP/BSP.h/FusionMath.h ****     } element;
  65:BSP/BSP.h/FusionMath.h **** } FusionMatrix;
  66:BSP/BSP.h/FusionMath.h **** 
  67:BSP/BSP.h/FusionMath.h **** /**
  68:BSP/BSP.h/FusionMath.h ****  * @brief Euler angles.  Roll, pitch, and yaw correspond to rotations around
  69:BSP/BSP.h/FusionMath.h ****  * X, Y, and Z respectively.
  70:BSP/BSP.h/FusionMath.h ****  */
  71:BSP/BSP.h/FusionMath.h **** typedef union {
  72:BSP/BSP.h/FusionMath.h ****     float array[3];
  73:BSP/BSP.h/FusionMath.h **** 
  74:BSP/BSP.h/FusionMath.h ****     struct {
  75:BSP/BSP.h/FusionMath.h ****         float roll;
  76:BSP/BSP.h/FusionMath.h ****         float pitch;
  77:BSP/BSP.h/FusionMath.h ****         float yaw;
  78:BSP/BSP.h/FusionMath.h ****     } angle;
  79:BSP/BSP.h/FusionMath.h **** } FusionEuler;
  80:BSP/BSP.h/FusionMath.h **** 
  81:BSP/BSP.h/FusionMath.h **** /**
  82:BSP/BSP.h/FusionMath.h ****  * @brief Vector of zeros.
  83:BSP/BSP.h/FusionMath.h ****  */
  84:BSP/BSP.h/FusionMath.h **** #define FUSION_VECTOR_ZERO ((FusionVector){ .array = {0.0f, 0.0f, 0.0f} })
  85:BSP/BSP.h/FusionMath.h **** 
  86:BSP/BSP.h/FusionMath.h **** /**
  87:BSP/BSP.h/FusionMath.h ****  * @brief Vector of ones.
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 3


  88:BSP/BSP.h/FusionMath.h ****  */
  89:BSP/BSP.h/FusionMath.h **** #define FUSION_VECTOR_ONES ((FusionVector){ .array = {1.0f, 1.0f, 1.0f} })
  90:BSP/BSP.h/FusionMath.h **** 
  91:BSP/BSP.h/FusionMath.h **** /**
  92:BSP/BSP.h/FusionMath.h ****  * @brief Identity quaternion.
  93:BSP/BSP.h/FusionMath.h ****  */
  94:BSP/BSP.h/FusionMath.h **** #define FUSION_IDENTITY_QUATERNION ((FusionQuaternion){ .array = {1.0f, 0.0f, 0.0f, 0.0f} })
  95:BSP/BSP.h/FusionMath.h **** 
  96:BSP/BSP.h/FusionMath.h **** /**
  97:BSP/BSP.h/FusionMath.h ****  * @brief Identity matrix.
  98:BSP/BSP.h/FusionMath.h ****  */
  99:BSP/BSP.h/FusionMath.h **** #define FUSION_IDENTITY_MATRIX ((FusionMatrix){ .array = {{1.0f, 0.0f, 0.0f}, {0.0f, 1.0f, 0.0f}, {
 100:BSP/BSP.h/FusionMath.h **** 
 101:BSP/BSP.h/FusionMath.h **** /**
 102:BSP/BSP.h/FusionMath.h ****  * @brief Euler angles of zero.
 103:BSP/BSP.h/FusionMath.h ****  */
 104:BSP/BSP.h/FusionMath.h **** #define FUSION_EULER_ZERO ((FusionEuler){ .array = {0.0f, 0.0f, 0.0f} })
 105:BSP/BSP.h/FusionMath.h **** 
 106:BSP/BSP.h/FusionMath.h **** /**
 107:BSP/BSP.h/FusionMath.h ****  * @brief Pi. May not be defined in math.h.
 108:BSP/BSP.h/FusionMath.h ****  */
 109:BSP/BSP.h/FusionMath.h **** #ifndef M_PI
 110:BSP/BSP.h/FusionMath.h **** #define M_PI (3.14159265358979323846)
 111:BSP/BSP.h/FusionMath.h **** #endif
 112:BSP/BSP.h/FusionMath.h **** 
 113:BSP/BSP.h/FusionMath.h **** /**
 114:BSP/BSP.h/FusionMath.h ****  * @brief Include this definition or add as a preprocessor definition to use
 115:BSP/BSP.h/FusionMath.h ****  * normal square root operations.
 116:BSP/BSP.h/FusionMath.h ****  */
 117:BSP/BSP.h/FusionMath.h **** //#define FUSION_USE_NORMAL_SQRT
 118:BSP/BSP.h/FusionMath.h **** 
 119:BSP/BSP.h/FusionMath.h **** //------------------------------------------------------------------------------
 120:BSP/BSP.h/FusionMath.h **** // Inline functions - Degrees and radians conversion
 121:BSP/BSP.h/FusionMath.h **** 
 122:BSP/BSP.h/FusionMath.h **** /**
 123:BSP/BSP.h/FusionMath.h ****  * @brief Converts degrees to radians.
 124:BSP/BSP.h/FusionMath.h ****  * @param degrees Degrees.
 125:BSP/BSP.h/FusionMath.h ****  * @return Radians.
 126:BSP/BSP.h/FusionMath.h ****  */
 127:BSP/BSP.h/FusionMath.h **** static inline float FusionDegreesToRadians(const float degrees) {
 128:BSP/BSP.h/FusionMath.h ****     return degrees * ((float) M_PI / 180.0f);
 129:BSP/BSP.h/FusionMath.h **** }
 130:BSP/BSP.h/FusionMath.h **** 
 131:BSP/BSP.h/FusionMath.h **** /**
 132:BSP/BSP.h/FusionMath.h ****  * @brief Converts radians to degrees.
 133:BSP/BSP.h/FusionMath.h ****  * @param radians Radians.
 134:BSP/BSP.h/FusionMath.h ****  * @return Degrees.
 135:BSP/BSP.h/FusionMath.h ****  */
 136:BSP/BSP.h/FusionMath.h **** static inline float FusionRadiansToDegrees(const float radians) {
 137:BSP/BSP.h/FusionMath.h ****     return radians * (180.0f / (float) M_PI);
 138:BSP/BSP.h/FusionMath.h **** }
 139:BSP/BSP.h/FusionMath.h **** 
 140:BSP/BSP.h/FusionMath.h **** //------------------------------------------------------------------------------
 141:BSP/BSP.h/FusionMath.h **** // Inline functions - Arc sine
 142:BSP/BSP.h/FusionMath.h **** 
 143:BSP/BSP.h/FusionMath.h **** /**
 144:BSP/BSP.h/FusionMath.h ****  * @brief Returns the arc sine of the value.
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 4


 145:BSP/BSP.h/FusionMath.h ****  * @param value Value.
 146:BSP/BSP.h/FusionMath.h ****  * @return Arc sine of the value.
 147:BSP/BSP.h/FusionMath.h ****  */
 148:BSP/BSP.h/FusionMath.h **** static inline float FusionAsin(const float value) {
 149:BSP/BSP.h/FusionMath.h ****     if (value <= -1.0f) {
 150:BSP/BSP.h/FusionMath.h ****         return (float) M_PI / -2.0f;
 151:BSP/BSP.h/FusionMath.h ****     }
 152:BSP/BSP.h/FusionMath.h ****     if (value >= 1.0f) {
 153:BSP/BSP.h/FusionMath.h ****         return (float) M_PI / 2.0f;
 154:BSP/BSP.h/FusionMath.h ****     }
 155:BSP/BSP.h/FusionMath.h ****     return asinf(value);
 156:BSP/BSP.h/FusionMath.h **** }
 157:BSP/BSP.h/FusionMath.h **** 
 158:BSP/BSP.h/FusionMath.h **** //------------------------------------------------------------------------------
 159:BSP/BSP.h/FusionMath.h **** // Inline functions - Fast inverse square root
 160:BSP/BSP.h/FusionMath.h **** 
 161:BSP/BSP.h/FusionMath.h **** #ifndef FUSION_USE_NORMAL_SQRT
 162:BSP/BSP.h/FusionMath.h **** 
 163:BSP/BSP.h/FusionMath.h **** /**
 164:BSP/BSP.h/FusionMath.h ****  * @brief Calculates the reciprocal of the square root.
 165:BSP/BSP.h/FusionMath.h ****  * See https://pizer.wordpress.com/2008/10/12/fast-inverse-square-root/
 166:BSP/BSP.h/FusionMath.h ****  * @param x Operand.
 167:BSP/BSP.h/FusionMath.h ****  * @return Reciprocal of the square root of x.
 168:BSP/BSP.h/FusionMath.h ****  */
 169:BSP/BSP.h/FusionMath.h **** static inline float FusionFastInverseSqrt(const float x) {
 170:BSP/BSP.h/FusionMath.h **** 
 171:BSP/BSP.h/FusionMath.h ****     typedef union {
 172:BSP/BSP.h/FusionMath.h ****         float f;
 173:BSP/BSP.h/FusionMath.h ****         int32_t i;
 174:BSP/BSP.h/FusionMath.h ****     } Union32;
 175:BSP/BSP.h/FusionMath.h **** 
 176:BSP/BSP.h/FusionMath.h ****     Union32 union32 = {.f = x};
 177:BSP/BSP.h/FusionMath.h ****     union32.i = 0x5F1F1412 - (union32.i >> 1);
 178:BSP/BSP.h/FusionMath.h ****     return union32.f * (1.69000231f - 0.714158168f * x * union32.f * union32.f);
 179:BSP/BSP.h/FusionMath.h **** }
 180:BSP/BSP.h/FusionMath.h **** 
 181:BSP/BSP.h/FusionMath.h **** #endif
 182:BSP/BSP.h/FusionMath.h **** 
 183:BSP/BSP.h/FusionMath.h **** //------------------------------------------------------------------------------
 184:BSP/BSP.h/FusionMath.h **** // Inline functions - Vector operations
 185:BSP/BSP.h/FusionMath.h **** 
 186:BSP/BSP.h/FusionMath.h **** /**
 187:BSP/BSP.h/FusionMath.h ****  * @brief Returns true if the vector is zero.
 188:BSP/BSP.h/FusionMath.h ****  * @param vector Vector.
 189:BSP/BSP.h/FusionMath.h ****  * @return True if the vector is zero.
 190:BSP/BSP.h/FusionMath.h ****  */
 191:BSP/BSP.h/FusionMath.h **** static inline bool FusionVectorIsZero(const FusionVector vector) {
 192:BSP/BSP.h/FusionMath.h ****     return (vector.axis.x == 0.0f) && (vector.axis.y == 0.0f) && (vector.axis.z == 0.0f);
 193:BSP/BSP.h/FusionMath.h **** }
 194:BSP/BSP.h/FusionMath.h **** 
 195:BSP/BSP.h/FusionMath.h **** /**
 196:BSP/BSP.h/FusionMath.h ****  * @brief Returns the sum of two vectors.
 197:BSP/BSP.h/FusionMath.h ****  * @param vectorA Vector A.
 198:BSP/BSP.h/FusionMath.h ****  * @param vectorB Vector B.
 199:BSP/BSP.h/FusionMath.h ****  * @return Sum of two vectors.
 200:BSP/BSP.h/FusionMath.h ****  */
 201:BSP/BSP.h/FusionMath.h **** static inline FusionVector FusionVectorAdd(const FusionVector vectorA, const FusionVector vectorB) 
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 5


 202:BSP/BSP.h/FusionMath.h ****     FusionVector result;
 203:BSP/BSP.h/FusionMath.h ****     result.axis.x = vectorA.axis.x + vectorB.axis.x;
 204:BSP/BSP.h/FusionMath.h ****     result.axis.y = vectorA.axis.y + vectorB.axis.y;
 205:BSP/BSP.h/FusionMath.h ****     result.axis.z = vectorA.axis.z + vectorB.axis.z;
 206:BSP/BSP.h/FusionMath.h ****     return result;
 207:BSP/BSP.h/FusionMath.h **** }
 208:BSP/BSP.h/FusionMath.h **** 
 209:BSP/BSP.h/FusionMath.h **** /**
 210:BSP/BSP.h/FusionMath.h ****  * @brief Returns vector B subtracted from vector A.
 211:BSP/BSP.h/FusionMath.h ****  * @param vectorA Vector A.
 212:BSP/BSP.h/FusionMath.h ****  * @param vectorB Vector B.
 213:BSP/BSP.h/FusionMath.h ****  * @return Vector B subtracted from vector A.
 214:BSP/BSP.h/FusionMath.h ****  */
 215:BSP/BSP.h/FusionMath.h **** static inline FusionVector FusionVectorSubtract(const FusionVector vectorA, const FusionVector vect
 216:BSP/BSP.h/FusionMath.h ****     FusionVector result;
 217:BSP/BSP.h/FusionMath.h ****     result.axis.x = vectorA.axis.x - vectorB.axis.x;
 218:BSP/BSP.h/FusionMath.h ****     result.axis.y = vectorA.axis.y - vectorB.axis.y;
 219:BSP/BSP.h/FusionMath.h ****     result.axis.z = vectorA.axis.z - vectorB.axis.z;
 220:BSP/BSP.h/FusionMath.h ****     return result;
 221:BSP/BSP.h/FusionMath.h **** }
 222:BSP/BSP.h/FusionMath.h **** 
 223:BSP/BSP.h/FusionMath.h **** /**
 224:BSP/BSP.h/FusionMath.h ****  * @brief Returns the sum of the elements.
 225:BSP/BSP.h/FusionMath.h ****  * @param vector Vector.
 226:BSP/BSP.h/FusionMath.h ****  * @return Sum of the elements.
 227:BSP/BSP.h/FusionMath.h ****  */
 228:BSP/BSP.h/FusionMath.h **** static inline float FusionVectorSum(const FusionVector vector) {
 229:BSP/BSP.h/FusionMath.h ****     return vector.axis.x + vector.axis.y + vector.axis.z;
 230:BSP/BSP.h/FusionMath.h **** }
 231:BSP/BSP.h/FusionMath.h **** 
 232:BSP/BSP.h/FusionMath.h **** /**
 233:BSP/BSP.h/FusionMath.h ****  * @brief Returns the multiplication of a vector by a scalar.
 234:BSP/BSP.h/FusionMath.h ****  * @param vector Vector.
 235:BSP/BSP.h/FusionMath.h ****  * @param scalar Scalar.
 236:BSP/BSP.h/FusionMath.h ****  * @return Multiplication of a vector by a scalar.
 237:BSP/BSP.h/FusionMath.h ****  */
 238:BSP/BSP.h/FusionMath.h **** static inline FusionVector FusionVectorMultiplyScalar(const FusionVector vector, const float scalar
 239:BSP/BSP.h/FusionMath.h ****     FusionVector result;
 240:BSP/BSP.h/FusionMath.h ****     result.axis.x = vector.axis.x * scalar;
 241:BSP/BSP.h/FusionMath.h ****     result.axis.y = vector.axis.y * scalar;
 242:BSP/BSP.h/FusionMath.h ****     result.axis.z = vector.axis.z * scalar;
 243:BSP/BSP.h/FusionMath.h ****     return result;
 244:BSP/BSP.h/FusionMath.h **** }
 245:BSP/BSP.h/FusionMath.h **** 
 246:BSP/BSP.h/FusionMath.h **** /**
 247:BSP/BSP.h/FusionMath.h ****  * @brief Calculates the Hadamard product (element-wise multiplication).
 248:BSP/BSP.h/FusionMath.h ****  * @param vectorA Vector A.
 249:BSP/BSP.h/FusionMath.h ****  * @param vectorB Vector B.
 250:BSP/BSP.h/FusionMath.h ****  * @return Hadamard product.
 251:BSP/BSP.h/FusionMath.h ****  */
 252:BSP/BSP.h/FusionMath.h **** static inline FusionVector FusionVectorHadamardProduct(const FusionVector vectorA, const FusionVect
 253:BSP/BSP.h/FusionMath.h ****     FusionVector result;
 254:BSP/BSP.h/FusionMath.h ****     result.axis.x = vectorA.axis.x * vectorB.axis.x;
 255:BSP/BSP.h/FusionMath.h ****     result.axis.y = vectorA.axis.y * vectorB.axis.y;
 256:BSP/BSP.h/FusionMath.h ****     result.axis.z = vectorA.axis.z * vectorB.axis.z;
 257:BSP/BSP.h/FusionMath.h ****     return result;
 258:BSP/BSP.h/FusionMath.h **** }
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 6


 259:BSP/BSP.h/FusionMath.h **** 
 260:BSP/BSP.h/FusionMath.h **** /**
 261:BSP/BSP.h/FusionMath.h ****  * @brief Returns the cross product.
 262:BSP/BSP.h/FusionMath.h ****  * @param vectorA Vector A.
 263:BSP/BSP.h/FusionMath.h ****  * @param vectorB Vector B.
 264:BSP/BSP.h/FusionMath.h ****  * @return Cross product.
 265:BSP/BSP.h/FusionMath.h ****  */
 266:BSP/BSP.h/FusionMath.h **** static inline FusionVector FusionVectorCrossProduct(const FusionVector vectorA, const FusionVector 
  29              		.loc 2 266 109 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 64
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 90B0     		sub	sp, sp, #64
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 64
  37 0002 8DED070A 		vstr.32	s0, [sp, #28]
  38 0006 CDED080A 		vstr.32	s1, [sp, #32]
  39 000a 8DED091A 		vstr.32	s2, [sp, #36]
  40 000e CDED041A 		vstr.32	s3, [sp, #16]
  41 0012 8DED052A 		vstr.32	s4, [sp, #20]
  42 0016 CDED062A 		vstr.32	s5, [sp, #24]
 267:BSP/BSP.h/FusionMath.h **** #define A vectorA.axis
 268:BSP/BSP.h/FusionMath.h **** #define B vectorB.axis
 269:BSP/BSP.h/FusionMath.h ****     FusionVector result;
  43              		.loc 2 269 5 view .LVU1
 270:BSP/BSP.h/FusionMath.h ****     result.axis.x = A.y * B.z - A.z * B.y;
  44              		.loc 2 270 5 view .LVU2
  45              		.loc 2 270 25 is_stmt 0 view .LVU3
  46 001a 60EEA27A 		vmul.f32	s15, s1, s5
  47              		.loc 2 270 37 view .LVU4
  48 001e 21EE027A 		vmul.f32	s14, s2, s4
  49              		.loc 2 270 31 view .LVU5
  50 0022 77EEC77A 		vsub.f32	s15, s15, s14
  51              		.loc 2 270 19 view .LVU6
  52 0026 CDED0A7A 		vstr.32	s15, [sp, #40]
 271:BSP/BSP.h/FusionMath.h ****     result.axis.y = A.z * B.x - A.x * B.z;
  53              		.loc 2 271 5 is_stmt 1 view .LVU7
  54              		.loc 2 271 25 is_stmt 0 view .LVU8
  55 002a 21EE211A 		vmul.f32	s2, s2, s3
  56              		.loc 2 271 37 view .LVU9
  57 002e 62EE802A 		vmul.f32	s5, s5, s0
  58              		.loc 2 271 31 view .LVU10
  59 0032 31EE621A 		vsub.f32	s2, s2, s5
  60              		.loc 2 271 19 view .LVU11
  61 0036 8DED0B1A 		vstr.32	s2, [sp, #44]
 272:BSP/BSP.h/FusionMath.h ****     result.axis.z = A.x * B.y - A.y * B.x;
  62              		.loc 2 272 5 is_stmt 1 view .LVU12
  63              		.loc 2 272 25 is_stmt 0 view .LVU13
  64 003a 22EE002A 		vmul.f32	s4, s4, s0
  65              		.loc 2 272 37 view .LVU14
  66 003e 60EEA10A 		vmul.f32	s1, s1, s3
  67              		.loc 2 272 31 view .LVU15
  68 0042 32EE602A 		vsub.f32	s4, s4, s1
  69              		.loc 2 272 19 view .LVU16
  70 0046 8DED0C2A 		vstr.32	s4, [sp, #48]
 273:BSP/BSP.h/FusionMath.h ****     return result;
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 7


  71              		.loc 2 273 5 is_stmt 1 view .LVU17
  72              		.loc 2 273 12 is_stmt 0 view .LVU18
  73 004a 0AAB     		add	r3, sp, #40
  74 004c 93E80700 		ldm	r3, {r0, r1, r2}
  75 0050 10AB     		add	r3, sp, #64
  76 0052 03E90700 		stmdb	r3, {r0, r1, r2}
 274:BSP/BSP.h/FusionMath.h **** #undef A
 275:BSP/BSP.h/FusionMath.h **** #undef B
 276:BSP/BSP.h/FusionMath.h **** }
  77              		.loc 2 276 1 view .LVU19
  78 0056 9DED0D0A 		vldr.32	s0, [sp, #52]
  79 005a DDED0E0A 		vldr.32	s1, [sp, #56]
  80 005e 9DED0F1A 		vldr.32	s2, [sp, #60]
  81 0062 10B0     		add	sp, sp, #64
  82              	.LCFI1:
  83              		.cfi_def_cfa_offset 0
  84              		@ sp needed
  85 0064 7047     		bx	lr
  86              		.cfi_endproc
  87              	.LFE10:
  89              		.section	.text.FusionVectorMagnitudeSquared,"ax",%progbits
  90              		.align	1
  91              		.syntax unified
  92              		.thumb
  93              		.thumb_func
  95              	FusionVectorMagnitudeSquared:
  96              	.LFB11:
 277:BSP/BSP.h/FusionMath.h **** 
 278:BSP/BSP.h/FusionMath.h **** /**
 279:BSP/BSP.h/FusionMath.h ****  * @brief Returns the vector magnitude squared.
 280:BSP/BSP.h/FusionMath.h ****  * @param vector Vector.
 281:BSP/BSP.h/FusionMath.h ****  * @return Vector magnitude squared.
 282:BSP/BSP.h/FusionMath.h ****  */
 283:BSP/BSP.h/FusionMath.h **** static inline float FusionVectorMagnitudeSquared(const FusionVector vector) {
  97              		.loc 2 283 77 is_stmt 1 view -0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 56
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 102 0000 8EB0     		sub	sp, sp, #56
 103              	.LCFI2:
 104              		.cfi_def_cfa_offset 56
 105 0002 8DED010A 		vstr.32	s0, [sp, #4]
 106 0006 CDED020A 		vstr.32	s1, [sp, #8]
 107 000a 8DED031A 		vstr.32	s2, [sp, #12]
 284:BSP/BSP.h/FusionMath.h ****     return FusionVectorSum(FusionVectorHadamardProduct(vector, vector));
 108              		.loc 2 284 5 view .LVU21
 109              	.LBB46:
 110              	.LBI46:
 252:BSP/BSP.h/FusionMath.h ****     FusionVector result;
 111              		.loc 2 252 28 view .LVU22
 112              	.LBB47:
 253:BSP/BSP.h/FusionMath.h ****     result.axis.x = vectorA.axis.x * vectorB.axis.x;
 113              		.loc 2 253 5 view .LVU23
 254:BSP/BSP.h/FusionMath.h ****     result.axis.y = vectorA.axis.y * vectorB.axis.y;
 114              		.loc 2 254 5 view .LVU24
 254:BSP/BSP.h/FusionMath.h ****     result.axis.y = vectorA.axis.y * vectorB.axis.y;
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 8


 115              		.loc 2 254 36 is_stmt 0 view .LVU25
 116 000e 20EE000A 		vmul.f32	s0, s0, s0
 254:BSP/BSP.h/FusionMath.h ****     result.axis.y = vectorA.axis.y * vectorB.axis.y;
 117              		.loc 2 254 19 view .LVU26
 118 0012 8DED050A 		vstr.32	s0, [sp, #20]
 255:BSP/BSP.h/FusionMath.h ****     result.axis.z = vectorA.axis.z * vectorB.axis.z;
 119              		.loc 2 255 5 is_stmt 1 view .LVU27
 255:BSP/BSP.h/FusionMath.h ****     result.axis.z = vectorA.axis.z * vectorB.axis.z;
 120              		.loc 2 255 36 is_stmt 0 view .LVU28
 121 0016 60EEA00A 		vmul.f32	s1, s1, s1
 255:BSP/BSP.h/FusionMath.h ****     result.axis.z = vectorA.axis.z * vectorB.axis.z;
 122              		.loc 2 255 19 view .LVU29
 123 001a CDED060A 		vstr.32	s1, [sp, #24]
 256:BSP/BSP.h/FusionMath.h ****     return result;
 124              		.loc 2 256 5 is_stmt 1 view .LVU30
 256:BSP/BSP.h/FusionMath.h ****     return result;
 125              		.loc 2 256 36 is_stmt 0 view .LVU31
 126 001e 21EE011A 		vmul.f32	s2, s2, s2
 256:BSP/BSP.h/FusionMath.h ****     return result;
 127              		.loc 2 256 19 view .LVU32
 128 0022 8DED071A 		vstr.32	s2, [sp, #28]
 257:BSP/BSP.h/FusionMath.h **** }
 129              		.loc 2 257 5 is_stmt 1 view .LVU33
 257:BSP/BSP.h/FusionMath.h **** }
 130              		.loc 2 257 12 is_stmt 0 view .LVU34
 131 0026 0BAB     		add	r3, sp, #44
 132 0028 05AA     		add	r2, sp, #20
 133 002a 07CA     		ldm	r2, {r0, r1, r2}
 134 002c 83E80700 		stm	r3, {r0, r1, r2}
 135 0030 0DF1200C 		add	ip, sp, #32
 136 0034 8CE80700 		stm	ip, {r0, r1, r2}
 137              	.LBE47:
 138              	.LBE46:
 139              	.LBB48:
 140              	.LBI48:
 228:BSP/BSP.h/FusionMath.h ****     return vector.axis.x + vector.axis.y + vector.axis.z;
 141              		.loc 2 228 21 is_stmt 1 view .LVU35
 142              	.LBB49:
 229:BSP/BSP.h/FusionMath.h **** }
 143              		.loc 2 229 5 view .LVU36
 229:BSP/BSP.h/FusionMath.h **** }
 144              		.loc 2 229 26 is_stmt 0 view .LVU37
 145 0038 30EE200A 		vadd.f32	s0, s0, s1
 146              	.LBE49:
 147              	.LBE48:
 285:BSP/BSP.h/FusionMath.h **** }
 148              		.loc 2 285 1 view .LVU38
 149 003c 30EE010A 		vadd.f32	s0, s0, s2
 150 0040 0EB0     		add	sp, sp, #56
 151              	.LCFI3:
 152              		.cfi_def_cfa_offset 0
 153              		@ sp needed
 154 0042 7047     		bx	lr
 155              		.cfi_endproc
 156              	.LFE11:
 158              		.section	.text.FusionVectorNormalise,"ax",%progbits
 159              		.align	1
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 9


 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 164              	FusionVectorNormalise:
 165              	.LFB13:
 286:BSP/BSP.h/FusionMath.h **** 
 287:BSP/BSP.h/FusionMath.h **** /**
 288:BSP/BSP.h/FusionMath.h ****  * @brief Returns the vector magnitude.
 289:BSP/BSP.h/FusionMath.h ****  * @param vector Vector.
 290:BSP/BSP.h/FusionMath.h ****  * @return Vector magnitude.
 291:BSP/BSP.h/FusionMath.h ****  */
 292:BSP/BSP.h/FusionMath.h **** static inline float FusionVectorMagnitude(const FusionVector vector) {
 293:BSP/BSP.h/FusionMath.h ****     return sqrtf(FusionVectorMagnitudeSquared(vector));
 294:BSP/BSP.h/FusionMath.h **** }
 295:BSP/BSP.h/FusionMath.h **** 
 296:BSP/BSP.h/FusionMath.h **** /**
 297:BSP/BSP.h/FusionMath.h ****  * @brief Returns the normalised vector.
 298:BSP/BSP.h/FusionMath.h ****  * @param vector Vector.
 299:BSP/BSP.h/FusionMath.h ****  * @return Normalised vector.
 300:BSP/BSP.h/FusionMath.h ****  */
 301:BSP/BSP.h/FusionMath.h **** static inline FusionVector FusionVectorNormalise(const FusionVector vector) {
 166              		.loc 2 301 77 is_stmt 1 view -0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 72
 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170 0000 00B5     		push	{lr}
 171              	.LCFI4:
 172              		.cfi_def_cfa_offset 4
 173              		.cfi_offset 14, -4
 174 0002 2DED048B 		vpush.64	{d8, d9}
 175              	.LCFI5:
 176              		.cfi_def_cfa_offset 20
 177              		.cfi_offset 80, -20
 178              		.cfi_offset 81, -16
 179              		.cfi_offset 82, -12
 180              		.cfi_offset 83, -8
 181 0006 93B0     		sub	sp, sp, #76
 182              	.LCFI6:
 183              		.cfi_def_cfa_offset 96
 184 0008 B0EE409A 		vmov.f32	s18, s0
 185 000c F0EE608A 		vmov.f32	s17, s1
 186 0010 B0EE418A 		vmov.f32	s16, s2
 187 0014 8DED050A 		vstr.32	s0, [sp, #20]
 188 0018 CDED060A 		vstr.32	s1, [sp, #24]
 189 001c 8DED071A 		vstr.32	s2, [sp, #28]
 302:BSP/BSP.h/FusionMath.h **** #ifdef FUSION_USE_NORMAL_SQRT
 303:BSP/BSP.h/FusionMath.h ****     const float magnitudeReciprocal = 1.0f / sqrtf(FusionVectorMagnitudeSquared(vector));
 304:BSP/BSP.h/FusionMath.h **** #else
 305:BSP/BSP.h/FusionMath.h ****     const float magnitudeReciprocal = FusionFastInverseSqrt(FusionVectorMagnitudeSquared(vector));
 190              		.loc 2 305 5 view .LVU40
 191              		.loc 2 305 39 is_stmt 0 view .LVU41
 192 0020 FFF7FEFF 		bl	FusionVectorMagnitudeSquared
 193              	.LVL0:
 194              	.LBB50:
 195              	.LBI50:
 169:BSP/BSP.h/FusionMath.h **** 
 196              		.loc 2 169 21 is_stmt 1 view .LVU42
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 10


 197              	.LBB51:
 171:BSP/BSP.h/FusionMath.h ****         float f;
 198              		.loc 2 171 5 view .LVU43
 176:BSP/BSP.h/FusionMath.h ****     union32.i = 0x5F1F1412 - (union32.i >> 1);
 199              		.loc 2 176 5 view .LVU44
 177:BSP/BSP.h/FusionMath.h ****     return union32.f * (1.69000231f - 0.714158168f * x * union32.f * union32.f);
 200              		.loc 2 177 5 view .LVU45
 178:BSP/BSP.h/FusionMath.h **** }
 201              		.loc 2 178 5 view .LVU46
 202 0024 1A4B     		ldr	r3, .L7
 203 0026 10EE102A 		vmov	r2, s0	@ int
 204 002a A3EB6203 		sub	r3, r3, r2, asr #1
 205 002e 07EE103A 		vmov	s14, r3	@ int
 178:BSP/BSP.h/FusionMath.h **** }
 206              		.loc 2 178 52 is_stmt 0 view .LVU47
 207 0032 DFED187A 		vldr.32	s15, .L7+4
 208 0036 60EE277A 		vmul.f32	s15, s0, s15
 178:BSP/BSP.h/FusionMath.h **** }
 209              		.loc 2 178 56 view .LVU48
 210 003a 67EE277A 		vmul.f32	s15, s14, s15
 178:BSP/BSP.h/FusionMath.h **** }
 211              		.loc 2 178 68 view .LVU49
 212 003e 67EE277A 		vmul.f32	s15, s14, s15
 178:BSP/BSP.h/FusionMath.h **** }
 213              		.loc 2 178 37 view .LVU50
 214 0042 DFED156A 		vldr.32	s13, .L7+8
 215 0046 76EEE77A 		vsub.f32	s15, s13, s15
 178:BSP/BSP.h/FusionMath.h **** }
 216              		.loc 2 178 22 view .LVU51
 217 004a 67EE277A 		vmul.f32	s15, s14, s15
 218              	.LVL1:
 178:BSP/BSP.h/FusionMath.h **** }
 219              		.loc 2 178 22 view .LVU52
 220              	.LBE51:
 221              	.LBE50:
 306:BSP/BSP.h/FusionMath.h **** #endif
 307:BSP/BSP.h/FusionMath.h ****     return FusionVectorMultiplyScalar(vector, magnitudeReciprocal);
 222              		.loc 2 307 5 is_stmt 1 view .LVU53
 223              	.LBB52:
 224              	.LBI52:
 238:BSP/BSP.h/FusionMath.h ****     FusionVector result;
 225              		.loc 2 238 28 view .LVU54
 226              	.LBB53:
 239:BSP/BSP.h/FusionMath.h ****     result.axis.x = vector.axis.x * scalar;
 227              		.loc 2 239 5 view .LVU55
 240:BSP/BSP.h/FusionMath.h ****     result.axis.y = vector.axis.y * scalar;
 228              		.loc 2 240 5 view .LVU56
 240:BSP/BSP.h/FusionMath.h ****     result.axis.y = vector.axis.y * scalar;
 229              		.loc 2 240 35 is_stmt 0 view .LVU57
 230 004e 29EE279A 		vmul.f32	s18, s18, s15
 240:BSP/BSP.h/FusionMath.h ****     result.axis.y = vector.axis.y * scalar;
 231              		.loc 2 240 19 view .LVU58
 232 0052 8DED099A 		vstr.32	s18, [sp, #36]
 241:BSP/BSP.h/FusionMath.h ****     result.axis.z = vector.axis.z * scalar;
 233              		.loc 2 241 5 is_stmt 1 view .LVU59
 241:BSP/BSP.h/FusionMath.h ****     result.axis.z = vector.axis.z * scalar;
 234              		.loc 2 241 35 is_stmt 0 view .LVU60
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 11


 235 0056 68EEA78A 		vmul.f32	s17, s17, s15
 241:BSP/BSP.h/FusionMath.h ****     result.axis.z = vector.axis.z * scalar;
 236              		.loc 2 241 19 view .LVU61
 237 005a CDED0A8A 		vstr.32	s17, [sp, #40]
 242:BSP/BSP.h/FusionMath.h ****     return result;
 238              		.loc 2 242 5 is_stmt 1 view .LVU62
 242:BSP/BSP.h/FusionMath.h ****     return result;
 239              		.loc 2 242 35 is_stmt 0 view .LVU63
 240 005e 28EE278A 		vmul.f32	s16, s16, s15
 242:BSP/BSP.h/FusionMath.h ****     return result;
 241              		.loc 2 242 19 view .LVU64
 242 0062 8DED0B8A 		vstr.32	s16, [sp, #44]
 243:BSP/BSP.h/FusionMath.h **** }
 243              		.loc 2 243 5 is_stmt 1 view .LVU65
 243:BSP/BSP.h/FusionMath.h **** }
 244              		.loc 2 243 12 is_stmt 0 view .LVU66
 245 0066 0FAB     		add	r3, sp, #60
 246 0068 09AA     		add	r2, sp, #36
 247 006a 07CA     		ldm	r2, {r0, r1, r2}
 248 006c 83E80700 		stm	r3, {r0, r1, r2}
 249 0070 0DF1300C 		add	ip, sp, #48
 250 0074 8CE80700 		stm	ip, {r0, r1, r2}
 251              	.LVL2:
 243:BSP/BSP.h/FusionMath.h **** }
 252              		.loc 2 243 12 view .LVU67
 253              	.LBE53:
 254              	.LBE52:
 308:BSP/BSP.h/FusionMath.h **** }
 255              		.loc 2 308 1 view .LVU68
 256 0078 9DED0C0A 		vldr.32	s0, [sp, #48]
 257 007c DDED0D0A 		vldr.32	s1, [sp, #52]
 258 0080 9DED0E1A 		vldr.32	s2, [sp, #56]
 259 0084 13B0     		add	sp, sp, #76
 260              	.LCFI7:
 261              		.cfi_def_cfa_offset 20
 262              		@ sp needed
 263 0086 BDEC048B 		vldm	sp!, {d8-d9}
 264              	.LCFI8:
 265              		.cfi_restore 82
 266              		.cfi_restore 83
 267              		.cfi_restore 80
 268              		.cfi_restore 81
 269              		.cfi_def_cfa_offset 4
 270 008a 5DF804FB 		ldr	pc, [sp], #4
 271              	.L8:
 272 008e 00BF     		.align	2
 273              	.L7:
 274 0090 12141F5F 		.word	1595872274
 275 0094 12D3363F 		.word	1060557586
 276 0098 FF51D83F 		.word	1071141375
 277              		.cfi_endproc
 278              	.LFE13:
 280              		.section	.text.FusionQuaternionMultiply,"ax",%progbits
 281              		.align	1
 282              		.syntax unified
 283              		.thumb
 284              		.thumb_func
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 12


 286              	FusionQuaternionMultiply:
 287              	.LFB15:
 309:BSP/BSP.h/FusionMath.h **** 
 310:BSP/BSP.h/FusionMath.h **** //------------------------------------------------------------------------------
 311:BSP/BSP.h/FusionMath.h **** // Inline functions - Quaternion operations
 312:BSP/BSP.h/FusionMath.h **** 
 313:BSP/BSP.h/FusionMath.h **** /**
 314:BSP/BSP.h/FusionMath.h ****  * @brief Returns the sum of two quaternions.
 315:BSP/BSP.h/FusionMath.h ****  * @param quaternionA Quaternion A.
 316:BSP/BSP.h/FusionMath.h ****  * @param quaternionB Quaternion B.
 317:BSP/BSP.h/FusionMath.h ****  * @return Sum of two quaternions.
 318:BSP/BSP.h/FusionMath.h ****  */
 319:BSP/BSP.h/FusionMath.h **** static inline FusionQuaternion FusionQuaternionAdd(const FusionQuaternion quaternionA, const Fusion
 320:BSP/BSP.h/FusionMath.h ****     FusionQuaternion result;
 321:BSP/BSP.h/FusionMath.h ****     result.element.w = quaternionA.element.w + quaternionB.element.w;
 322:BSP/BSP.h/FusionMath.h ****     result.element.x = quaternionA.element.x + quaternionB.element.x;
 323:BSP/BSP.h/FusionMath.h ****     result.element.y = quaternionA.element.y + quaternionB.element.y;
 324:BSP/BSP.h/FusionMath.h ****     result.element.z = quaternionA.element.z + quaternionB.element.z;
 325:BSP/BSP.h/FusionMath.h ****     return result;
 326:BSP/BSP.h/FusionMath.h **** }
 327:BSP/BSP.h/FusionMath.h **** 
 328:BSP/BSP.h/FusionMath.h **** /**
 329:BSP/BSP.h/FusionMath.h ****  * @brief Returns the multiplication of two quaternions.
 330:BSP/BSP.h/FusionMath.h ****  * @param quaternionA Quaternion A (to be post-multiplied).
 331:BSP/BSP.h/FusionMath.h ****  * @param quaternionB Quaternion B (to be pre-multiplied).
 332:BSP/BSP.h/FusionMath.h ****  * @return Multiplication of two quaternions.
 333:BSP/BSP.h/FusionMath.h ****  */
 334:BSP/BSP.h/FusionMath.h **** static inline FusionQuaternion FusionQuaternionMultiply(const FusionQuaternion quaternionA, const F
 288              		.loc 2 334 129 is_stmt 1 view -0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 80
 291              		@ frame_needed = 0, uses_anonymous_args = 0
 292              		@ link register save eliminated.
 293 0000 94B0     		sub	sp, sp, #80
 294              	.LCFI9:
 295              		.cfi_def_cfa_offset 80
 296 0002 8DED080A 		vstr.32	s0, [sp, #32]
 297 0006 CDED090A 		vstr.32	s1, [sp, #36]
 298 000a 8DED0A1A 		vstr.32	s2, [sp, #40]
 299 000e CDED0B1A 		vstr.32	s3, [sp, #44]
 300 0012 8DED042A 		vstr.32	s4, [sp, #16]
 301 0016 CDED052A 		vstr.32	s5, [sp, #20]
 302 001a 8DED063A 		vstr.32	s6, [sp, #24]
 303 001e CDED073A 		vstr.32	s7, [sp, #28]
 335:BSP/BSP.h/FusionMath.h **** #define A quaternionA.element
 336:BSP/BSP.h/FusionMath.h **** #define B quaternionB.element
 337:BSP/BSP.h/FusionMath.h ****     FusionQuaternion result;
 304              		.loc 2 337 5 view .LVU70
 338:BSP/BSP.h/FusionMath.h ****     result.element.w = A.w * B.w - A.x * B.x - A.y * B.y - A.z * B.z;
 305              		.loc 2 338 5 view .LVU71
 306              		.loc 2 338 28 is_stmt 0 view .LVU72
 307 0022 60EE027A 		vmul.f32	s15, s0, s4
 308              		.loc 2 338 40 view .LVU73
 309 0026 20EEA27A 		vmul.f32	s14, s1, s5
 310              		.loc 2 338 34 view .LVU74
 311 002a 77EEC77A 		vsub.f32	s15, s15, s14
 312              		.loc 2 338 52 view .LVU75
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 13


 313 002e 21EE037A 		vmul.f32	s14, s2, s6
 314              		.loc 2 338 46 view .LVU76
 315 0032 77EEC77A 		vsub.f32	s15, s15, s14
 316              		.loc 2 338 64 view .LVU77
 317 0036 21EEA37A 		vmul.f32	s14, s3, s7
 318              		.loc 2 338 58 view .LVU78
 319 003a 77EEC77A 		vsub.f32	s15, s15, s14
 320              		.loc 2 338 22 view .LVU79
 321 003e CDED0C7A 		vstr.32	s15, [sp, #48]
 339:BSP/BSP.h/FusionMath.h ****     result.element.x = A.w * B.x + A.x * B.w + A.y * B.z - A.z * B.y;
 322              		.loc 2 339 5 is_stmt 1 view .LVU80
 323              		.loc 2 339 28 is_stmt 0 view .LVU81
 324 0042 60EE227A 		vmul.f32	s15, s0, s5
 325              		.loc 2 339 40 view .LVU82
 326 0046 22EE207A 		vmul.f32	s14, s4, s1
 327              		.loc 2 339 34 view .LVU83
 328 004a 77EE877A 		vadd.f32	s15, s15, s14
 329              		.loc 2 339 52 view .LVU84
 330 004e 21EE237A 		vmul.f32	s14, s2, s7
 331              		.loc 2 339 46 view .LVU85
 332 0052 77EE877A 		vadd.f32	s15, s15, s14
 333              		.loc 2 339 64 view .LVU86
 334 0056 23EE217A 		vmul.f32	s14, s6, s3
 335              		.loc 2 339 58 view .LVU87
 336 005a 77EEC77A 		vsub.f32	s15, s15, s14
 337              		.loc 2 339 22 view .LVU88
 338 005e CDED0D7A 		vstr.32	s15, [sp, #52]
 340:BSP/BSP.h/FusionMath.h ****     result.element.y = A.w * B.y - A.x * B.z + A.y * B.w + A.z * B.x;
 339              		.loc 2 340 5 is_stmt 1 view .LVU89
 340              		.loc 2 340 28 is_stmt 0 view .LVU90
 341 0062 60EE037A 		vmul.f32	s15, s0, s6
 342              		.loc 2 340 40 view .LVU91
 343 0066 20EEA37A 		vmul.f32	s14, s1, s7
 344              		.loc 2 340 34 view .LVU92
 345 006a 77EEC77A 		vsub.f32	s15, s15, s14
 346              		.loc 2 340 52 view .LVU93
 347 006e 22EE017A 		vmul.f32	s14, s4, s2
 348              		.loc 2 340 46 view .LVU94
 349 0072 77EE877A 		vadd.f32	s15, s15, s14
 350              		.loc 2 340 64 view .LVU95
 351 0076 22EEA17A 		vmul.f32	s14, s5, s3
 352              		.loc 2 340 58 view .LVU96
 353 007a 77EE877A 		vadd.f32	s15, s15, s14
 354              		.loc 2 340 22 view .LVU97
 355 007e CDED0E7A 		vstr.32	s15, [sp, #56]
 341:BSP/BSP.h/FusionMath.h ****     result.element.z = A.w * B.z + A.x * B.y - A.y * B.x + A.z * B.w;
 356              		.loc 2 341 5 is_stmt 1 view .LVU98
 357              		.loc 2 341 28 is_stmt 0 view .LVU99
 358 0082 20EE230A 		vmul.f32	s0, s0, s7
 359              		.loc 2 341 40 view .LVU100
 360 0086 60EE830A 		vmul.f32	s1, s1, s6
 361              		.loc 2 341 34 view .LVU101
 362 008a 30EE200A 		vadd.f32	s0, s0, s1
 363              		.loc 2 341 52 view .LVU102
 364 008e 62EE812A 		vmul.f32	s5, s5, s2
 365              		.loc 2 341 46 view .LVU103
 366 0092 70EE622A 		vsub.f32	s5, s0, s5
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 14


 367              		.loc 2 341 64 view .LVU104
 368 0096 22EE212A 		vmul.f32	s4, s4, s3
 369              		.loc 2 341 58 view .LVU105
 370 009a 32EE822A 		vadd.f32	s4, s5, s4
 371              		.loc 2 341 22 view .LVU106
 372 009e 8DED0F2A 		vstr.32	s4, [sp, #60]
 342:BSP/BSP.h/FusionMath.h ****     return result;
 373              		.loc 2 342 5 is_stmt 1 view .LVU107
 374              		.loc 2 342 12 is_stmt 0 view .LVU108
 375 00a2 0CAB     		add	r3, sp, #48
 376 00a4 0FCB     		ldm	r3, {r0, r1, r2, r3}
 377 00a6 0DF1500C 		add	ip, sp, #80
 378 00aa 0CE90F00 		stmdb	ip, {r0, r1, r2, r3}
 343:BSP/BSP.h/FusionMath.h **** #undef A
 344:BSP/BSP.h/FusionMath.h **** #undef B
 345:BSP/BSP.h/FusionMath.h **** }
 379              		.loc 2 345 1 view .LVU109
 380 00ae 9DED100A 		vldr.32	s0, [sp, #64]
 381 00b2 DDED110A 		vldr.32	s1, [sp, #68]
 382 00b6 9DED121A 		vldr.32	s2, [sp, #72]
 383 00ba DDED131A 		vldr.32	s3, [sp, #76]
 384 00be 14B0     		add	sp, sp, #80
 385              	.LCFI10:
 386              		.cfi_def_cfa_offset 0
 387              		@ sp needed
 388 00c0 7047     		bx	lr
 389              		.cfi_endproc
 390              	.LFE15:
 392              		.section	.text.FusionQuaternionMultiplyVector,"ax",%progbits
 393              		.align	1
 394              		.syntax unified
 395              		.thumb
 396              		.thumb_func
 398              	FusionQuaternionMultiplyVector:
 399              	.LFB16:
 346:BSP/BSP.h/FusionMath.h **** 
 347:BSP/BSP.h/FusionMath.h **** /**
 348:BSP/BSP.h/FusionMath.h ****  * @brief Returns the multiplication of a quaternion with a vector.  This is a
 349:BSP/BSP.h/FusionMath.h ****  * normal quaternion multiplication where the vector is treated a
 350:BSP/BSP.h/FusionMath.h ****  * quaternion with a W element value of zero.  The quaternion is post-
 351:BSP/BSP.h/FusionMath.h ****  * multiplied by the vector.
 352:BSP/BSP.h/FusionMath.h ****  * @param quaternion Quaternion.
 353:BSP/BSP.h/FusionMath.h ****  * @param vector Vector.
 354:BSP/BSP.h/FusionMath.h ****  * @return Multiplication of a quaternion with a vector.
 355:BSP/BSP.h/FusionMath.h ****  */
 356:BSP/BSP.h/FusionMath.h **** static inline FusionQuaternion FusionQuaternionMultiplyVector(const FusionQuaternion quaternion, co
 400              		.loc 2 356 125 is_stmt 1 view -0
 401              		.cfi_startproc
 402              		@ args = 0, pretend = 0, frame = 80
 403              		@ frame_needed = 0, uses_anonymous_args = 0
 404              		@ link register save eliminated.
 405 0000 94B0     		sub	sp, sp, #80
 406              	.LCFI11:
 407              		.cfi_def_cfa_offset 80
 408 0002 8DED080A 		vstr.32	s0, [sp, #32]
 409 0006 CDED090A 		vstr.32	s1, [sp, #36]
 410 000a 8DED0A1A 		vstr.32	s2, [sp, #40]
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 15


 411 000e CDED0B1A 		vstr.32	s3, [sp, #44]
 412 0012 8DED052A 		vstr.32	s4, [sp, #20]
 413 0016 CDED062A 		vstr.32	s5, [sp, #24]
 414 001a 8DED073A 		vstr.32	s6, [sp, #28]
 357:BSP/BSP.h/FusionMath.h **** #define Q quaternion.element
 358:BSP/BSP.h/FusionMath.h **** #define V vector.axis
 359:BSP/BSP.h/FusionMath.h ****     FusionQuaternion result;
 415              		.loc 2 359 5 view .LVU111
 360:BSP/BSP.h/FusionMath.h ****     result.element.w = -Q.x * V.x - Q.y * V.y - Q.z * V.z;
 416              		.loc 2 360 5 view .LVU112
 417              		.loc 2 360 29 is_stmt 0 view .LVU113
 418 001e 60EEC27A 		vnmul.f32	s15, s1, s4
 419              		.loc 2 360 41 view .LVU114
 420 0022 21EE227A 		vmul.f32	s14, s2, s5
 421              		.loc 2 360 35 view .LVU115
 422 0026 77EEC77A 		vsub.f32	s15, s15, s14
 423              		.loc 2 360 53 view .LVU116
 424 002a 21EE837A 		vmul.f32	s14, s3, s6
 425              		.loc 2 360 47 view .LVU117
 426 002e 77EEC77A 		vsub.f32	s15, s15, s14
 427              		.loc 2 360 22 view .LVU118
 428 0032 CDED0C7A 		vstr.32	s15, [sp, #48]
 361:BSP/BSP.h/FusionMath.h ****     result.element.x = Q.w * V.x + Q.y * V.z - Q.z * V.y;
 429              		.loc 2 361 5 is_stmt 1 view .LVU119
 430              		.loc 2 361 28 is_stmt 0 view .LVU120
 431 0036 62EE007A 		vmul.f32	s15, s4, s0
 432              		.loc 2 361 40 view .LVU121
 433 003a 21EE037A 		vmul.f32	s14, s2, s6
 434              		.loc 2 361 34 view .LVU122
 435 003e 77EE877A 		vadd.f32	s15, s15, s14
 436              		.loc 2 361 52 view .LVU123
 437 0042 22EEA17A 		vmul.f32	s14, s5, s3
 438              		.loc 2 361 46 view .LVU124
 439 0046 77EEC77A 		vsub.f32	s15, s15, s14
 440              		.loc 2 361 22 view .LVU125
 441 004a CDED0D7A 		vstr.32	s15, [sp, #52]
 362:BSP/BSP.h/FusionMath.h ****     result.element.y = Q.w * V.y - Q.x * V.z + Q.z * V.x;
 442              		.loc 2 362 5 is_stmt 1 view .LVU126
 443              		.loc 2 362 28 is_stmt 0 view .LVU127
 444 004e 62EE807A 		vmul.f32	s15, s5, s0
 445              		.loc 2 362 40 view .LVU128
 446 0052 20EE837A 		vmul.f32	s14, s1, s6
 447              		.loc 2 362 34 view .LVU129
 448 0056 77EEC77A 		vsub.f32	s15, s15, s14
 449              		.loc 2 362 52 view .LVU130
 450 005a 62EE211A 		vmul.f32	s3, s4, s3
 451              		.loc 2 362 46 view .LVU131
 452 005e 77EEA17A 		vadd.f32	s15, s15, s3
 453              		.loc 2 362 22 view .LVU132
 454 0062 CDED0E7A 		vstr.32	s15, [sp, #56]
 363:BSP/BSP.h/FusionMath.h ****     result.element.z = Q.w * V.z + Q.x * V.y - Q.y * V.x;
 455              		.loc 2 363 5 is_stmt 1 view .LVU133
 456              		.loc 2 363 28 is_stmt 0 view .LVU134
 457 0066 23EE003A 		vmul.f32	s6, s6, s0
 458              		.loc 2 363 40 view .LVU135
 459 006a 60EEA20A 		vmul.f32	s1, s1, s5
 460              		.loc 2 363 34 view .LVU136
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 16


 461 006e 33EE203A 		vadd.f32	s6, s6, s1
 462              		.loc 2 363 52 view .LVU137
 463 0072 22EE012A 		vmul.f32	s4, s4, s2
 464              		.loc 2 363 46 view .LVU138
 465 0076 33EE423A 		vsub.f32	s6, s6, s4
 466              		.loc 2 363 22 view .LVU139
 467 007a 8DED0F3A 		vstr.32	s6, [sp, #60]
 364:BSP/BSP.h/FusionMath.h ****     return result;
 468              		.loc 2 364 5 is_stmt 1 view .LVU140
 469              		.loc 2 364 12 is_stmt 0 view .LVU141
 470 007e 0CAB     		add	r3, sp, #48
 471 0080 0FCB     		ldm	r3, {r0, r1, r2, r3}
 472 0082 0DF1500C 		add	ip, sp, #80
 473 0086 0CE90F00 		stmdb	ip, {r0, r1, r2, r3}
 365:BSP/BSP.h/FusionMath.h **** #undef Q
 366:BSP/BSP.h/FusionMath.h **** #undef V
 367:BSP/BSP.h/FusionMath.h **** }
 474              		.loc 2 367 1 view .LVU142
 475 008a 9DED100A 		vldr.32	s0, [sp, #64]
 476 008e DDED110A 		vldr.32	s1, [sp, #68]
 477 0092 9DED121A 		vldr.32	s2, [sp, #72]
 478 0096 DDED131A 		vldr.32	s3, [sp, #76]
 479 009a 14B0     		add	sp, sp, #80
 480              	.LCFI12:
 481              		.cfi_def_cfa_offset 0
 482              		@ sp needed
 483 009c 7047     		bx	lr
 484              		.cfi_endproc
 485              	.LFE16:
 487              		.section	.text.FusionQuaternionNormalise,"ax",%progbits
 488              		.align	1
 489              		.syntax unified
 490              		.thumb
 491              		.thumb_func
 493              	FusionQuaternionNormalise:
 494              	.LFB17:
 368:BSP/BSP.h/FusionMath.h **** 
 369:BSP/BSP.h/FusionMath.h **** /**
 370:BSP/BSP.h/FusionMath.h ****  * @brief Returns the normalised quaternion.
 371:BSP/BSP.h/FusionMath.h ****  * @param quaternion Quaternion.
 372:BSP/BSP.h/FusionMath.h ****  * @return Normalised quaternion.
 373:BSP/BSP.h/FusionMath.h ****  */
 374:BSP/BSP.h/FusionMath.h **** static inline FusionQuaternion FusionQuaternionNormalise(const FusionQuaternion quaternion) {
 495              		.loc 2 374 93 is_stmt 1 view -0
 496              		.cfi_startproc
 497              		@ args = 0, pretend = 0, frame = 64
 498              		@ frame_needed = 0, uses_anonymous_args = 0
 499              		@ link register save eliminated.
 500 0000 90B0     		sub	sp, sp, #64
 501              	.LCFI13:
 502              		.cfi_def_cfa_offset 64
 503 0002 8DED040A 		vstr.32	s0, [sp, #16]
 504 0006 CDED050A 		vstr.32	s1, [sp, #20]
 505 000a 8DED061A 		vstr.32	s2, [sp, #24]
 506 000e CDED071A 		vstr.32	s3, [sp, #28]
 375:BSP/BSP.h/FusionMath.h **** #define Q quaternion.element
 376:BSP/BSP.h/FusionMath.h **** #ifdef FUSION_USE_NORMAL_SQRT
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 17


 377:BSP/BSP.h/FusionMath.h ****     const float magnitudeReciprocal = 1.0f / sqrtf(Q.w * Q.w + Q.x * Q.x + Q.y * Q.y + Q.z * Q.z);
 378:BSP/BSP.h/FusionMath.h **** #else
 379:BSP/BSP.h/FusionMath.h ****     const float magnitudeReciprocal = FusionFastInverseSqrt(Q.w * Q.w + Q.x * Q.x + Q.y * Q.y + Q.z
 507              		.loc 2 379 5 view .LVU144
 508              		.loc 2 379 65 is_stmt 0 view .LVU145
 509 0012 60EE007A 		vmul.f32	s15, s0, s0
 510              		.loc 2 379 77 view .LVU146
 511 0016 20EEA07A 		vmul.f32	s14, s1, s1
 512              		.loc 2 379 71 view .LVU147
 513 001a 77EE877A 		vadd.f32	s15, s15, s14
 514              		.loc 2 379 89 view .LVU148
 515 001e 21EE017A 		vmul.f32	s14, s2, s2
 516              		.loc 2 379 83 view .LVU149
 517 0022 77EE877A 		vadd.f32	s15, s15, s14
 518              		.loc 2 379 101 view .LVU150
 519 0026 21EEA17A 		vmul.f32	s14, s3, s3
 520              		.loc 2 379 39 view .LVU151
 521 002a 77EE877A 		vadd.f32	s15, s15, s14
 522              	.LVL3:
 523              	.LBB54:
 524              	.LBI54:
 169:BSP/BSP.h/FusionMath.h **** 
 525              		.loc 2 169 21 is_stmt 1 view .LVU152
 526              	.LBB55:
 171:BSP/BSP.h/FusionMath.h ****         float f;
 527              		.loc 2 171 5 view .LVU153
 176:BSP/BSP.h/FusionMath.h ****     union32.i = 0x5F1F1412 - (union32.i >> 1);
 528              		.loc 2 176 5 view .LVU154
 177:BSP/BSP.h/FusionMath.h ****     return union32.f * (1.69000231f - 0.714158168f * x * union32.f * union32.f);
 529              		.loc 2 177 5 view .LVU155
 178:BSP/BSP.h/FusionMath.h **** }
 530              		.loc 2 178 5 view .LVU156
 531 002e 1A4B     		ldr	r3, .L15
 532 0030 17EE902A 		vmov	r2, s15	@ int
 533 0034 A3EB6203 		sub	r3, r3, r2, asr #1
 534 0038 07EE103A 		vmov	s14, r3	@ int
 178:BSP/BSP.h/FusionMath.h **** }
 535              		.loc 2 178 52 is_stmt 0 view .LVU157
 536 003c DFED176A 		vldr.32	s13, .L15+4
 537 0040 67EEA67A 		vmul.f32	s15, s15, s13
 538              	.LVL4:
 178:BSP/BSP.h/FusionMath.h **** }
 539              		.loc 2 178 56 view .LVU158
 540 0044 67EE277A 		vmul.f32	s15, s14, s15
 178:BSP/BSP.h/FusionMath.h **** }
 541              		.loc 2 178 68 view .LVU159
 542 0048 67EE277A 		vmul.f32	s15, s14, s15
 178:BSP/BSP.h/FusionMath.h **** }
 543              		.loc 2 178 37 view .LVU160
 544 004c DFED146A 		vldr.32	s13, .L15+8
 545 0050 76EEE77A 		vsub.f32	s15, s13, s15
 178:BSP/BSP.h/FusionMath.h **** }
 546              		.loc 2 178 22 view .LVU161
 547 0054 67EE277A 		vmul.f32	s15, s14, s15
 548              	.LVL5:
 178:BSP/BSP.h/FusionMath.h **** }
 549              		.loc 2 178 22 view .LVU162
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 18


 550              	.LBE55:
 551              	.LBE54:
 380:BSP/BSP.h/FusionMath.h **** #endif
 381:BSP/BSP.h/FusionMath.h ****     FusionQuaternion normalisedQuaternion;
 552              		.loc 2 381 5 is_stmt 1 view .LVU163
 382:BSP/BSP.h/FusionMath.h ****     normalisedQuaternion.element.w = Q.w * magnitudeReciprocal;
 553              		.loc 2 382 5 view .LVU164
 554              		.loc 2 382 42 is_stmt 0 view .LVU165
 555 0058 20EE270A 		vmul.f32	s0, s0, s15
 556              		.loc 2 382 36 view .LVU166
 557 005c 8DED080A 		vstr.32	s0, [sp, #32]
 383:BSP/BSP.h/FusionMath.h ****     normalisedQuaternion.element.x = Q.x * magnitudeReciprocal;
 558              		.loc 2 383 5 is_stmt 1 view .LVU167
 559              		.loc 2 383 42 is_stmt 0 view .LVU168
 560 0060 60EEA70A 		vmul.f32	s1, s1, s15
 561              		.loc 2 383 36 view .LVU169
 562 0064 CDED090A 		vstr.32	s1, [sp, #36]
 384:BSP/BSP.h/FusionMath.h ****     normalisedQuaternion.element.y = Q.y * magnitudeReciprocal;
 563              		.loc 2 384 5 is_stmt 1 view .LVU170
 564              		.loc 2 384 42 is_stmt 0 view .LVU171
 565 0068 21EE271A 		vmul.f32	s2, s2, s15
 566              		.loc 2 384 36 view .LVU172
 567 006c 8DED0A1A 		vstr.32	s2, [sp, #40]
 385:BSP/BSP.h/FusionMath.h ****     normalisedQuaternion.element.z = Q.z * magnitudeReciprocal;
 568              		.loc 2 385 5 is_stmt 1 view .LVU173
 569              		.loc 2 385 42 is_stmt 0 view .LVU174
 570 0070 61EEA71A 		vmul.f32	s3, s3, s15
 571              		.loc 2 385 36 view .LVU175
 572 0074 CDED0B1A 		vstr.32	s3, [sp, #44]
 386:BSP/BSP.h/FusionMath.h ****     return normalisedQuaternion;
 573              		.loc 2 386 5 is_stmt 1 view .LVU176
 574              		.loc 2 386 12 is_stmt 0 view .LVU177
 575 0078 08AB     		add	r3, sp, #32
 576 007a 0FCB     		ldm	r3, {r0, r1, r2, r3}
 577 007c 0DF1400C 		add	ip, sp, #64
 578 0080 0CE90F00 		stmdb	ip, {r0, r1, r2, r3}
 387:BSP/BSP.h/FusionMath.h **** #undef Q
 388:BSP/BSP.h/FusionMath.h **** }
 579              		.loc 2 388 1 view .LVU178
 580 0084 9DED0C0A 		vldr.32	s0, [sp, #48]
 581 0088 DDED0D0A 		vldr.32	s1, [sp, #52]
 582 008c 9DED0E1A 		vldr.32	s2, [sp, #56]
 583 0090 DDED0F1A 		vldr.32	s3, [sp, #60]
 584 0094 10B0     		add	sp, sp, #64
 585              	.LCFI14:
 586              		.cfi_def_cfa_offset 0
 587              		@ sp needed
 588 0096 7047     		bx	lr
 589              	.L16:
 590              		.align	2
 591              	.L15:
 592 0098 12141F5F 		.word	1595872274
 593 009c 12D3363F 		.word	1060557586
 594 00a0 FF51D83F 		.word	1071141375
 595              		.cfi_endproc
 596              	.LFE17:
 598              		.section	.text.FusionVectorMagnitude,"ax",%progbits
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 19


 599              		.align	1
 600              		.syntax unified
 601              		.thumb
 602              		.thumb_func
 604              	FusionVectorMagnitude:
 605              	.LFB12:
 292:BSP/BSP.h/FusionMath.h ****     return sqrtf(FusionVectorMagnitudeSquared(vector));
 606              		.loc 2 292 70 is_stmt 1 view -0
 607              		.cfi_startproc
 608              		@ args = 0, pretend = 0, frame = 16
 609              		@ frame_needed = 0, uses_anonymous_args = 0
 610 0000 00B5     		push	{lr}
 611              	.LCFI15:
 612              		.cfi_def_cfa_offset 4
 613              		.cfi_offset 14, -4
 614 0002 85B0     		sub	sp, sp, #20
 615              	.LCFI16:
 616              		.cfi_def_cfa_offset 24
 617 0004 8DED010A 		vstr.32	s0, [sp, #4]
 618 0008 CDED020A 		vstr.32	s1, [sp, #8]
 619 000c 8DED031A 		vstr.32	s2, [sp, #12]
 293:BSP/BSP.h/FusionMath.h **** }
 620              		.loc 2 293 5 view .LVU180
 293:BSP/BSP.h/FusionMath.h **** }
 621              		.loc 2 293 12 is_stmt 0 view .LVU181
 622 0010 FFF7FEFF 		bl	FusionVectorMagnitudeSquared
 623              	.LVL6:
 624 0014 FFF7FEFF 		bl	sqrtf
 625              	.LVL7:
 294:BSP/BSP.h/FusionMath.h **** 
 626              		.loc 2 294 1 view .LVU182
 627 0018 05B0     		add	sp, sp, #20
 628              	.LCFI17:
 629              		.cfi_def_cfa_offset 4
 630              		@ sp needed
 631 001a 5DF804FB 		ldr	pc, [sp], #4
 632              		.cfi_endproc
 633              	.LFE12:
 635              		.section	.text.FusionAsin,"ax",%progbits
 636              		.align	1
 637              		.syntax unified
 638              		.thumb
 639              		.thumb_func
 641              	FusionAsin:
 642              	.LVL8:
 643              	.LFB2:
 148:BSP/BSP.h/FusionMath.h ****     if (value <= -1.0f) {
 644              		.loc 2 148 51 is_stmt 1 view -0
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 0
 647              		@ frame_needed = 0, uses_anonymous_args = 0
 149:BSP/BSP.h/FusionMath.h ****         return (float) M_PI / -2.0f;
 648              		.loc 2 149 5 view .LVU184
 149:BSP/BSP.h/FusionMath.h ****         return (float) M_PI / -2.0f;
 649              		.loc 2 149 8 is_stmt 0 view .LVU185
 650 0000 FFEE007A 		vmov.f32	s15, #-1.0e+0
 651 0004 B4EEE70A 		vcmpe.f32	s0, s15
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 20


 652 0008 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 653 000c 0DD9     		bls	.L21
 152:BSP/BSP.h/FusionMath.h ****         return (float) M_PI / 2.0f;
 654              		.loc 2 152 5 is_stmt 1 view .LVU186
 152:BSP/BSP.h/FusionMath.h ****         return (float) M_PI / 2.0f;
 655              		.loc 2 152 8 is_stmt 0 view .LVU187
 656 000e F7EE007A 		vmov.f32	s15, #1.0e+0
 657 0012 B4EEE70A 		vcmpe.f32	s0, s15
 658 0016 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 659 001a 02DB     		blt	.L27
 153:BSP/BSP.h/FusionMath.h ****     }
 660              		.loc 2 153 29 view .LVU188
 661 001c 9FED040A 		vldr.32	s0, .L28
 662              	.LVL9:
 156:BSP/BSP.h/FusionMath.h **** 
 663              		.loc 2 156 1 view .LVU189
 664 0020 7047     		bx	lr
 665              	.LVL10:
 666              	.L27:
 148:BSP/BSP.h/FusionMath.h ****     if (value <= -1.0f) {
 667              		.loc 2 148 51 view .LVU190
 668 0022 08B5     		push	{r3, lr}
 669              	.LCFI18:
 670              		.cfi_def_cfa_offset 8
 671              		.cfi_offset 3, -8
 672              		.cfi_offset 14, -4
 155:BSP/BSP.h/FusionMath.h **** }
 673              		.loc 2 155 5 is_stmt 1 view .LVU191
 155:BSP/BSP.h/FusionMath.h **** }
 674              		.loc 2 155 12 is_stmt 0 view .LVU192
 675 0024 FFF7FEFF 		bl	asinf
 676              	.LVL11:
 156:BSP/BSP.h/FusionMath.h **** 
 677              		.loc 2 156 1 view .LVU193
 678 0028 08BD     		pop	{r3, pc}
 679              	.LVL12:
 680              	.L21:
 681              	.LCFI19:
 682              		.cfi_def_cfa_offset 0
 683              		.cfi_restore 3
 684              		.cfi_restore 14
 150:BSP/BSP.h/FusionMath.h ****     }
 685              		.loc 2 150 29 view .LVU194
 686 002a 9FED020A 		vldr.32	s0, .L28+4
 687              	.LVL13:
 150:BSP/BSP.h/FusionMath.h ****     }
 688              		.loc 2 150 29 view .LVU195
 689 002e 7047     		bx	lr
 690              	.L29:
 691              		.align	2
 692              	.L28:
 693 0030 DB0FC93F 		.word	1070141403
 694 0034 DB0FC9BF 		.word	-1077342245
 695              		.cfi_endproc
 696              	.LFE2:
 698              		.section	.text.FusionAhrsReset,"ax",%progbits
 699              		.align	1
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 21


 700              		.global	FusionAhrsReset
 701              		.syntax unified
 702              		.thumb
 703              		.thumb_func
 705              	FusionAhrsReset:
 706              	.LVL14:
 707              	.LFB22:
   1:BSP/BSP.c/FusionAhrs.c **** /**
   2:BSP/BSP.c/FusionAhrs.c ****  * @file FusionAhrs.c
   3:BSP/BSP.c/FusionAhrs.c ****  * @author Seb Madgwick
   4:BSP/BSP.c/FusionAhrs.c ****  * @brief AHRS algorithm to combine gyroscope, accelerometer, and magnetometer
   5:BSP/BSP.c/FusionAhrs.c ****  * measurements into a single measurement of orientation relative to the Earth.
   6:BSP/BSP.c/FusionAhrs.c ****  */
   7:BSP/BSP.c/FusionAhrs.c **** 
   8:BSP/BSP.c/FusionAhrs.c **** //------------------------------------------------------------------------------
   9:BSP/BSP.c/FusionAhrs.c **** // Includes
  10:BSP/BSP.c/FusionAhrs.c **** 
  11:BSP/BSP.c/FusionAhrs.c **** #include <float.h> // FLT_MAX
  12:BSP/BSP.c/FusionAhrs.c **** #include "FusionAhrs.h"
  13:BSP/BSP.c/FusionAhrs.c **** #include "FusionCompass.h"
  14:BSP/BSP.c/FusionAhrs.c **** #include <math.h> // atan2f, cosf, powf, sinf
  15:BSP/BSP.c/FusionAhrs.c **** 
  16:BSP/BSP.c/FusionAhrs.c **** //------------------------------------------------------------------------------
  17:BSP/BSP.c/FusionAhrs.c **** // Definitions
  18:BSP/BSP.c/FusionAhrs.c **** 
  19:BSP/BSP.c/FusionAhrs.c **** /**
  20:BSP/BSP.c/FusionAhrs.c ****  * @brief Initial gain used during the initialisation.
  21:BSP/BSP.c/FusionAhrs.c ****  */
  22:BSP/BSP.c/FusionAhrs.c **** #define INITIAL_GAIN (10.0f)
  23:BSP/BSP.c/FusionAhrs.c **** 
  24:BSP/BSP.c/FusionAhrs.c **** /**
  25:BSP/BSP.c/FusionAhrs.c ****  * @brief Initialisation period in seconds.
  26:BSP/BSP.c/FusionAhrs.c ****  */
  27:BSP/BSP.c/FusionAhrs.c **** #define INITIALISATION_PERIOD (3.0f)
  28:BSP/BSP.c/FusionAhrs.c **** 
  29:BSP/BSP.c/FusionAhrs.c **** //------------------------------------------------------------------------------
  30:BSP/BSP.c/FusionAhrs.c **** // Functions
  31:BSP/BSP.c/FusionAhrs.c **** 
  32:BSP/BSP.c/FusionAhrs.c **** /**
  33:BSP/BSP.c/FusionAhrs.c ****  * @brief Initialises the AHRS algorithm structure.
  34:BSP/BSP.c/FusionAhrs.c ****  * @param ahrs AHRS algorithm structure.
  35:BSP/BSP.c/FusionAhrs.c ****  */
  36:BSP/BSP.c/FusionAhrs.c **** void FusionAhrsInitialise(FusionAhrs *const ahrs) {
  37:BSP/BSP.c/FusionAhrs.c ****     const FusionAhrsSettings settings = {
  38:BSP/BSP.c/FusionAhrs.c ****             .gain = 1.5f,
  39:BSP/BSP.c/FusionAhrs.c ****             .accelerationRejection = 180.0f,
  40:BSP/BSP.c/FusionAhrs.c ****             .magneticRejection = 180.0f,
  41:BSP/BSP.c/FusionAhrs.c ****             .rejectionTimeout = 0,
  42:BSP/BSP.c/FusionAhrs.c ****     };
  43:BSP/BSP.c/FusionAhrs.c ****     FusionAhrsSetSettings(ahrs, &settings);
  44:BSP/BSP.c/FusionAhrs.c ****     FusionAhrsReset(ahrs);
  45:BSP/BSP.c/FusionAhrs.c **** }
  46:BSP/BSP.c/FusionAhrs.c **** 
  47:BSP/BSP.c/FusionAhrs.c **** /**
  48:BSP/BSP.c/FusionAhrs.c ****  * @brief Resets the AHRS algorithm.  This is equivalent to reinitialising the
  49:BSP/BSP.c/FusionAhrs.c ****  * algorithm while maintaining the current settings.
  50:BSP/BSP.c/FusionAhrs.c ****  * @param ahrs AHRS algorithm structure.
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 22


  51:BSP/BSP.c/FusionAhrs.c ****  */
  52:BSP/BSP.c/FusionAhrs.c **** void FusionAhrsReset(FusionAhrs *const ahrs) {
 708              		.loc 1 52 46 is_stmt 1 view -0
 709              		.cfi_startproc
 710              		@ args = 0, pretend = 0, frame = 0
 711              		@ frame_needed = 0, uses_anonymous_args = 0
 712              		@ link register save eliminated.
  53:BSP/BSP.c/FusionAhrs.c ****     ahrs->quaternion = FUSION_IDENTITY_QUATERNION;
 713              		.loc 1 53 5 view .LVU197
 714              		.loc 1 53 22 is_stmt 0 view .LVU198
 715 0000 4FF07E53 		mov	r3, #1065353216
 716 0004 0361     		str	r3, [r0, #16]	@ float
 717 0006 0023     		movs	r3, #0
 718 0008 4361     		str	r3, [r0, #20]	@ float
 719 000a 8361     		str	r3, [r0, #24]	@ float
 720 000c C361     		str	r3, [r0, #28]	@ float
  54:BSP/BSP.c/FusionAhrs.c ****     ahrs->accelerometer = FUSION_VECTOR_ZERO;
 721              		.loc 1 54 5 is_stmt 1 view .LVU199
 722              		.loc 1 54 25 is_stmt 0 view .LVU200
 723 000e 0362     		str	r3, [r0, #32]	@ float
 724 0010 4362     		str	r3, [r0, #36]	@ float
 725 0012 8362     		str	r3, [r0, #40]	@ float
  55:BSP/BSP.c/FusionAhrs.c ****     ahrs->initialising = true;
 726              		.loc 1 55 5 is_stmt 1 view .LVU201
 727              		.loc 1 55 24 is_stmt 0 view .LVU202
 728 0014 0122     		movs	r2, #1
 729 0016 80F82C20 		strb	r2, [r0, #44]
  56:BSP/BSP.c/FusionAhrs.c ****     ahrs->rampedGain = INITIAL_GAIN;
 730              		.loc 1 56 5 is_stmt 1 view .LVU203
 731              		.loc 1 56 22 is_stmt 0 view .LVU204
 732 001a 0A4A     		ldr	r2, .L31
 733 001c 0263     		str	r2, [r0, #48]	@ float
  57:BSP/BSP.c/FusionAhrs.c ****     ahrs->halfAccelerometerFeedback = FUSION_VECTOR_ZERO;
 734              		.loc 1 57 5 is_stmt 1 view .LVU205
 735              		.loc 1 57 37 is_stmt 0 view .LVU206
 736 001e 8363     		str	r3, [r0, #56]	@ float
 737 0020 C363     		str	r3, [r0, #60]	@ float
 738 0022 0364     		str	r3, [r0, #64]	@ float
  58:BSP/BSP.c/FusionAhrs.c ****     ahrs->halfMagnetometerFeedback = FUSION_VECTOR_ZERO;
 739              		.loc 1 58 5 is_stmt 1 view .LVU207
 740              		.loc 1 58 36 is_stmt 0 view .LVU208
 741 0024 4364     		str	r3, [r0, #68]	@ float
 742 0026 8364     		str	r3, [r0, #72]	@ float
 743 0028 C364     		str	r3, [r0, #76]	@ float
  59:BSP/BSP.c/FusionAhrs.c ****     ahrs->accelerometerIgnored = false;
 744              		.loc 1 59 5 is_stmt 1 view .LVU209
 745              		.loc 1 59 32 is_stmt 0 view .LVU210
 746 002a 0023     		movs	r3, #0
 747 002c 80F85030 		strb	r3, [r0, #80]
  60:BSP/BSP.c/FusionAhrs.c ****     ahrs->accelerationRejectionTimer = 0;
 748              		.loc 1 60 5 is_stmt 1 view .LVU211
 749              		.loc 1 60 38 is_stmt 0 view .LVU212
 750 0030 4365     		str	r3, [r0, #84]
  61:BSP/BSP.c/FusionAhrs.c ****     ahrs->accelerationRejectionTimeout = false;
 751              		.loc 1 61 5 is_stmt 1 view .LVU213
 752              		.loc 1 61 40 is_stmt 0 view .LVU214
 753 0032 80F85830 		strb	r3, [r0, #88]
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 23


  62:BSP/BSP.c/FusionAhrs.c ****     ahrs->magnetometerIgnored = false;
 754              		.loc 1 62 5 is_stmt 1 view .LVU215
 755              		.loc 1 62 31 is_stmt 0 view .LVU216
 756 0036 80F85930 		strb	r3, [r0, #89]
  63:BSP/BSP.c/FusionAhrs.c ****     ahrs->magneticRejectionTimer = 0;
 757              		.loc 1 63 5 is_stmt 1 view .LVU217
 758              		.loc 1 63 34 is_stmt 0 view .LVU218
 759 003a C365     		str	r3, [r0, #92]
  64:BSP/BSP.c/FusionAhrs.c ****     ahrs->magneticRejectionTimeout = false;
 760              		.loc 1 64 5 is_stmt 1 view .LVU219
 761              		.loc 1 64 36 is_stmt 0 view .LVU220
 762 003c 80F86030 		strb	r3, [r0, #96]
  65:BSP/BSP.c/FusionAhrs.c **** }
 763              		.loc 1 65 1 view .LVU221
 764 0040 7047     		bx	lr
 765              	.L32:
 766 0042 00BF     		.align	2
 767              	.L31:
 768 0044 00002041 		.word	1092616192
 769              		.cfi_endproc
 770              	.LFE22:
 772              		.section	.text.FusionAhrsSetSettings,"ax",%progbits
 773              		.align	1
 774              		.global	FusionAhrsSetSettings
 775              		.syntax unified
 776              		.thumb
 777              		.thumb_func
 779              	FusionAhrsSetSettings:
 780              	.LVL15:
 781              	.LFB23:
  66:BSP/BSP.c/FusionAhrs.c **** 
  67:BSP/BSP.c/FusionAhrs.c **** /**
  68:BSP/BSP.c/FusionAhrs.c ****  * @brief Sets the AHRS algorithm settings.
  69:BSP/BSP.c/FusionAhrs.c ****  * @param ahrs AHRS algorithm structure.
  70:BSP/BSP.c/FusionAhrs.c ****  * @param settings Settings.
  71:BSP/BSP.c/FusionAhrs.c ****  */
  72:BSP/BSP.c/FusionAhrs.c **** void FusionAhrsSetSettings(FusionAhrs *const ahrs, const FusionAhrsSettings *const settings) {
 782              		.loc 1 72 94 is_stmt 1 view -0
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 0
 785              		@ frame_needed = 0, uses_anonymous_args = 0
 786              		.loc 1 72 94 is_stmt 0 view .LVU223
 787 0000 38B5     		push	{r3, r4, r5, lr}
 788              	.LCFI20:
 789              		.cfi_def_cfa_offset 16
 790              		.cfi_offset 3, -16
 791              		.cfi_offset 4, -12
 792              		.cfi_offset 5, -8
 793              		.cfi_offset 14, -4
 794 0002 2DED028B 		vpush.64	{d8}
 795              	.LCFI21:
 796              		.cfi_def_cfa_offset 24
 797              		.cfi_offset 80, -24
 798              		.cfi_offset 81, -20
 799 0006 0446     		mov	r4, r0
 800 0008 0D46     		mov	r5, r1
  73:BSP/BSP.c/FusionAhrs.c ****     ahrs->settings.gain = settings->gain;
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 24


 801              		.loc 1 73 5 is_stmt 1 view .LVU224
 802              		.loc 1 73 35 is_stmt 0 view .LVU225
 803 000a 91ED008A 		vldr.32	s16, [r1]
 804              		.loc 1 73 25 view .LVU226
 805 000e 80ED008A 		vstr.32	s16, [r0]
  74:BSP/BSP.c/FusionAhrs.c ****     if ((settings->accelerationRejection == 0.0f) || (settings->rejectionTimeout == 0)) {
 806              		.loc 1 74 5 is_stmt 1 view .LVU227
 807              		.loc 1 74 18 is_stmt 0 view .LVU228
 808 0012 D1ED017A 		vldr.32	s15, [r1, #4]
 809              		.loc 1 74 8 view .LVU229
 810 0016 F5EE407A 		vcmp.f32	s15, #0
 811 001a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 812 001e 01D0     		beq	.L34
 813              		.loc 1 74 63 discriminator 1 view .LVU230
 814 0020 CB68     		ldr	r3, [r1, #12]
 815              		.loc 1 74 51 discriminator 1 view .LVU231
 816 0022 03BB     		cbnz	r3, .L35
 817              	.L34:
  75:BSP/BSP.c/FusionAhrs.c ****         ahrs->settings.accelerationRejection = FLT_MAX;
 818              		.loc 1 75 9 is_stmt 1 view .LVU232
 819              		.loc 1 75 46 is_stmt 0 view .LVU233
 820 0024 214B     		ldr	r3, .L42
 821 0026 6360     		str	r3, [r4, #4]	@ float
 822              	.LVL16:
 823              	.L36:
  76:BSP/BSP.c/FusionAhrs.c ****     } else {
  77:BSP/BSP.c/FusionAhrs.c ****         ahrs->settings.accelerationRejection = powf(0.5f * sinf(FusionDegreesToRadians(settings->ac
  78:BSP/BSP.c/FusionAhrs.c ****     }
  79:BSP/BSP.c/FusionAhrs.c ****     if ((settings->magneticRejection == 0.0f) || (settings->rejectionTimeout == 0)) {
 824              		.loc 1 79 5 is_stmt 1 view .LVU234
 825              		.loc 1 79 18 is_stmt 0 view .LVU235
 826 0028 D5ED027A 		vldr.32	s15, [r5, #8]
 827              		.loc 1 79 8 view .LVU236
 828 002c F5EE407A 		vcmp.f32	s15, #0
 829 0030 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 830 0034 01D0     		beq	.L37
 831              		.loc 1 79 59 discriminator 1 view .LVU237
 832 0036 EB68     		ldr	r3, [r5, #12]
 833              		.loc 1 79 47 discriminator 1 view .LVU238
 834 0038 33BB     		cbnz	r3, .L38
 835              	.L37:
  80:BSP/BSP.c/FusionAhrs.c ****         ahrs->settings.magneticRejection = FLT_MAX;
 836              		.loc 1 80 9 is_stmt 1 view .LVU239
 837              		.loc 1 80 42 is_stmt 0 view .LVU240
 838 003a 1C4B     		ldr	r3, .L42
 839 003c A360     		str	r3, [r4, #8]	@ float
 840              	.L39:
  81:BSP/BSP.c/FusionAhrs.c ****     } else {
  82:BSP/BSP.c/FusionAhrs.c ****         ahrs->settings.magneticRejection = powf(0.5f * sinf(FusionDegreesToRadians(settings->magnet
  83:BSP/BSP.c/FusionAhrs.c ****     }
  84:BSP/BSP.c/FusionAhrs.c ****     ahrs->settings.rejectionTimeout = settings->rejectionTimeout;
 841              		.loc 1 84 5 is_stmt 1 view .LVU241
 842              		.loc 1 84 47 is_stmt 0 view .LVU242
 843 003e EB68     		ldr	r3, [r5, #12]
 844              		.loc 1 84 37 view .LVU243
 845 0040 E360     		str	r3, [r4, #12]
  85:BSP/BSP.c/FusionAhrs.c ****     if (ahrs->initialising == false) {
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 25


 846              		.loc 1 85 5 is_stmt 1 view .LVU244
 847              		.loc 1 85 13 is_stmt 0 view .LVU245
 848 0042 94F82C30 		ldrb	r3, [r4, #44]	@ zero_extendqisi2
 849              		.loc 1 85 8 view .LVU246
 850 0046 0BB9     		cbnz	r3, .L40
  86:BSP/BSP.c/FusionAhrs.c ****         ahrs->rampedGain = ahrs->settings.gain;
 851              		.loc 1 86 9 is_stmt 1 view .LVU247
 852              		.loc 1 86 26 is_stmt 0 view .LVU248
 853 0048 84ED0C8A 		vstr.32	s16, [r4, #48]
 854              	.L40:
  87:BSP/BSP.c/FusionAhrs.c ****     }
  88:BSP/BSP.c/FusionAhrs.c ****     ahrs->rampedGainStep = (INITIAL_GAIN - ahrs->settings.gain) / INITIALISATION_PERIOD;
 855              		.loc 1 88 5 is_stmt 1 view .LVU249
 856              		.loc 1 88 42 is_stmt 0 view .LVU250
 857 004c F2EE047A 		vmov.f32	s15, #1.0e+1
 858 0050 77EEC87A 		vsub.f32	s15, s15, s16
 859              		.loc 1 88 65 view .LVU251
 860 0054 F0EE086A 		vmov.f32	s13, #3.0e+0
 861 0058 87EEA67A 		vdiv.f32	s14, s15, s13
 862              		.loc 1 88 26 view .LVU252
 863 005c 84ED0D7A 		vstr.32	s14, [r4, #52]
  89:BSP/BSP.c/FusionAhrs.c **** }
 864              		.loc 1 89 1 view .LVU253
 865 0060 BDEC028B 		vldm	sp!, {d8}
 866              	.LCFI22:
 867              		.cfi_remember_state
 868              		.cfi_restore 80
 869              		.cfi_restore 81
 870              		.cfi_def_cfa_offset 16
 871 0064 38BD     		pop	{r3, r4, r5, pc}
 872              	.LVL17:
 873              	.L35:
 874              	.LCFI23:
 875              		.cfi_restore_state
  77:BSP/BSP.c/FusionAhrs.c ****     }
 876              		.loc 1 77 9 is_stmt 1 view .LVU254
 877              	.LBB56:
 878              	.LBI56:
 127:BSP/BSP.h/FusionMath.h ****     return degrees * ((float) M_PI / 180.0f);
 879              		.loc 2 127 21 view .LVU255
 880              	.LBB57:
 128:BSP/BSP.h/FusionMath.h **** }
 881              		.loc 2 128 5 view .LVU256
 128:BSP/BSP.h/FusionMath.h **** }
 882              		.loc 2 128 5 is_stmt 0 view .LVU257
 883              	.LBE57:
 884              	.LBE56:
  77:BSP/BSP.c/FusionAhrs.c ****     }
 885              		.loc 1 77 60 view .LVU258
 886 0066 9FED120A 		vldr.32	s0, .L42+4
 887 006a 27EE800A 		vmul.f32	s0, s15, s0
 888 006e FFF7FEFF 		bl	sinf
 889              	.LVL18:
  77:BSP/BSP.c/FusionAhrs.c ****     }
 890              		.loc 1 77 48 view .LVU259
 891 0072 F0EE000A 		vmov.f32	s1, #2.0e+0
 892 0076 F6EE007A 		vmov.f32	s15, #5.0e-1
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 26


 893 007a 20EE270A 		vmul.f32	s0, s0, s15
 894 007e FFF7FEFF 		bl	powf
 895              	.LVL19:
  77:BSP/BSP.c/FusionAhrs.c ****     }
 896              		.loc 1 77 46 view .LVU260
 897 0082 84ED010A 		vstr.32	s0, [r4, #4]
 898 0086 CFE7     		b	.L36
 899              	.L38:
  82:BSP/BSP.c/FusionAhrs.c ****     }
 900              		.loc 1 82 9 is_stmt 1 view .LVU261
 901              	.LVL20:
 902              	.LBB58:
 903              	.LBI58:
 127:BSP/BSP.h/FusionMath.h ****     return degrees * ((float) M_PI / 180.0f);
 904              		.loc 2 127 21 view .LVU262
 905              	.LBB59:
 128:BSP/BSP.h/FusionMath.h **** }
 906              		.loc 2 128 5 view .LVU263
 128:BSP/BSP.h/FusionMath.h **** }
 907              		.loc 2 128 5 is_stmt 0 view .LVU264
 908              	.LBE59:
 909              	.LBE58:
  82:BSP/BSP.c/FusionAhrs.c ****     }
 910              		.loc 1 82 56 view .LVU265
 911 0088 9FED090A 		vldr.32	s0, .L42+4
 912 008c 27EE800A 		vmul.f32	s0, s15, s0
 913 0090 FFF7FEFF 		bl	sinf
 914              	.LVL21:
  82:BSP/BSP.c/FusionAhrs.c ****     }
 915              		.loc 1 82 44 view .LVU266
 916 0094 F0EE000A 		vmov.f32	s1, #2.0e+0
 917 0098 F6EE007A 		vmov.f32	s15, #5.0e-1
 918 009c 20EE270A 		vmul.f32	s0, s0, s15
 919 00a0 FFF7FEFF 		bl	powf
 920              	.LVL22:
  82:BSP/BSP.c/FusionAhrs.c ****     }
 921              		.loc 1 82 42 view .LVU267
 922 00a4 84ED020A 		vstr.32	s0, [r4, #8]
 923 00a8 C9E7     		b	.L39
 924              	.L43:
 925 00aa 00BF     		.align	2
 926              	.L42:
 927 00ac FFFF7F7F 		.word	2139095039
 928 00b0 35FA8E3C 		.word	1016003125
 929              		.cfi_endproc
 930              	.LFE23:
 932              		.section	.text.FusionAhrsInitialise,"ax",%progbits
 933              		.align	1
 934              		.global	FusionAhrsInitialise
 935              		.syntax unified
 936              		.thumb
 937              		.thumb_func
 939              	FusionAhrsInitialise:
 940              	.LVL23:
 941              	.LFB21:
  36:BSP/BSP.c/FusionAhrs.c ****     const FusionAhrsSettings settings = {
 942              		.loc 1 36 51 is_stmt 1 view -0
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 27


 943              		.cfi_startproc
 944              		@ args = 0, pretend = 0, frame = 16
 945              		@ frame_needed = 0, uses_anonymous_args = 0
  36:BSP/BSP.c/FusionAhrs.c ****     const FusionAhrsSettings settings = {
 946              		.loc 1 36 51 is_stmt 0 view .LVU269
 947 0000 10B5     		push	{r4, lr}
 948              	.LCFI24:
 949              		.cfi_def_cfa_offset 8
 950              		.cfi_offset 4, -8
 951              		.cfi_offset 14, -4
 952 0002 84B0     		sub	sp, sp, #16
 953              	.LCFI25:
 954              		.cfi_def_cfa_offset 24
 955 0004 0446     		mov	r4, r0
  37:BSP/BSP.c/FusionAhrs.c ****             .gain = 1.5f,
 956              		.loc 1 37 5 is_stmt 1 view .LVU270
  37:BSP/BSP.c/FusionAhrs.c ****             .gain = 1.5f,
 957              		.loc 1 37 30 is_stmt 0 view .LVU271
 958 0006 074B     		ldr	r3, .L46
 959 0008 EC46     		mov	ip, sp
 960 000a 0FCB     		ldm	r3, {r0, r1, r2, r3}
 961              	.LVL24:
  37:BSP/BSP.c/FusionAhrs.c ****             .gain = 1.5f,
 962              		.loc 1 37 30 view .LVU272
 963 000c 8CE80F00 		stm	ip, {r0, r1, r2, r3}
  43:BSP/BSP.c/FusionAhrs.c ****     FusionAhrsReset(ahrs);
 964              		.loc 1 43 5 is_stmt 1 view .LVU273
 965 0010 6146     		mov	r1, ip
 966 0012 2046     		mov	r0, r4
 967 0014 FFF7FEFF 		bl	FusionAhrsSetSettings
 968              	.LVL25:
  44:BSP/BSP.c/FusionAhrs.c **** }
 969              		.loc 1 44 5 view .LVU274
 970 0018 2046     		mov	r0, r4
 971 001a FFF7FEFF 		bl	FusionAhrsReset
 972              	.LVL26:
  45:BSP/BSP.c/FusionAhrs.c **** 
 973              		.loc 1 45 1 is_stmt 0 view .LVU275
 974 001e 04B0     		add	sp, sp, #16
 975              	.LCFI26:
 976              		.cfi_def_cfa_offset 8
 977              		@ sp needed
 978 0020 10BD     		pop	{r4, pc}
 979              	.LVL27:
 980              	.L47:
  45:BSP/BSP.c/FusionAhrs.c **** 
 981              		.loc 1 45 1 view .LVU276
 982 0022 00BF     		.align	2
 983              	.L46:
 984 0024 00000000 		.word	.LANCHOR0
 985              		.cfi_endproc
 986              	.LFE21:
 988              		.section	.text.FusionAhrsGetQuaternion,"ax",%progbits
 989              		.align	1
 990              		.global	FusionAhrsGetQuaternion
 991              		.syntax unified
 992              		.thumb
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 28


 993              		.thumb_func
 995              	FusionAhrsGetQuaternion:
 996              	.LVL28:
 997              	.LFB27:
  90:BSP/BSP.c/FusionAhrs.c **** 
  91:BSP/BSP.c/FusionAhrs.c **** /**
  92:BSP/BSP.c/FusionAhrs.c ****  * @brief Updates the AHRS algorithm using the gyroscope, accelerometer, and
  93:BSP/BSP.c/FusionAhrs.c ****  * magnetometer measurements.
  94:BSP/BSP.c/FusionAhrs.c ****  * @param ahrs AHRS algorithm structure.
  95:BSP/BSP.c/FusionAhrs.c ****  * @param gyroscope Gyroscope measurement in degrees per second.
  96:BSP/BSP.c/FusionAhrs.c ****  * @param accelerometer Accelerometer measurement in g.
  97:BSP/BSP.c/FusionAhrs.c ****  * @param magnetometer Magnetometer measurement in arbitrary units.
  98:BSP/BSP.c/FusionAhrs.c ****  * @param deltaTime Delta time in seconds.
  99:BSP/BSP.c/FusionAhrs.c ****  */
 100:BSP/BSP.c/FusionAhrs.c **** void FusionAhrsUpdate(FusionAhrs *const ahrs, const FusionVector gyroscope, const FusionVector acce
 101:BSP/BSP.c/FusionAhrs.c **** #define Q ahrs->quaternion.element
 102:BSP/BSP.c/FusionAhrs.c **** 
 103:BSP/BSP.c/FusionAhrs.c ****     // Store accelerometer
 104:BSP/BSP.c/FusionAhrs.c ****     ahrs->accelerometer = accelerometer;
 105:BSP/BSP.c/FusionAhrs.c **** 
 106:BSP/BSP.c/FusionAhrs.c ****     // Ramp down gain during initialisation
 107:BSP/BSP.c/FusionAhrs.c ****     if (ahrs->initialising == true) {
 108:BSP/BSP.c/FusionAhrs.c ****         ahrs->rampedGain -= ahrs->rampedGainStep * deltaTime;
 109:BSP/BSP.c/FusionAhrs.c ****         if (ahrs->rampedGain < ahrs->settings.gain) {
 110:BSP/BSP.c/FusionAhrs.c ****             ahrs->rampedGain = ahrs->settings.gain;
 111:BSP/BSP.c/FusionAhrs.c ****             ahrs->initialising = false;
 112:BSP/BSP.c/FusionAhrs.c ****             ahrs->accelerationRejectionTimeout = false;
 113:BSP/BSP.c/FusionAhrs.c ****         }
 114:BSP/BSP.c/FusionAhrs.c ****     }
 115:BSP/BSP.c/FusionAhrs.c **** 
 116:BSP/BSP.c/FusionAhrs.c ****     // Calculate direction of gravity indicated by algorithm
 117:BSP/BSP.c/FusionAhrs.c ****     const FusionVector halfGravity = {
 118:BSP/BSP.c/FusionAhrs.c ****             .axis.x = Q.x * Q.z - Q.w * Q.y,
 119:BSP/BSP.c/FusionAhrs.c ****             .axis.y = Q.y * Q.z + Q.w * Q.x,
 120:BSP/BSP.c/FusionAhrs.c ****             .axis.z = Q.w * Q.w - 0.5f + Q.z * Q.z,
 121:BSP/BSP.c/FusionAhrs.c ****     }; // third column of transposed rotation matrix scaled by 0.5
 122:BSP/BSP.c/FusionAhrs.c **** 
 123:BSP/BSP.c/FusionAhrs.c ****     // Calculate accelerometer feedback
 124:BSP/BSP.c/FusionAhrs.c ****     FusionVector halfAccelerometerFeedback = FUSION_VECTOR_ZERO;
 125:BSP/BSP.c/FusionAhrs.c ****     ahrs->accelerometerIgnored = true;
 126:BSP/BSP.c/FusionAhrs.c ****     if (FusionVectorIsZero(accelerometer) == false) {
 127:BSP/BSP.c/FusionAhrs.c **** 
 128:BSP/BSP.c/FusionAhrs.c ****         // Enter acceleration recovery state if acceleration rejection times out
 129:BSP/BSP.c/FusionAhrs.c ****         if (ahrs->accelerationRejectionTimer > ahrs->settings.rejectionTimeout) {
 130:BSP/BSP.c/FusionAhrs.c ****             const FusionQuaternion quaternion = ahrs->quaternion;
 131:BSP/BSP.c/FusionAhrs.c ****             FusionAhrsReset(ahrs);
 132:BSP/BSP.c/FusionAhrs.c ****             ahrs->quaternion = quaternion;
 133:BSP/BSP.c/FusionAhrs.c ****             ahrs->accelerationRejectionTimer = 0;
 134:BSP/BSP.c/FusionAhrs.c ****             ahrs->accelerationRejectionTimeout = true;
 135:BSP/BSP.c/FusionAhrs.c ****         }
 136:BSP/BSP.c/FusionAhrs.c **** 
 137:BSP/BSP.c/FusionAhrs.c ****         // Calculate accelerometer feedback scaled by 0.5
 138:BSP/BSP.c/FusionAhrs.c ****         ahrs->halfAccelerometerFeedback = FusionVectorCrossProduct(FusionVectorNormalise(accelerome
 139:BSP/BSP.c/FusionAhrs.c **** 
 140:BSP/BSP.c/FusionAhrs.c ****         // Ignore accelerometer if acceleration distortion detected
 141:BSP/BSP.c/FusionAhrs.c ****         if ((ahrs->initialising == true) || (FusionVectorMagnitudeSquared(ahrs->halfAccelerometerFe
 142:BSP/BSP.c/FusionAhrs.c ****             halfAccelerometerFeedback = ahrs->halfAccelerometerFeedback;
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 29


 143:BSP/BSP.c/FusionAhrs.c ****             ahrs->accelerometerIgnored = false;
 144:BSP/BSP.c/FusionAhrs.c ****             ahrs->accelerationRejectionTimer -= ahrs->accelerationRejectionTimer >= 10 ? 10 : 0;
 145:BSP/BSP.c/FusionAhrs.c ****         } else {
 146:BSP/BSP.c/FusionAhrs.c ****             ahrs->accelerationRejectionTimer++;
 147:BSP/BSP.c/FusionAhrs.c ****         }
 148:BSP/BSP.c/FusionAhrs.c ****     }
 149:BSP/BSP.c/FusionAhrs.c **** 
 150:BSP/BSP.c/FusionAhrs.c ****     // Calculate magnetometer feedback
 151:BSP/BSP.c/FusionAhrs.c ****     FusionVector halfMagnetometerFeedback = FUSION_VECTOR_ZERO;
 152:BSP/BSP.c/FusionAhrs.c ****     ahrs->magnetometerIgnored = true;
 153:BSP/BSP.c/FusionAhrs.c ****     if (FusionVectorIsZero(magnetometer) == false) {
 154:BSP/BSP.c/FusionAhrs.c **** 
 155:BSP/BSP.c/FusionAhrs.c ****         // Set to compass heading if magnetic rejection times out
 156:BSP/BSP.c/FusionAhrs.c ****         ahrs->magneticRejectionTimeout = false;
 157:BSP/BSP.c/FusionAhrs.c ****         if (ahrs->magneticRejectionTimer > ahrs->settings.rejectionTimeout) {
 158:BSP/BSP.c/FusionAhrs.c ****             FusionAhrsSetHeading(ahrs, FusionCompassCalculateHeading(halfGravity, magnetometer));
 159:BSP/BSP.c/FusionAhrs.c ****             ahrs->magneticRejectionTimer = 0;
 160:BSP/BSP.c/FusionAhrs.c ****             ahrs->magneticRejectionTimeout = true;
 161:BSP/BSP.c/FusionAhrs.c ****         }
 162:BSP/BSP.c/FusionAhrs.c **** 
 163:BSP/BSP.c/FusionAhrs.c ****         // Compute direction of west indicated by algorithm
 164:BSP/BSP.c/FusionAhrs.c ****         const FusionVector halfWest = {
 165:BSP/BSP.c/FusionAhrs.c ****                 .axis.x = Q.x * Q.y + Q.w * Q.z,
 166:BSP/BSP.c/FusionAhrs.c ****                 .axis.y = Q.w * Q.w - 0.5f + Q.y * Q.y,
 167:BSP/BSP.c/FusionAhrs.c ****                 .axis.z = Q.y * Q.z - Q.w * Q.x
 168:BSP/BSP.c/FusionAhrs.c ****         }; // second column of transposed rotation matrix scaled by 0.5
 169:BSP/BSP.c/FusionAhrs.c **** 
 170:BSP/BSP.c/FusionAhrs.c ****         // Calculate magnetometer feedback scaled by 0.5
 171:BSP/BSP.c/FusionAhrs.c ****         ahrs->halfMagnetometerFeedback = FusionVectorCrossProduct(FusionVectorNormalise(FusionVecto
 172:BSP/BSP.c/FusionAhrs.c **** 
 173:BSP/BSP.c/FusionAhrs.c ****         // Ignore magnetometer if magnetic distortion detected
 174:BSP/BSP.c/FusionAhrs.c ****         if ((ahrs->initialising == true) || (FusionVectorMagnitudeSquared(ahrs->halfMagnetometerFee
 175:BSP/BSP.c/FusionAhrs.c ****             halfMagnetometerFeedback = ahrs->halfMagnetometerFeedback;
 176:BSP/BSP.c/FusionAhrs.c ****             ahrs->magnetometerIgnored = false;
 177:BSP/BSP.c/FusionAhrs.c ****             ahrs->magneticRejectionTimer -= ahrs->magneticRejectionTimer >= 10 ? 10 : 0;
 178:BSP/BSP.c/FusionAhrs.c ****         } else {
 179:BSP/BSP.c/FusionAhrs.c ****             ahrs->magneticRejectionTimer++;
 180:BSP/BSP.c/FusionAhrs.c ****         }
 181:BSP/BSP.c/FusionAhrs.c ****     }
 182:BSP/BSP.c/FusionAhrs.c **** 
 183:BSP/BSP.c/FusionAhrs.c ****     // Convert gyroscope to radians per second scaled by 0.5
 184:BSP/BSP.c/FusionAhrs.c ****     const FusionVector halfGyroscope = FusionVectorMultiplyScalar(gyroscope, FusionDegreesToRadians
 185:BSP/BSP.c/FusionAhrs.c **** 
 186:BSP/BSP.c/FusionAhrs.c ****     // Apply feedback to gyroscope
 187:BSP/BSP.c/FusionAhrs.c ****     const FusionVector adjustedHalfGyroscope = FusionVectorAdd(halfGyroscope, FusionVectorMultiplyS
 188:BSP/BSP.c/FusionAhrs.c **** 
 189:BSP/BSP.c/FusionAhrs.c ****     // Integrate rate of change of quaternion
 190:BSP/BSP.c/FusionAhrs.c ****     ahrs->quaternion = FusionQuaternionAdd(ahrs->quaternion, FusionQuaternionMultiplyVector(ahrs->q
 191:BSP/BSP.c/FusionAhrs.c **** 
 192:BSP/BSP.c/FusionAhrs.c ****     // Normalise quaternion
 193:BSP/BSP.c/FusionAhrs.c ****     ahrs->quaternion = FusionQuaternionNormalise(ahrs->quaternion);
 194:BSP/BSP.c/FusionAhrs.c **** #undef Q
 195:BSP/BSP.c/FusionAhrs.c **** }
 196:BSP/BSP.c/FusionAhrs.c **** 
 197:BSP/BSP.c/FusionAhrs.c **** /**
 198:BSP/BSP.c/FusionAhrs.c ****  * @brief Updates the AHRS algorithm using the gyroscope and accelerometer
 199:BSP/BSP.c/FusionAhrs.c ****  * measurements only.
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 30


 200:BSP/BSP.c/FusionAhrs.c ****  * @param ahrs AHRS algorithm structure.
 201:BSP/BSP.c/FusionAhrs.c ****  * @param gyroscope Gyroscope measurement in degrees per second.
 202:BSP/BSP.c/FusionAhrs.c ****  * @param accelerometer Accelerometer measurement in g.
 203:BSP/BSP.c/FusionAhrs.c ****  * @param deltaTime Delta time in seconds.
 204:BSP/BSP.c/FusionAhrs.c ****  */
 205:BSP/BSP.c/FusionAhrs.c **** void FusionAhrsUpdateNoMagnetometer(FusionAhrs *const ahrs, const FusionVector gyroscope, const Fus
 206:BSP/BSP.c/FusionAhrs.c **** 
 207:BSP/BSP.c/FusionAhrs.c ****     // Update AHRS algorithm
 208:BSP/BSP.c/FusionAhrs.c ****     FusionAhrsUpdate(ahrs, gyroscope, accelerometer, FUSION_VECTOR_ZERO, deltaTime);
 209:BSP/BSP.c/FusionAhrs.c **** 
 210:BSP/BSP.c/FusionAhrs.c ****     // Zero heading during initialisation
 211:BSP/BSP.c/FusionAhrs.c ****     if ((ahrs->initialising == true) && (ahrs->accelerationRejectionTimeout == false)) {
 212:BSP/BSP.c/FusionAhrs.c ****         FusionAhrsSetHeading(ahrs, 0.0f);
 213:BSP/BSP.c/FusionAhrs.c ****     }
 214:BSP/BSP.c/FusionAhrs.c **** }
 215:BSP/BSP.c/FusionAhrs.c **** 
 216:BSP/BSP.c/FusionAhrs.c **** /**
 217:BSP/BSP.c/FusionAhrs.c ****  * @brief Updates the AHRS algorithm using the gyroscope, accelerometer, and
 218:BSP/BSP.c/FusionAhrs.c ****  * heading measurements.
 219:BSP/BSP.c/FusionAhrs.c ****  * @param ahrs AHRS algorithm structure.
 220:BSP/BSP.c/FusionAhrs.c ****  * @param gyroscope Gyroscope measurement in degrees per second.
 221:BSP/BSP.c/FusionAhrs.c ****  * @param accelerometer Accelerometer measurement in g.
 222:BSP/BSP.c/FusionAhrs.c ****  * @param heading Heading measurement in degrees.
 223:BSP/BSP.c/FusionAhrs.c ****  * @param deltaTime Delta time in seconds.
 224:BSP/BSP.c/FusionAhrs.c ****  */
 225:BSP/BSP.c/FusionAhrs.c **** void FusionAhrsUpdateExternalHeading(FusionAhrs *const ahrs, const FusionVector gyroscope, const Fu
 226:BSP/BSP.c/FusionAhrs.c **** #define Q ahrs->quaternion.element
 227:BSP/BSP.c/FusionAhrs.c **** 
 228:BSP/BSP.c/FusionAhrs.c ****     // Calculate roll
 229:BSP/BSP.c/FusionAhrs.c ****     const float roll = atan2f(Q.w * Q.x + Q.y * Q.z, 0.5f - Q.y * Q.y - Q.x * Q.x);
 230:BSP/BSP.c/FusionAhrs.c **** 
 231:BSP/BSP.c/FusionAhrs.c ****     // Calculate magnetometer
 232:BSP/BSP.c/FusionAhrs.c ****     const float headingRadians = FusionDegreesToRadians(heading);
 233:BSP/BSP.c/FusionAhrs.c ****     const float sinHeadingRadians = sinf(headingRadians);
 234:BSP/BSP.c/FusionAhrs.c ****     const FusionVector magnetometer = {
 235:BSP/BSP.c/FusionAhrs.c ****             .axis.x = cosf(headingRadians),
 236:BSP/BSP.c/FusionAhrs.c ****             .axis.y = -1.0f * cosf(roll) * sinHeadingRadians,
 237:BSP/BSP.c/FusionAhrs.c ****             .axis.z = sinHeadingRadians * sinf(roll),
 238:BSP/BSP.c/FusionAhrs.c ****     };
 239:BSP/BSP.c/FusionAhrs.c **** 
 240:BSP/BSP.c/FusionAhrs.c ****     // Update AHRS algorithm
 241:BSP/BSP.c/FusionAhrs.c ****     FusionAhrsUpdate(ahrs, gyroscope, accelerometer, magnetometer, deltaTime);
 242:BSP/BSP.c/FusionAhrs.c **** #undef Q
 243:BSP/BSP.c/FusionAhrs.c **** }
 244:BSP/BSP.c/FusionAhrs.c **** 
 245:BSP/BSP.c/FusionAhrs.c **** /**
 246:BSP/BSP.c/FusionAhrs.c ****  * @brief Returns the quaternion describing the sensor relative to the Earth.
 247:BSP/BSP.c/FusionAhrs.c ****  * @param ahrs AHRS algorithm structure.
 248:BSP/BSP.c/FusionAhrs.c ****  * @return Quaternion describing the sensor relative to the Earth.
 249:BSP/BSP.c/FusionAhrs.c ****  */
 250:BSP/BSP.c/FusionAhrs.c **** FusionQuaternion FusionAhrsGetQuaternion(const FusionAhrs *const ahrs) {
 998              		.loc 1 250 72 is_stmt 1 view -0
 999              		.cfi_startproc
 1000              		@ args = 0, pretend = 0, frame = 32
 1001              		@ frame_needed = 0, uses_anonymous_args = 0
 1002              		@ link register save eliminated.
 1003              		.loc 1 250 72 is_stmt 0 view .LVU278
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 31


 1004 0000 88B0     		sub	sp, sp, #32
 1005              	.LCFI27:
 1006              		.cfi_def_cfa_offset 32
 251:BSP/BSP.c/FusionAhrs.c ****     return ahrs->quaternion;
 1007              		.loc 1 251 5 is_stmt 1 view .LVU279
 1008              		.loc 1 251 16 is_stmt 0 view .LVU280
 1009 0002 1030     		adds	r0, r0, #16
 1010              	.LVL29:
 1011              		.loc 1 251 16 view .LVU281
 1012 0004 0FC8     		ldm	r0, {r0, r1, r2, r3}
 1013              	.LVL30:
 1014              		.loc 1 251 16 view .LVU282
 1015 0006 0DF1200C 		add	ip, sp, #32
 1016 000a 0CE90F00 		stmdb	ip, {r0, r1, r2, r3}
 252:BSP/BSP.c/FusionAhrs.c **** }
 1017              		.loc 1 252 1 view .LVU283
 1018 000e 9DED040A 		vldr.32	s0, [sp, #16]
 1019 0012 DDED050A 		vldr.32	s1, [sp, #20]
 1020 0016 9DED061A 		vldr.32	s2, [sp, #24]
 1021 001a DDED071A 		vldr.32	s3, [sp, #28]
 1022 001e 08B0     		add	sp, sp, #32
 1023              	.LCFI28:
 1024              		.cfi_def_cfa_offset 0
 1025              		@ sp needed
 1026 0020 7047     		bx	lr
 1027              		.cfi_endproc
 1028              	.LFE27:
 1030              		.section	.text.FusionAhrsGetLinearAcceleration,"ax",%progbits
 1031              		.align	1
 1032              		.global	FusionAhrsGetLinearAcceleration
 1033              		.syntax unified
 1034              		.thumb
 1035              		.thumb_func
 1037              	FusionAhrsGetLinearAcceleration:
 1038              	.LVL31:
 1039              	.LFB28:
 253:BSP/BSP.c/FusionAhrs.c **** 
 254:BSP/BSP.c/FusionAhrs.c **** /**
 255:BSP/BSP.c/FusionAhrs.c ****  * @brief Returns the linear acceleration measurement equal to the accelerometer
 256:BSP/BSP.c/FusionAhrs.c ****  * measurement with the 1 g of gravity removed.
 257:BSP/BSP.c/FusionAhrs.c ****  * @param ahrs AHRS algorithm structure.
 258:BSP/BSP.c/FusionAhrs.c ****  * @return Linear acceleration measurement in g.
 259:BSP/BSP.c/FusionAhrs.c ****  */
 260:BSP/BSP.c/FusionAhrs.c **** FusionVector FusionAhrsGetLinearAcceleration(const FusionAhrs *const ahrs) {
 1040              		.loc 1 260 76 is_stmt 1 view -0
 1041              		.cfi_startproc
 1042              		@ args = 0, pretend = 0, frame = 88
 1043              		@ frame_needed = 0, uses_anonymous_args = 0
 1044              		@ link register save eliminated.
 1045              		.loc 1 260 76 is_stmt 0 view .LVU285
 1046 0000 96B0     		sub	sp, sp, #88
 1047              	.LCFI29:
 1048              		.cfi_def_cfa_offset 88
 261:BSP/BSP.c/FusionAhrs.c **** #define Q ahrs->quaternion.element
 262:BSP/BSP.c/FusionAhrs.c ****     const FusionVector gravity = {
 1049              		.loc 1 262 5 is_stmt 1 view .LVU286
 263:BSP/BSP.c/FusionAhrs.c ****             .axis.x = 2.0f * (Q.x * Q.z - Q.w * Q.y),
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 32


 1050              		.loc 1 263 32 is_stmt 0 view .LVU287
 1051 0002 D0ED055A 		vldr.32	s11, [r0, #20]
 1052              		.loc 1 263 38 view .LVU288
 1053 0006 90ED076A 		vldr.32	s12, [r0, #28]
 1054              		.loc 1 263 35 view .LVU289
 1055 000a 65EE866A 		vmul.f32	s13, s11, s12
 1056              		.loc 1 263 44 view .LVU290
 1057 000e D0ED047A 		vldr.32	s15, [r0, #16]
 1058              		.loc 1 263 50 view .LVU291
 1059 0012 90ED067A 		vldr.32	s14, [r0, #24]
 1060              		.loc 1 263 47 view .LVU292
 1061 0016 27EE875A 		vmul.f32	s10, s15, s14
 1062              		.loc 1 263 41 view .LVU293
 1063 001a 76EEC56A 		vsub.f32	s13, s13, s10
 1064              		.loc 1 263 28 view .LVU294
 1065 001e 76EEA66A 		vadd.f32	s13, s13, s13
 262:BSP/BSP.c/FusionAhrs.c ****             .axis.x = 2.0f * (Q.x * Q.z - Q.w * Q.y),
 1066              		.loc 1 262 24 view .LVU295
 1067 0022 CDED0D6A 		vstr.32	s13, [sp, #52]
 264:BSP/BSP.c/FusionAhrs.c ****             .axis.y = 2.0f * (Q.y * Q.z + Q.w * Q.x),
 1068              		.loc 1 264 35 view .LVU296
 1069 0026 26EE077A 		vmul.f32	s14, s12, s14
 1070              		.loc 1 264 47 view .LVU297
 1071 002a 65EEA75A 		vmul.f32	s11, s11, s15
 1072              		.loc 1 264 41 view .LVU298
 1073 002e 37EE257A 		vadd.f32	s14, s14, s11
 1074              		.loc 1 264 28 view .LVU299
 1075 0032 37EE077A 		vadd.f32	s14, s14, s14
 262:BSP/BSP.c/FusionAhrs.c ****             .axis.x = 2.0f * (Q.x * Q.z - Q.w * Q.y),
 1076              		.loc 1 262 24 view .LVU300
 1077 0036 8DED0E7A 		vstr.32	s14, [sp, #56]
 265:BSP/BSP.c/FusionAhrs.c ****             .axis.z = 2.0f * (Q.w * Q.w - 0.5f + Q.z * Q.z),
 1078              		.loc 1 265 35 view .LVU301
 1079 003a 67EEA77A 		vmul.f32	s15, s15, s15
 1080              		.loc 1 265 41 view .LVU302
 1081 003e F6EE005A 		vmov.f32	s11, #5.0e-1
 1082 0042 77EEE57A 		vsub.f32	s15, s15, s11
 1083              		.loc 1 265 54 view .LVU303
 1084 0046 26EE066A 		vmul.f32	s12, s12, s12
 1085              		.loc 1 265 48 view .LVU304
 1086 004a 77EE867A 		vadd.f32	s15, s15, s12
 1087              		.loc 1 265 28 view .LVU305
 1088 004e 77EEA77A 		vadd.f32	s15, s15, s15
 262:BSP/BSP.c/FusionAhrs.c ****             .axis.x = 2.0f * (Q.x * Q.z - Q.w * Q.y),
 1089              		.loc 1 262 24 view .LVU306
 1090 0052 CDED0F7A 		vstr.32	s15, [sp, #60]
 266:BSP/BSP.c/FusionAhrs.c ****     }; // third column of transposed rotation matrix
 267:BSP/BSP.c/FusionAhrs.c ****     const FusionVector linearAcceleration = FusionVectorSubtract(ahrs->accelerometer, gravity);
 1091              		.loc 1 267 5 is_stmt 1 view .LVU307
 1092 0056 04AB     		add	r3, sp, #16
 1093 0058 2030     		adds	r0, r0, #32
 1094              	.LVL32:
 1095              		.loc 1 267 5 is_stmt 0 view .LVU308
 1096 005a 07C8     		ldm	r0, {r0, r1, r2}
 1097              	.LVL33:
 1098              		.loc 1 267 5 view .LVU309
 1099 005c 83E80700 		stm	r3, {r0, r1, r2}
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 33


 1100              	.LBB60:
 1101              	.LBI60:
 215:BSP/BSP.h/FusionMath.h ****     FusionVector result;
 1102              		.loc 2 215 28 is_stmt 1 view .LVU310
 1103              	.LBB61:
 216:BSP/BSP.h/FusionMath.h ****     result.axis.x = vectorA.axis.x - vectorB.axis.x;
 1104              		.loc 2 216 5 view .LVU311
 217:BSP/BSP.h/FusionMath.h ****     result.axis.y = vectorA.axis.y - vectorB.axis.y;
 1105              		.loc 2 217 5 view .LVU312
 217:BSP/BSP.h/FusionMath.h ****     result.axis.y = vectorA.axis.y - vectorB.axis.y;
 1106              		.loc 2 217 33 is_stmt 0 view .LVU313
 1107 0060 9DED046A 		vldr.32	s12, [sp, #16]
 217:BSP/BSP.h/FusionMath.h ****     result.axis.y = vectorA.axis.y - vectorB.axis.y;
 1108              		.loc 2 217 36 view .LVU314
 1109 0064 76EE666A 		vsub.f32	s13, s12, s13
 217:BSP/BSP.h/FusionMath.h ****     result.axis.y = vectorA.axis.y - vectorB.axis.y;
 1110              		.loc 2 217 19 view .LVU315
 1111 0068 CDED076A 		vstr.32	s13, [sp, #28]
 218:BSP/BSP.h/FusionMath.h ****     result.axis.z = vectorA.axis.z - vectorB.axis.z;
 1112              		.loc 2 218 5 is_stmt 1 view .LVU316
 218:BSP/BSP.h/FusionMath.h ****     result.axis.z = vectorA.axis.z - vectorB.axis.z;
 1113              		.loc 2 218 33 is_stmt 0 view .LVU317
 1114 006c DDED056A 		vldr.32	s13, [sp, #20]
 218:BSP/BSP.h/FusionMath.h ****     result.axis.z = vectorA.axis.z - vectorB.axis.z;
 1115              		.loc 2 218 36 view .LVU318
 1116 0070 36EEC77A 		vsub.f32	s14, s13, s14
 218:BSP/BSP.h/FusionMath.h ****     result.axis.z = vectorA.axis.z - vectorB.axis.z;
 1117              		.loc 2 218 19 view .LVU319
 1118 0074 8DED087A 		vstr.32	s14, [sp, #32]
 219:BSP/BSP.h/FusionMath.h ****     return result;
 1119              		.loc 2 219 5 is_stmt 1 view .LVU320
 219:BSP/BSP.h/FusionMath.h ****     return result;
 1120              		.loc 2 219 33 is_stmt 0 view .LVU321
 1121 0078 9DED067A 		vldr.32	s14, [sp, #24]
 219:BSP/BSP.h/FusionMath.h ****     return result;
 1122              		.loc 2 219 36 view .LVU322
 1123 007c 77EE677A 		vsub.f32	s15, s14, s15
 219:BSP/BSP.h/FusionMath.h ****     return result;
 1124              		.loc 2 219 19 view .LVU323
 1125 0080 CDED097A 		vstr.32	s15, [sp, #36]
 220:BSP/BSP.h/FusionMath.h **** }
 1126              		.loc 2 220 5 is_stmt 1 view .LVU324
 220:BSP/BSP.h/FusionMath.h **** }
 1127              		.loc 2 220 12 is_stmt 0 view .LVU325
 1128 0084 0DF14C0C 		add	ip, sp, #76
 1129 0088 07AB     		add	r3, sp, #28
 1130 008a 93E80700 		ldm	r3, {r0, r1, r2}
 1131 008e 8CE80700 		stm	ip, {r0, r1, r2}
 1132 0092 0AAB     		add	r3, sp, #40
 1133 0094 83E80700 		stm	r3, {r0, r1, r2}
 1134              	.LBE61:
 1135              	.LBE60:
 268:BSP/BSP.c/FusionAhrs.c ****     return linearAcceleration;
 1136              		.loc 1 268 5 is_stmt 1 view .LVU326
 1137              		.loc 1 268 12 is_stmt 0 view .LVU327
 1138 0098 0DF1400C 		add	ip, sp, #64
 1139 009c 8CE80700 		stm	ip, {r0, r1, r2}
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 34


 269:BSP/BSP.c/FusionAhrs.c **** #undef Q
 270:BSP/BSP.c/FusionAhrs.c **** }
 1140              		.loc 1 270 1 view .LVU328
 1141 00a0 9DED100A 		vldr.32	s0, [sp, #64]
 1142 00a4 DDED110A 		vldr.32	s1, [sp, #68]
 1143 00a8 9DED121A 		vldr.32	s2, [sp, #72]
 1144 00ac 16B0     		add	sp, sp, #88
 1145              	.LCFI30:
 1146              		.cfi_def_cfa_offset 0
 1147              		@ sp needed
 1148 00ae 7047     		bx	lr
 1149              		.cfi_endproc
 1150              	.LFE28:
 1152              		.section	.text.FusionAhrsGetEarthAcceleration,"ax",%progbits
 1153              		.align	1
 1154              		.global	FusionAhrsGetEarthAcceleration
 1155              		.syntax unified
 1156              		.thumb
 1157              		.thumb_func
 1159              	FusionAhrsGetEarthAcceleration:
 1160              	.LVL34:
 1161              	.LFB29:
 271:BSP/BSP.c/FusionAhrs.c **** 
 272:BSP/BSP.c/FusionAhrs.c **** /**
 273:BSP/BSP.c/FusionAhrs.c ****  * @brief Returns the Earth acceleration measurement equal to accelerometer
 274:BSP/BSP.c/FusionAhrs.c ****  * measurement in the Earth coordinate frame with the 1 g of gravity removed.
 275:BSP/BSP.c/FusionAhrs.c ****  * @param ahrs AHRS algorithm structure.
 276:BSP/BSP.c/FusionAhrs.c ****  * @return Earth acceleration measurement in g.
 277:BSP/BSP.c/FusionAhrs.c ****  */
 278:BSP/BSP.c/FusionAhrs.c **** FusionVector FusionAhrsGetEarthAcceleration(const FusionAhrs *const ahrs) {
 1162              		.loc 1 278 75 is_stmt 1 view -0
 1163              		.cfi_startproc
 1164              		@ args = 0, pretend = 0, frame = 40
 1165              		@ frame_needed = 0, uses_anonymous_args = 0
 1166              		@ link register save eliminated.
 1167              		.loc 1 278 75 is_stmt 0 view .LVU330
 1168 0000 8AB0     		sub	sp, sp, #40
 1169              	.LCFI31:
 1170              		.cfi_def_cfa_offset 40
 279:BSP/BSP.c/FusionAhrs.c **** #define Q ahrs->quaternion.element
 280:BSP/BSP.c/FusionAhrs.c **** #define A ahrs->accelerometer.axis
 281:BSP/BSP.c/FusionAhrs.c ****     const float qwqw = Q.w * Q.w; // calculate common terms to avoid repeated operations
 1171              		.loc 1 281 5 is_stmt 1 view .LVU331
 1172              		.loc 1 281 25 is_stmt 0 view .LVU332
 1173 0002 D0ED047A 		vldr.32	s15, [r0, #16]
 1174              		.loc 1 281 17 view .LVU333
 1175 0006 67EEA75A 		vmul.f32	s11, s15, s15
 1176              	.LVL35:
 282:BSP/BSP.c/FusionAhrs.c ****     const float qwqx = Q.w * Q.x;
 1177              		.loc 1 282 5 is_stmt 1 view .LVU334
 1178              		.loc 1 282 31 is_stmt 0 view .LVU335
 1179 000a 90ED057A 		vldr.32	s14, [r0, #20]
 1180              		.loc 1 282 17 view .LVU336
 1181 000e 67EE873A 		vmul.f32	s7, s15, s14
 1182              	.LVL36:
 283:BSP/BSP.c/FusionAhrs.c ****     const float qwqy = Q.w * Q.y;
 1183              		.loc 1 283 5 is_stmt 1 view .LVU337
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 35


 1184              		.loc 1 283 31 is_stmt 0 view .LVU338
 1185 0012 90ED066A 		vldr.32	s12, [r0, #24]
 1186              		.loc 1 283 17 view .LVU339
 1187 0016 67EE861A 		vmul.f32	s3, s15, s12
 1188              	.LVL37:
 284:BSP/BSP.c/FusionAhrs.c ****     const float qwqz = Q.w * Q.z;
 1189              		.loc 1 284 5 is_stmt 1 view .LVU340
 1190              		.loc 1 284 31 is_stmt 0 view .LVU341
 1191 001a D0ED074A 		vldr.32	s9, [r0, #28]
 1192              		.loc 1 284 17 view .LVU342
 1193 001e 67EEA47A 		vmul.f32	s15, s15, s9
 1194              	.LVL38:
 285:BSP/BSP.c/FusionAhrs.c ****     const float qxqy = Q.x * Q.y;
 1195              		.loc 1 285 5 is_stmt 1 view .LVU343
 1196              		.loc 1 285 17 is_stmt 0 view .LVU344
 1197 0022 27EE061A 		vmul.f32	s2, s14, s12
 1198              	.LVL39:
 286:BSP/BSP.c/FusionAhrs.c ****     const float qxqz = Q.x * Q.z;
 1199              		.loc 1 286 5 is_stmt 1 view .LVU345
 1200              		.loc 1 286 17 is_stmt 0 view .LVU346
 1201 0026 27EE243A 		vmul.f32	s6, s14, s9
 1202              	.LVL40:
 287:BSP/BSP.c/FusionAhrs.c ****     const float qyqz = Q.y * Q.z;
 1203              		.loc 1 287 5 is_stmt 1 view .LVU347
 1204              		.loc 1 287 17 is_stmt 0 view .LVU348
 1205 002a 26EE242A 		vmul.f32	s4, s12, s9
 1206              	.LVL41:
 288:BSP/BSP.c/FusionAhrs.c ****     const FusionVector earthAcceleration = {
 1207              		.loc 1 288 5 is_stmt 1 view .LVU349
 289:BSP/BSP.c/FusionAhrs.c ****             .axis.x = 2.0f * ((qwqw - 0.5f + Q.x * Q.x) * A.x + (qxqy - qwqz) * A.y + (qxqz + qwqy)
 1208              		.loc 1 289 37 is_stmt 0 view .LVU350
 1209 002e F6EE006A 		vmov.f32	s13, #5.0e-1
 1210 0032 75EEE65A 		vsub.f32	s11, s11, s13
 1211              	.LVL42:
 1212              		.loc 1 289 50 view .LVU351
 1213 0036 27EE077A 		vmul.f32	s14, s14, s14
 1214              		.loc 1 289 44 view .LVU352
 1215 003a 35EE877A 		vadd.f32	s14, s11, s14
 1216              		.loc 1 289 60 view .LVU353
 1217 003e D0ED086A 		vldr.32	s13, [r0, #32]
 1218              		.loc 1 289 57 view .LVU354
 1219 0042 27EE267A 		vmul.f32	s14, s14, s13
 1220              		.loc 1 289 71 view .LVU355
 1221 0046 31EE675A 		vsub.f32	s10, s2, s15
 1222              		.loc 1 289 82 view .LVU356
 1223 004a 90ED094A 		vldr.32	s8, [r0, #36]
 1224              		.loc 1 289 79 view .LVU357
 1225 004e 25EE045A 		vmul.f32	s10, s10, s8
 1226              		.loc 1 289 63 view .LVU358
 1227 0052 37EE057A 		vadd.f32	s14, s14, s10
 1228              		.loc 1 289 93 view .LVU359
 1229 0056 71EE832A 		vadd.f32	s5, s3, s6
 1230              		.loc 1 289 104 view .LVU360
 1231 005a 90ED0A5A 		vldr.32	s10, [r0, #40]
 1232              		.loc 1 289 101 view .LVU361
 1233 005e 62EE852A 		vmul.f32	s5, s5, s10
 1234              		.loc 1 289 85 view .LVU362
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 36


 1235 0062 37EE227A 		vadd.f32	s14, s14, s5
 1236              		.loc 1 289 28 view .LVU363
 1237 0066 37EE077A 		vadd.f32	s14, s14, s14
 288:BSP/BSP.c/FusionAhrs.c ****     const FusionVector earthAcceleration = {
 1238              		.loc 1 288 24 view .LVU364
 1239 006a 8DED047A 		vstr.32	s14, [sp, #16]
 290:BSP/BSP.c/FusionAhrs.c ****             .axis.y = 2.0f * ((qxqy + qwqz) * A.x + (qwqw - 0.5f + Q.y * Q.y) * A.y + (qyqz - qwqx)
 1240              		.loc 1 290 37 view .LVU365
 1241 006e 77EE817A 		vadd.f32	s15, s15, s2
 1242              	.LVL43:
 1243              		.loc 1 290 45 view .LVU366
 1244 0072 66EEA77A 		vmul.f32	s15, s13, s15
 1245              		.loc 1 290 72 view .LVU367
 1246 0076 26EE066A 		vmul.f32	s12, s12, s12
 1247              		.loc 1 290 66 view .LVU368
 1248 007a 35EE866A 		vadd.f32	s12, s11, s12
 1249              		.loc 1 290 79 view .LVU369
 1250 007e 24EE066A 		vmul.f32	s12, s8, s12
 1251              		.loc 1 290 51 view .LVU370
 1252 0082 77EE867A 		vadd.f32	s15, s15, s12
 1253              		.loc 1 290 93 view .LVU371
 1254 0086 32EE637A 		vsub.f32	s14, s4, s7
 1255              		.loc 1 290 101 view .LVU372
 1256 008a 25EE077A 		vmul.f32	s14, s10, s14
 1257              		.loc 1 290 85 view .LVU373
 1258 008e 77EE877A 		vadd.f32	s15, s15, s14
 1259              		.loc 1 290 28 view .LVU374
 1260 0092 77EEA77A 		vadd.f32	s15, s15, s15
 288:BSP/BSP.c/FusionAhrs.c ****     const FusionVector earthAcceleration = {
 1261              		.loc 1 288 24 view .LVU375
 1262 0096 CDED057A 		vstr.32	s15, [sp, #20]
 291:BSP/BSP.c/FusionAhrs.c ****             .axis.z = (2.0f * ((qxqz - qwqy) * A.x + (qyqz + qwqx) * A.y + (qwqw - 0.5f + Q.z * Q.z
 1263              		.loc 1 291 38 view .LVU376
 1264 009a 33EE613A 		vsub.f32	s6, s6, s3
 1265              	.LVL44:
 1266              		.loc 1 291 46 view .LVU377
 1267 009e 66EE836A 		vmul.f32	s13, s13, s6
 1268              		.loc 1 291 60 view .LVU378
 1269 00a2 73EE823A 		vadd.f32	s7, s7, s4
 1270              	.LVL45:
 1271              		.loc 1 291 68 view .LVU379
 1272 00a6 24EE234A 		vmul.f32	s8, s8, s7
 1273              		.loc 1 291 52 view .LVU380
 1274 00aa 76EE846A 		vadd.f32	s13, s13, s8
 1275              		.loc 1 291 95 view .LVU381
 1276 00ae 64EEA47A 		vmul.f32	s15, s9, s9
 1277              		.loc 1 291 89 view .LVU382
 1278 00b2 75EEA75A 		vadd.f32	s11, s11, s15
 1279              		.loc 1 291 102 view .LVU383
 1280 00b6 25EE255A 		vmul.f32	s10, s10, s11
 1281              		.loc 1 291 74 view .LVU384
 1282 00ba 76EE856A 		vadd.f32	s13, s13, s10
 1283              		.loc 1 291 29 view .LVU385
 1284 00be 76EEA66A 		vadd.f32	s13, s13, s13
 1285              		.loc 1 291 110 view .LVU386
 1286 00c2 F7EE007A 		vmov.f32	s15, #1.0e+0
 1287 00c6 76EEE76A 		vsub.f32	s13, s13, s15
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 37


 288:BSP/BSP.c/FusionAhrs.c ****             .axis.x = 2.0f * ((qwqw - 0.5f + Q.x * Q.x) * A.x + (qxqy - qwqz) * A.y + (qxqz + qwqy)
 1288              		.loc 1 288 24 view .LVU387
 1289 00ca CDED066A 		vstr.32	s13, [sp, #24]
 292:BSP/BSP.c/FusionAhrs.c ****     }; // rotation matrix multiplied with the accelerometer, with 1 g subtracted
 293:BSP/BSP.c/FusionAhrs.c ****     return earthAcceleration;
 1290              		.loc 1 293 5 is_stmt 1 view .LVU388
 1291              		.loc 1 293 12 is_stmt 0 view .LVU389
 1292 00ce 04AB     		add	r3, sp, #16
 1293 00d0 93E80700 		ldm	r3, {r0, r1, r2}
 1294              	.LVL46:
 1295              		.loc 1 293 12 view .LVU390
 1296 00d4 0AAB     		add	r3, sp, #40
 1297 00d6 03E90700 		stmdb	r3, {r0, r1, r2}
 294:BSP/BSP.c/FusionAhrs.c **** #undef Q
 295:BSP/BSP.c/FusionAhrs.c **** #undef A
 296:BSP/BSP.c/FusionAhrs.c **** }
 1298              		.loc 1 296 1 view .LVU391
 1299 00da 9DED070A 		vldr.32	s0, [sp, #28]
 1300 00de DDED080A 		vldr.32	s1, [sp, #32]
 1301 00e2 9DED091A 		vldr.32	s2, [sp, #36]
 1302              	.LVL47:
 1303              		.loc 1 296 1 view .LVU392
 1304 00e6 0AB0     		add	sp, sp, #40
 1305              	.LCFI32:
 1306              		.cfi_def_cfa_offset 0
 1307              		@ sp needed
 1308 00e8 7047     		bx	lr
 1309              		.cfi_endproc
 1310              	.LFE29:
 1312              		.section	.text.FusionAhrsGetInternalStates,"ax",%progbits
 1313              		.align	1
 1314              		.global	FusionAhrsGetInternalStates
 1315              		.syntax unified
 1316              		.thumb
 1317              		.thumb_func
 1319              	FusionAhrsGetInternalStates:
 1320              	.LVL48:
 1321              	.LFB30:
 297:BSP/BSP.c/FusionAhrs.c **** 
 298:BSP/BSP.c/FusionAhrs.c **** /**
 299:BSP/BSP.c/FusionAhrs.c ****  * @brief Returns the AHRS algorithm internal states.
 300:BSP/BSP.c/FusionAhrs.c ****  * @param ahrs AHRS algorithm structure.
 301:BSP/BSP.c/FusionAhrs.c ****  * @return AHRS algorithm internal states.
 302:BSP/BSP.c/FusionAhrs.c ****  */
 303:BSP/BSP.c/FusionAhrs.c **** FusionAhrsInternalStates FusionAhrsGetInternalStates(const FusionAhrs *const ahrs) {
 1322              		.loc 1 303 84 is_stmt 1 view -0
 1323              		.cfi_startproc
 1324              		@ args = 0, pretend = 0, frame = 0
 1325              		@ frame_needed = 0, uses_anonymous_args = 0
 1326              		.loc 1 303 84 is_stmt 0 view .LVU394
 1327 0000 38B5     		push	{r3, r4, r5, lr}
 1328              	.LCFI33:
 1329              		.cfi_def_cfa_offset 16
 1330              		.cfi_offset 3, -16
 1331              		.cfi_offset 4, -12
 1332              		.cfi_offset 5, -8
 1333              		.cfi_offset 14, -4
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 38


 1334 0002 0546     		mov	r5, r0
 1335 0004 0C46     		mov	r4, r1
 304:BSP/BSP.c/FusionAhrs.c ****     const FusionAhrsInternalStates internalStates = {
 1336              		.loc 1 304 5 is_stmt 1 view .LVU395
 305:BSP/BSP.c/FusionAhrs.c ****             .accelerationError = FusionRadiansToDegrees(FusionAsin(2.0f * FusionVectorMagnitude(ahr
 1337              		.loc 1 305 75 is_stmt 0 view .LVU396
 1338 0006 91ED0E0A 		vldr.32	s0, [r1, #56]
 1339 000a D1ED0F0A 		vldr.32	s1, [r1, #60]
 1340 000e 91ED101A 		vldr.32	s2, [r1, #64]
 1341 0012 FFF7FEFF 		bl	FusionVectorMagnitude
 1342              	.LVL49:
 1343              		.loc 1 305 34 view .LVU397
 1344 0016 30EE000A 		vadd.f32	s0, s0, s0
 1345 001a FFF7FEFF 		bl	FusionAsin
 1346              	.LVL50:
 1347              	.LBB62:
 1348              	.LBI62:
 136:BSP/BSP.h/FusionMath.h ****     return radians * (180.0f / (float) M_PI);
 1349              		.loc 2 136 21 is_stmt 1 view .LVU398
 1350              	.LBB63:
 137:BSP/BSP.h/FusionMath.h **** }
 1351              		.loc 2 137 5 view .LVU399
 137:BSP/BSP.h/FusionMath.h **** }
 1352              		.loc 2 137 20 is_stmt 0 view .LVU400
 1353 001e DFED217A 		vldr.32	s15, .L60
 1354 0022 20EE270A 		vmul.f32	s0, s0, s15
 1355              	.LVL51:
 137:BSP/BSP.h/FusionMath.h **** }
 1356              		.loc 2 137 20 view .LVU401
 1357              	.LBE63:
 1358              	.LBE62:
 304:BSP/BSP.c/FusionAhrs.c ****             .accelerationError = FusionRadiansToDegrees(FusionAsin(2.0f * FusionVectorMagnitude(ahr
 1359              		.loc 1 304 36 view .LVU402
 1360 0026 85ED000A 		vstr.32	s0, [r5]
 306:BSP/BSP.c/FusionAhrs.c ****             .accelerometerIgnored = ahrs->accelerometerIgnored,
 1361              		.loc 1 306 41 view .LVU403
 1362 002a 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 304:BSP/BSP.c/FusionAhrs.c ****             .accelerationError = FusionRadiansToDegrees(FusionAsin(2.0f * FusionVectorMagnitude(ahr
 1363              		.loc 1 304 36 view .LVU404
 1364 002e 2B71     		strb	r3, [r5, #4]
 307:BSP/BSP.c/FusionAhrs.c ****             .accelerationRejectionTimer = ahrs->settings.rejectionTimeout == 0 ? 0.0f : (float) ahr
 1365              		.loc 1 307 57 view .LVU405
 1366 0030 E368     		ldr	r3, [r4, #12]
 1367              		.loc 1 307 87 view .LVU406
 1368 0032 83B3     		cbz	r3, .L57
 1369              		.loc 1 307 89 discriminator 1 view .LVU407
 1370 0034 D4ED157A 		vldr.32	s15, [r4, #84]	@ int
 1371 0038 F8EE676A 		vcvt.f32.u32	s13, s15
 1372              		.loc 1 307 132 discriminator 1 view .LVU408
 1373 003c 07EE903A 		vmov	s15, r3	@ int
 1374 0040 F8EE677A 		vcvt.f32.u32	s15, s15
 1375              		.loc 1 307 87 discriminator 1 view .LVU409
 1376 0044 86EEA77A 		vdiv.f32	s14, s13, s15
 1377              	.L55:
 304:BSP/BSP.c/FusionAhrs.c ****             .accelerationError = FusionRadiansToDegrees(FusionAsin(2.0f * FusionVectorMagnitude(ahr
 1378              		.loc 1 304 36 view .LVU410
 1379 0048 85ED027A 		vstr.32	s14, [r5, #8]
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 39


 308:BSP/BSP.c/FusionAhrs.c ****             .magneticError = FusionRadiansToDegrees(FusionAsin(2.0f * FusionVectorMagnitude(ahrs->h
 1380              		.loc 1 308 71 view .LVU411
 1381 004c 94ED110A 		vldr.32	s0, [r4, #68]
 1382 0050 D4ED120A 		vldr.32	s1, [r4, #72]
 1383 0054 94ED131A 		vldr.32	s2, [r4, #76]
 1384 0058 FFF7FEFF 		bl	FusionVectorMagnitude
 1385              	.LVL52:
 1386              		.loc 1 308 30 view .LVU412
 1387 005c 30EE000A 		vadd.f32	s0, s0, s0
 1388 0060 FFF7FEFF 		bl	FusionAsin
 1389              	.LVL53:
 1390              	.LBB64:
 1391              	.LBI64:
 136:BSP/BSP.h/FusionMath.h ****     return radians * (180.0f / (float) M_PI);
 1392              		.loc 2 136 21 is_stmt 1 view .LVU413
 1393              	.LBB65:
 137:BSP/BSP.h/FusionMath.h **** }
 1394              		.loc 2 137 5 view .LVU414
 137:BSP/BSP.h/FusionMath.h **** }
 1395              		.loc 2 137 20 is_stmt 0 view .LVU415
 1396 0064 DFED0F7A 		vldr.32	s15, .L60
 1397 0068 20EE270A 		vmul.f32	s0, s0, s15
 1398              	.LVL54:
 137:BSP/BSP.h/FusionMath.h **** }
 1399              		.loc 2 137 20 view .LVU416
 1400              	.LBE65:
 1401              	.LBE64:
 304:BSP/BSP.c/FusionAhrs.c ****             .accelerationError = FusionRadiansToDegrees(FusionAsin(2.0f * FusionVectorMagnitude(ahr
 1402              		.loc 1 304 36 view .LVU417
 1403 006c 85ED030A 		vstr.32	s0, [r5, #12]
 309:BSP/BSP.c/FusionAhrs.c ****             .magnetometerIgnored = ahrs->magnetometerIgnored,
 1404              		.loc 1 309 40 view .LVU418
 1405 0070 94F85930 		ldrb	r3, [r4, #89]	@ zero_extendqisi2
 304:BSP/BSP.c/FusionAhrs.c ****             .accelerationError = FusionRadiansToDegrees(FusionAsin(2.0f * FusionVectorMagnitude(ahr
 1406              		.loc 1 304 36 view .LVU419
 1407 0074 2B74     		strb	r3, [r5, #16]
 310:BSP/BSP.c/FusionAhrs.c ****             .magneticRejectionTimer = ahrs->settings.rejectionTimeout == 0 ? 0.0f : (float) ahrs->m
 1408              		.loc 1 310 53 view .LVU420
 1409 0076 E368     		ldr	r3, [r4, #12]
 1410              		.loc 1 310 83 view .LVU421
 1411 0078 83B1     		cbz	r3, .L58
 1412              		.loc 1 310 97 discriminator 1 view .LVU422
 1413 007a D4ED176A 		vldr.32	s13, [r4, #92]	@ int
 1414              		.loc 1 310 85 discriminator 1 view .LVU423
 1415 007e F8EE666A 		vcvt.f32.u32	s13, s13
 1416              		.loc 1 310 124 discriminator 1 view .LVU424
 1417 0082 07EE903A 		vmov	s15, r3	@ int
 1418 0086 F8EE677A 		vcvt.f32.u32	s15, s15
 1419              		.loc 1 310 83 discriminator 1 view .LVU425
 1420 008a 86EEA77A 		vdiv.f32	s14, s13, s15
 1421              	.L56:
 304:BSP/BSP.c/FusionAhrs.c ****             .accelerationError = FusionRadiansToDegrees(FusionAsin(2.0f * FusionVectorMagnitude(ahr
 1422              		.loc 1 304 36 view .LVU426
 1423 008e 85ED057A 		vstr.32	s14, [r5, #20]
 311:BSP/BSP.c/FusionAhrs.c ****     };
 312:BSP/BSP.c/FusionAhrs.c ****     return internalStates;
 1424              		.loc 1 312 5 is_stmt 1 view .LVU427
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 40


 313:BSP/BSP.c/FusionAhrs.c **** }
 1425              		.loc 1 313 1 is_stmt 0 view .LVU428
 1426 0092 2846     		mov	r0, r5
 1427 0094 38BD     		pop	{r3, r4, r5, pc}
 1428              	.LVL55:
 1429              	.L57:
 307:BSP/BSP.c/FusionAhrs.c ****             .magneticError = FusionRadiansToDegrees(FusionAsin(2.0f * FusionVectorMagnitude(ahrs->h
 1430              		.loc 1 307 87 view .LVU429
 1431 0096 9FED047A 		vldr.32	s14, .L60+4
 1432 009a D5E7     		b	.L55
 1433              	.L58:
 310:BSP/BSP.c/FusionAhrs.c ****     };
 1434              		.loc 1 310 83 view .LVU430
 1435 009c 9FED027A 		vldr.32	s14, .L60+4
 1436 00a0 F5E7     		b	.L56
 1437              	.L61:
 1438 00a2 00BF     		.align	2
 1439              	.L60:
 1440 00a4 E02E6542 		.word	1113927392
 1441 00a8 00000000 		.word	0
 1442              		.cfi_endproc
 1443              	.LFE30:
 1445              		.section	.text.FusionAhrsGetFlags,"ax",%progbits
 1446              		.align	1
 1447              		.global	FusionAhrsGetFlags
 1448              		.syntax unified
 1449              		.thumb
 1450              		.thumb_func
 1452              	FusionAhrsGetFlags:
 1453              	.LVL56:
 1454              	.LFB31:
 314:BSP/BSP.c/FusionAhrs.c **** 
 315:BSP/BSP.c/FusionAhrs.c **** /**
 316:BSP/BSP.c/FusionAhrs.c ****  * @brief Returns the AHRS algorithm flags.
 317:BSP/BSP.c/FusionAhrs.c ****  * @param ahrs AHRS algorithm structure.
 318:BSP/BSP.c/FusionAhrs.c ****  * @return AHRS algorithm flags.
 319:BSP/BSP.c/FusionAhrs.c ****  */
 320:BSP/BSP.c/FusionAhrs.c **** FusionAhrsFlags FusionAhrsGetFlags(FusionAhrs *const ahrs) {
 1455              		.loc 1 320 60 is_stmt 1 view -0
 1456              		.cfi_startproc
 1457              		@ args = 0, pretend = 0, frame = 8
 1458              		@ frame_needed = 0, uses_anonymous_args = 0
 1459              		@ link register save eliminated.
 1460              		.loc 1 320 60 is_stmt 0 view .LVU432
 1461 0000 82B0     		sub	sp, sp, #8
 1462              	.LCFI34:
 1463              		.cfi_def_cfa_offset 8
 1464 0002 0346     		mov	r3, r0
 321:BSP/BSP.c/FusionAhrs.c ****     const unsigned int warningTimeout = ahrs->settings.rejectionTimeout / 4;
 1465              		.loc 1 321 5 is_stmt 1 view .LVU433
 1466              		.loc 1 321 55 is_stmt 0 view .LVU434
 1467 0004 CA68     		ldr	r2, [r1, #12]
 1468              	.LVL57:
 322:BSP/BSP.c/FusionAhrs.c ****     const FusionAhrsFlags flags = {
 1469              		.loc 1 322 5 is_stmt 1 view .LVU435
 323:BSP/BSP.c/FusionAhrs.c ****             .initialising = ahrs->initialising,
 1470              		.loc 1 323 33 is_stmt 0 view .LVU436
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 41


 1471 0006 91F82C00 		ldrb	r0, [r1, #44]	@ zero_extendqisi2
 1472              	.LVL58:
 322:BSP/BSP.c/FusionAhrs.c ****     const FusionAhrsFlags flags = {
 1473              		.loc 1 322 27 view .LVU437
 1474 000a 8DF80000 		strb	r0, [sp]
 324:BSP/BSP.c/FusionAhrs.c ****             .accelerationRejectionWarning = ahrs->accelerationRejectionTimer > warningTimeout,
 1475              		.loc 1 324 49 view .LVU438
 1476 000e 486D     		ldr	r0, [r1, #84]
 1477              		.loc 1 324 78 view .LVU439
 1478 0010 B0EB920F 		cmp	r0, r2, lsr #2
 1479 0014 8CBF     		ite	hi
 1480 0016 0120     		movhi	r0, #1
 1481 0018 0020     		movls	r0, #0
 322:BSP/BSP.c/FusionAhrs.c ****     const FusionAhrsFlags flags = {
 1482              		.loc 1 322 27 view .LVU440
 1483 001a 8DF80100 		strb	r0, [sp, #1]
 325:BSP/BSP.c/FusionAhrs.c ****             .accelerationRejectionTimeout = ahrs->accelerationRejectionTimeout,
 1484              		.loc 1 325 49 view .LVU441
 1485 001e 91F85800 		ldrb	r0, [r1, #88]	@ zero_extendqisi2
 322:BSP/BSP.c/FusionAhrs.c ****             .initialising = ahrs->initialising,
 1486              		.loc 1 322 27 view .LVU442
 1487 0022 8DF80200 		strb	r0, [sp, #2]
 326:BSP/BSP.c/FusionAhrs.c ****             .magneticRejectionWarning = ahrs->magneticRejectionTimer > warningTimeout,
 1488              		.loc 1 326 45 view .LVU443
 1489 0026 C86D     		ldr	r0, [r1, #92]
 1490              		.loc 1 326 70 view .LVU444
 1491 0028 B0EB920F 		cmp	r0, r2, lsr #2
 1492 002c 8CBF     		ite	hi
 1493 002e 0122     		movhi	r2, #1
 1494              	.LVL59:
 1495              		.loc 1 326 70 view .LVU445
 1496 0030 0022     		movls	r2, #0
 322:BSP/BSP.c/FusionAhrs.c ****             .initialising = ahrs->initialising,
 1497              		.loc 1 322 27 view .LVU446
 1498 0032 8DF80320 		strb	r2, [sp, #3]
 327:BSP/BSP.c/FusionAhrs.c ****             .magneticRejectionTimeout = ahrs->magneticRejectionTimeout,
 1499              		.loc 1 327 45 view .LVU447
 1500 0036 91F86020 		ldrb	r2, [r1, #96]	@ zero_extendqisi2
 322:BSP/BSP.c/FusionAhrs.c ****             .initialising = ahrs->initialising,
 1501              		.loc 1 322 27 view .LVU448
 1502 003a 8DF80420 		strb	r2, [sp, #4]
 328:BSP/BSP.c/FusionAhrs.c ****     };
 329:BSP/BSP.c/FusionAhrs.c ****     return flags;
 1503              		.loc 1 329 5 is_stmt 1 view .LVU449
 1504              		.loc 1 329 12 is_stmt 0 view .LVU450
 1505 003e 0098     		ldr	r0, [sp]
 1506 0040 1860     		str	r0, [r3]	@ unaligned
 1507 0042 D2B2     		uxtb	r2, r2
 1508 0044 1A71     		strb	r2, [r3, #4]
 330:BSP/BSP.c/FusionAhrs.c **** }
 1509              		.loc 1 330 1 view .LVU451
 1510 0046 1846     		mov	r0, r3
 1511 0048 02B0     		add	sp, sp, #8
 1512              	.LCFI35:
 1513              		.cfi_def_cfa_offset 0
 1514              		@ sp needed
 1515 004a 7047     		bx	lr
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 42


 1516              		.cfi_endproc
 1517              	.LFE31:
 1519              		.section	.text.FusionAhrsSetHeading,"ax",%progbits
 1520              		.align	1
 1521              		.global	FusionAhrsSetHeading
 1522              		.syntax unified
 1523              		.thumb
 1524              		.thumb_func
 1526              	FusionAhrsSetHeading:
 1527              	.LVL60:
 1528              	.LFB32:
 331:BSP/BSP.c/FusionAhrs.c **** 
 332:BSP/BSP.c/FusionAhrs.c **** /**
 333:BSP/BSP.c/FusionAhrs.c ****  * @brief Sets the heading of the orientation measurement provided by the AHRS
 334:BSP/BSP.c/FusionAhrs.c ****  * algorithm.  This function can be used to reset drift in heading when the AHRS
 335:BSP/BSP.c/FusionAhrs.c ****  * algorithm is being used without a magnetometer.
 336:BSP/BSP.c/FusionAhrs.c ****  * @param ahrs AHRS algorithm structure.
 337:BSP/BSP.c/FusionAhrs.c ****  * @param heading Heading angle in degrees.
 338:BSP/BSP.c/FusionAhrs.c ****  */
 339:BSP/BSP.c/FusionAhrs.c **** void FusionAhrsSetHeading(FusionAhrs *const ahrs, const float heading) {
 1529              		.loc 1 339 72 is_stmt 1 view -0
 1530              		.cfi_startproc
 1531              		@ args = 0, pretend = 0, frame = 16
 1532              		@ frame_needed = 0, uses_anonymous_args = 0
 1533              		.loc 1 339 72 is_stmt 0 view .LVU453
 1534 0000 10B5     		push	{r4, lr}
 1535              	.LCFI36:
 1536              		.cfi_def_cfa_offset 8
 1537              		.cfi_offset 4, -8
 1538              		.cfi_offset 14, -4
 1539 0002 2DED048B 		vpush.64	{d8, d9}
 1540              	.LCFI37:
 1541              		.cfi_def_cfa_offset 24
 1542              		.cfi_offset 80, -24
 1543              		.cfi_offset 81, -20
 1544              		.cfi_offset 82, -16
 1545              		.cfi_offset 83, -12
 1546 0006 84B0     		sub	sp, sp, #16
 1547              	.LCFI38:
 1548              		.cfi_def_cfa_offset 40
 1549 0008 0446     		mov	r4, r0
 1550 000a B0EE408A 		vmov.f32	s16, s0
 340:BSP/BSP.c/FusionAhrs.c **** #define Q ahrs->quaternion.element
 341:BSP/BSP.c/FusionAhrs.c ****     const float yaw = atan2f(Q.w * Q.z + Q.x * Q.y, 0.5f - Q.y * Q.y - Q.z * Q.z);
 1551              		.loc 1 341 5 is_stmt 1 view .LVU454
 1552              		.loc 1 341 31 is_stmt 0 view .LVU455
 1553 000e 90ED040A 		vldr.32	s0, [r0, #16]
 1554              	.LVL61:
 1555              		.loc 1 341 37 view .LVU456
 1556 0012 D0ED070A 		vldr.32	s1, [r0, #28]
 1557              		.loc 1 341 34 view .LVU457
 1558 0016 20EE200A 		vmul.f32	s0, s0, s1
 1559              		.loc 1 341 43 view .LVU458
 1560 001a 90ED057A 		vldr.32	s14, [r0, #20]
 1561              		.loc 1 341 49 view .LVU459
 1562 001e D0ED067A 		vldr.32	s15, [r0, #24]
 1563              		.loc 1 341 46 view .LVU460
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 43


 1564 0022 27EE277A 		vmul.f32	s14, s14, s15
 1565              		.loc 1 341 64 view .LVU461
 1566 0026 67EEA77A 		vmul.f32	s15, s15, s15
 1567              		.loc 1 341 58 view .LVU462
 1568 002a F6EE008A 		vmov.f32	s17, #5.0e-1
 1569 002e 78EEE77A 		vsub.f32	s15, s17, s15
 1570              		.loc 1 341 76 view .LVU463
 1571 0032 60EEA00A 		vmul.f32	s1, s1, s1
 1572              		.loc 1 341 23 view .LVU464
 1573 0036 77EEE00A 		vsub.f32	s1, s15, s1
 1574 003a 30EE070A 		vadd.f32	s0, s0, s14
 1575 003e FFF7FEFF 		bl	atan2f
 1576              	.LVL62:
 342:BSP/BSP.c/FusionAhrs.c ****     const float halfYawMinusHeading = 0.5f * (yaw - FusionDegreesToRadians(heading));
 1577              		.loc 1 342 5 is_stmt 1 view .LVU465
 1578              	.LBB66:
 1579              	.LBI66:
 127:BSP/BSP.h/FusionMath.h ****     return degrees * ((float) M_PI / 180.0f);
 1580              		.loc 2 127 21 view .LVU466
 1581              	.LBB67:
 128:BSP/BSP.h/FusionMath.h **** }
 1582              		.loc 2 128 5 view .LVU467
 128:BSP/BSP.h/FusionMath.h **** }
 1583              		.loc 2 128 20 is_stmt 0 view .LVU468
 1584 0042 DFED1D7A 		vldr.32	s15, .L66
 1585 0046 28EE278A 		vmul.f32	s16, s16, s15
 1586              	.LVL63:
 128:BSP/BSP.h/FusionMath.h **** }
 1587              		.loc 2 128 20 view .LVU469
 1588              	.LBE67:
 1589              	.LBE66:
 1590              		.loc 1 342 51 view .LVU470
 1591 004a 30EE488A 		vsub.f32	s16, s0, s16
 1592              		.loc 1 342 17 view .LVU471
 1593 004e 28EE288A 		vmul.f32	s16, s16, s17
 1594              	.LVL64:
 343:BSP/BSP.c/FusionAhrs.c ****     const FusionQuaternion rotation = {
 1595              		.loc 1 343 5 is_stmt 1 view .LVU472
 344:BSP/BSP.c/FusionAhrs.c ****             .element.w = cosf(halfYawMinusHeading),
 1596              		.loc 1 344 26 is_stmt 0 view .LVU473
 1597 0052 B0EE480A 		vmov.f32	s0, s16
 1598              	.LVL65:
 1599              		.loc 1 344 26 view .LVU474
 1600 0056 FFF7FEFF 		bl	cosf
 1601              	.LVL66:
 1602 005a B0EE409A 		vmov.f32	s18, s0
 343:BSP/BSP.c/FusionAhrs.c ****     const FusionQuaternion rotation = {
 1603              		.loc 1 343 28 view .LVU475
 1604 005e 8DED000A 		vstr.32	s0, [sp]
 1605 0062 DFED168A 		vldr.32	s17, .L66+4
 1606 0066 CDED018A 		vstr.32	s17, [sp, #4]
 1607 006a CDED028A 		vstr.32	s17, [sp, #8]
 345:BSP/BSP.c/FusionAhrs.c ****             .element.x = 0.0f,
 346:BSP/BSP.c/FusionAhrs.c ****             .element.y = 0.0f,
 347:BSP/BSP.c/FusionAhrs.c ****             .element.z = -1.0f * sinf(halfYawMinusHeading),
 1608              		.loc 1 347 34 view .LVU476
 1609 006e B0EE480A 		vmov.f32	s0, s16
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 44


 1610 0072 FFF7FEFF 		bl	sinf
 1611              	.LVL67:
 1612              		.loc 1 347 32 view .LVU477
 1613 0076 F1EE401A 		vneg.f32	s3, s0
 343:BSP/BSP.c/FusionAhrs.c ****             .element.w = cosf(halfYawMinusHeading),
 1614              		.loc 1 343 28 view .LVU478
 1615 007a CDED031A 		vstr.32	s3, [sp, #12]
 348:BSP/BSP.c/FusionAhrs.c ****     };
 349:BSP/BSP.c/FusionAhrs.c ****     ahrs->quaternion = FusionQuaternionMultiply(rotation, ahrs->quaternion);
 1616              		.loc 1 349 5 is_stmt 1 view .LVU479
 1617              		.loc 1 349 24 is_stmt 0 view .LVU480
 1618 007e 94ED042A 		vldr.32	s4, [r4, #16]
 1619 0082 D4ED052A 		vldr.32	s5, [r4, #20]
 1620 0086 94ED063A 		vldr.32	s6, [r4, #24]
 1621 008a D4ED073A 		vldr.32	s7, [r4, #28]
 1622 008e B0EE490A 		vmov.f32	s0, s18
 1623 0092 F0EE680A 		vmov.f32	s1, s17
 1624 0096 B0EE681A 		vmov.f32	s2, s17
 1625 009a FFF7FEFF 		bl	FusionQuaternionMultiply
 1626              	.LVL68:
 1627 009e 84ED040A 		vstr.32	s0, [r4, #16]
 1628 00a2 C4ED050A 		vstr.32	s1, [r4, #20]
 1629 00a6 84ED061A 		vstr.32	s2, [r4, #24]
 1630 00aa C4ED071A 		vstr.32	s3, [r4, #28]
 350:BSP/BSP.c/FusionAhrs.c **** #undef Q
 351:BSP/BSP.c/FusionAhrs.c **** }
 1631              		.loc 1 351 1 view .LVU481
 1632 00ae 04B0     		add	sp, sp, #16
 1633              	.LCFI39:
 1634              		.cfi_def_cfa_offset 24
 1635              		@ sp needed
 1636 00b0 BDEC048B 		vldm	sp!, {d8-d9}
 1637              	.LCFI40:
 1638              		.cfi_restore 82
 1639              		.cfi_restore 83
 1640              		.cfi_restore 80
 1641              		.cfi_restore 81
 1642              		.cfi_def_cfa_offset 8
 1643              	.LVL69:
 1644              		.loc 1 351 1 view .LVU482
 1645 00b4 10BD     		pop	{r4, pc}
 1646              	.LVL70:
 1647              	.L67:
 1648              		.loc 1 351 1 view .LVU483
 1649 00b6 00BF     		.align	2
 1650              	.L66:
 1651 00b8 35FA8E3C 		.word	1016003125
 1652 00bc 00000000 		.word	0
 1653              		.cfi_endproc
 1654              	.LFE32:
 1656              		.section	.text.FusionAhrsUpdate,"ax",%progbits
 1657              		.align	1
 1658              		.global	FusionAhrsUpdate
 1659              		.syntax unified
 1660              		.thumb
 1661              		.thumb_func
 1663              	FusionAhrsUpdate:
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 45


 1664              	.LVL71:
 1665              	.LFB24:
 100:BSP/BSP.c/FusionAhrs.c **** #define Q ahrs->quaternion.element
 1666              		.loc 1 100 167 is_stmt 1 view -0
 1667              		.cfi_startproc
 1668              		@ args = 0, pretend = 0, frame = 312
 1669              		@ frame_needed = 0, uses_anonymous_args = 0
 100:BSP/BSP.c/FusionAhrs.c **** #define Q ahrs->quaternion.element
 1670              		.loc 1 100 167 is_stmt 0 view .LVU485
 1671 0000 70B5     		push	{r4, r5, r6, lr}
 1672              	.LCFI41:
 1673              		.cfi_def_cfa_offset 16
 1674              		.cfi_offset 4, -16
 1675              		.cfi_offset 5, -12
 1676              		.cfi_offset 6, -8
 1677              		.cfi_offset 14, -4
 1678 0002 2DED048B 		vpush.64	{d8, d9}
 1679              	.LCFI42:
 1680              		.cfi_def_cfa_offset 32
 1681              		.cfi_offset 80, -32
 1682              		.cfi_offset 81, -28
 1683              		.cfi_offset 82, -24
 1684              		.cfi_offset 83, -20
 1685 0006 CEB0     		sub	sp, sp, #312
 1686              	.LCFI43:
 1687              		.cfi_def_cfa_offset 344
 1688 0008 0446     		mov	r4, r0
 1689 000a 04AB     		add	r3, sp, #16
 1690 000c B0EE648A 		vmov.f32	s16, s9
 1691 0010 8DED070A 		vstr.32	s0, [sp, #28]
 1692 0014 CDED080A 		vstr.32	s1, [sp, #32]
 1693 0018 8DED091A 		vstr.32	s2, [sp, #36]
 1694 001c CDED041A 		vstr.32	s3, [sp, #16]
 1695 0020 8DED052A 		vstr.32	s4, [sp, #20]
 1696 0024 CDED062A 		vstr.32	s5, [sp, #24]
 1697 0028 8DED013A 		vstr.32	s6, [sp, #4]
 1698 002c CDED023A 		vstr.32	s7, [sp, #8]
 1699 0030 8DED034A 		vstr.32	s8, [sp, #12]
 104:BSP/BSP.c/FusionAhrs.c **** 
 1700              		.loc 1 104 5 is_stmt 1 view .LVU486
 104:BSP/BSP.c/FusionAhrs.c **** 
 1701              		.loc 1 104 25 is_stmt 0 view .LVU487
 1702 0034 00F12005 		add	r5, r0, #32
 1703 0038 93E80700 		ldm	r3, {r0, r1, r2}
 1704              	.LVL72:
 104:BSP/BSP.c/FusionAhrs.c **** 
 1705              		.loc 1 104 25 view .LVU488
 1706 003c 85E80700 		stm	r5, {r0, r1, r2}
 107:BSP/BSP.c/FusionAhrs.c ****         ahrs->rampedGain -= ahrs->rampedGainStep * deltaTime;
 1707              		.loc 1 107 5 is_stmt 1 view .LVU489
 107:BSP/BSP.c/FusionAhrs.c ****         ahrs->rampedGain -= ahrs->rampedGainStep * deltaTime;
 1708              		.loc 1 107 13 is_stmt 0 view .LVU490
 1709 0040 94F82C30 		ldrb	r3, [r4, #44]	@ zero_extendqisi2
 107:BSP/BSP.c/FusionAhrs.c ****         ahrs->rampedGain -= ahrs->rampedGainStep * deltaTime;
 1710              		.loc 1 107 8 view .LVU491
 1711 0044 BBB1     		cbz	r3, .L69
 108:BSP/BSP.c/FusionAhrs.c ****         if (ahrs->rampedGain < ahrs->settings.gain) {
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 46


 1712              		.loc 1 108 9 is_stmt 1 view .LVU492
 108:BSP/BSP.c/FusionAhrs.c ****         if (ahrs->rampedGain < ahrs->settings.gain) {
 1713              		.loc 1 108 13 is_stmt 0 view .LVU493
 1714 0046 D4ED0C7A 		vldr.32	s15, [r4, #48]
 108:BSP/BSP.c/FusionAhrs.c ****         if (ahrs->rampedGain < ahrs->settings.gain) {
 1715              		.loc 1 108 33 view .LVU494
 1716 004a 94ED0D7A 		vldr.32	s14, [r4, #52]
 108:BSP/BSP.c/FusionAhrs.c ****         if (ahrs->rampedGain < ahrs->settings.gain) {
 1717              		.loc 1 108 50 view .LVU495
 1718 004e 27EE247A 		vmul.f32	s14, s14, s9
 108:BSP/BSP.c/FusionAhrs.c ****         if (ahrs->rampedGain < ahrs->settings.gain) {
 1719              		.loc 1 108 26 view .LVU496
 1720 0052 77EEC77A 		vsub.f32	s15, s15, s14
 1721 0056 C4ED0C7A 		vstr.32	s15, [r4, #48]
 109:BSP/BSP.c/FusionAhrs.c ****             ahrs->rampedGain = ahrs->settings.gain;
 1722              		.loc 1 109 9 is_stmt 1 view .LVU497
 109:BSP/BSP.c/FusionAhrs.c ****             ahrs->rampedGain = ahrs->settings.gain;
 1723              		.loc 1 109 46 is_stmt 0 view .LVU498
 1724 005a 94ED007A 		vldr.32	s14, [r4]
 109:BSP/BSP.c/FusionAhrs.c ****             ahrs->rampedGain = ahrs->settings.gain;
 1725              		.loc 1 109 12 view .LVU499
 1726 005e F4EEC77A 		vcmpe.f32	s15, s14
 1727 0062 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1728 0066 06D5     		bpl	.L69
 110:BSP/BSP.c/FusionAhrs.c ****             ahrs->initialising = false;
 1729              		.loc 1 110 13 is_stmt 1 view .LVU500
 110:BSP/BSP.c/FusionAhrs.c ****             ahrs->initialising = false;
 1730              		.loc 1 110 30 is_stmt 0 view .LVU501
 1731 0068 84ED0C7A 		vstr.32	s14, [r4, #48]
 111:BSP/BSP.c/FusionAhrs.c ****             ahrs->accelerationRejectionTimeout = false;
 1732              		.loc 1 111 13 is_stmt 1 view .LVU502
 111:BSP/BSP.c/FusionAhrs.c ****             ahrs->accelerationRejectionTimeout = false;
 1733              		.loc 1 111 32 is_stmt 0 view .LVU503
 1734 006c 0023     		movs	r3, #0
 1735 006e 84F82C30 		strb	r3, [r4, #44]
 112:BSP/BSP.c/FusionAhrs.c ****         }
 1736              		.loc 1 112 13 is_stmt 1 view .LVU504
 112:BSP/BSP.c/FusionAhrs.c ****         }
 1737              		.loc 1 112 48 is_stmt 0 view .LVU505
 1738 0072 84F85830 		strb	r3, [r4, #88]
 1739              	.L69:
 117:BSP/BSP.c/FusionAhrs.c ****             .axis.x = Q.x * Q.z - Q.w * Q.y,
 1740              		.loc 1 117 5 is_stmt 1 view .LVU506
 118:BSP/BSP.c/FusionAhrs.c ****             .axis.y = Q.y * Q.z + Q.w * Q.x,
 1741              		.loc 1 118 24 is_stmt 0 view .LVU507
 1742 0076 94ED056A 		vldr.32	s12, [r4, #20]
 118:BSP/BSP.c/FusionAhrs.c ****             .axis.y = Q.y * Q.z + Q.w * Q.x,
 1743              		.loc 1 118 30 view .LVU508
 1744 007a 94ED077A 		vldr.32	s14, [r4, #28]
 118:BSP/BSP.c/FusionAhrs.c ****             .axis.y = Q.y * Q.z + Q.w * Q.x,
 1745              		.loc 1 118 27 view .LVU509
 1746 007e 66EE075A 		vmul.f32	s11, s12, s14
 118:BSP/BSP.c/FusionAhrs.c ****             .axis.y = Q.y * Q.z + Q.w * Q.x,
 1747              		.loc 1 118 36 view .LVU510
 1748 0082 D4ED047A 		vldr.32	s15, [r4, #16]
 118:BSP/BSP.c/FusionAhrs.c ****             .axis.y = Q.y * Q.z + Q.w * Q.x,
 1749              		.loc 1 118 42 view .LVU511
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 47


 1750 0086 D4ED066A 		vldr.32	s13, [r4, #24]
 118:BSP/BSP.c/FusionAhrs.c ****             .axis.y = Q.y * Q.z + Q.w * Q.x,
 1751              		.loc 1 118 39 view .LVU512
 1752 008a 27EEA65A 		vmul.f32	s10, s15, s13
 118:BSP/BSP.c/FusionAhrs.c ****             .axis.y = Q.y * Q.z + Q.w * Q.x,
 1753              		.loc 1 118 33 view .LVU513
 1754 008e 75EEC55A 		vsub.f32	s11, s11, s10
 117:BSP/BSP.c/FusionAhrs.c ****             .axis.x = Q.x * Q.z - Q.w * Q.y,
 1755              		.loc 1 117 24 view .LVU514
 1756 0092 CDED1E5A 		vstr.32	s11, [sp, #120]
 119:BSP/BSP.c/FusionAhrs.c ****             .axis.z = Q.w * Q.w - 0.5f + Q.z * Q.z,
 1757              		.loc 1 119 27 view .LVU515
 1758 0096 67EE266A 		vmul.f32	s13, s14, s13
 119:BSP/BSP.c/FusionAhrs.c ****             .axis.z = Q.w * Q.w - 0.5f + Q.z * Q.z,
 1759              		.loc 1 119 39 view .LVU516
 1760 009a 26EE276A 		vmul.f32	s12, s12, s15
 119:BSP/BSP.c/FusionAhrs.c ****             .axis.z = Q.w * Q.w - 0.5f + Q.z * Q.z,
 1761              		.loc 1 119 33 view .LVU517
 1762 009e 76EE866A 		vadd.f32	s13, s13, s12
 117:BSP/BSP.c/FusionAhrs.c ****             .axis.x = Q.x * Q.z - Q.w * Q.y,
 1763              		.loc 1 117 24 view .LVU518
 1764 00a2 CDED1F6A 		vstr.32	s13, [sp, #124]
 120:BSP/BSP.c/FusionAhrs.c ****     }; // third column of transposed rotation matrix scaled by 0.5
 1765              		.loc 1 120 27 view .LVU519
 1766 00a6 67EEA77A 		vmul.f32	s15, s15, s15
 120:BSP/BSP.c/FusionAhrs.c ****     }; // third column of transposed rotation matrix scaled by 0.5
 1767              		.loc 1 120 33 view .LVU520
 1768 00aa F6EE006A 		vmov.f32	s13, #5.0e-1
 1769 00ae 77EEE67A 		vsub.f32	s15, s15, s13
 120:BSP/BSP.c/FusionAhrs.c ****     }; // third column of transposed rotation matrix scaled by 0.5
 1770              		.loc 1 120 46 view .LVU521
 1771 00b2 27EE077A 		vmul.f32	s14, s14, s14
 120:BSP/BSP.c/FusionAhrs.c ****     }; // third column of transposed rotation matrix scaled by 0.5
 1772              		.loc 1 120 40 view .LVU522
 1773 00b6 77EE877A 		vadd.f32	s15, s15, s14
 117:BSP/BSP.c/FusionAhrs.c ****             .axis.x = Q.x * Q.z - Q.w * Q.y,
 1774              		.loc 1 117 24 view .LVU523
 1775 00ba CDED207A 		vstr.32	s15, [sp, #128]
 124:BSP/BSP.c/FusionAhrs.c ****     ahrs->accelerometerIgnored = true;
 1776              		.loc 1 124 5 is_stmt 1 view .LVU524
 124:BSP/BSP.c/FusionAhrs.c ****     ahrs->accelerometerIgnored = true;
 1777              		.loc 1 124 18 is_stmt 0 view .LVU525
 1778 00be 0023     		movs	r3, #0
 1779 00c0 1B93     		str	r3, [sp, #108]	@ float
 1780 00c2 1C93     		str	r3, [sp, #112]	@ float
 1781 00c4 1D93     		str	r3, [sp, #116]	@ float
 125:BSP/BSP.c/FusionAhrs.c ****     if (FusionVectorIsZero(accelerometer) == false) {
 1782              		.loc 1 125 5 is_stmt 1 view .LVU526
 125:BSP/BSP.c/FusionAhrs.c ****     if (FusionVectorIsZero(accelerometer) == false) {
 1783              		.loc 1 125 32 is_stmt 0 view .LVU527
 1784 00c6 0123     		movs	r3, #1
 1785 00c8 84F85030 		strb	r3, [r4, #80]
 126:BSP/BSP.c/FusionAhrs.c **** 
 1786              		.loc 1 126 5 is_stmt 1 view .LVU528
 1787              	.LBB68:
 1788              	.LBI68:
 191:BSP/BSP.h/FusionMath.h ****     return (vector.axis.x == 0.0f) && (vector.axis.y == 0.0f) && (vector.axis.z == 0.0f);
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 48


 1789              		.loc 2 191 20 view .LVU529
 1790              	.LBB69:
 192:BSP/BSP.h/FusionMath.h **** }
 1791              		.loc 2 192 5 view .LVU530
 192:BSP/BSP.h/FusionMath.h **** }
 1792              		.loc 2 192 24 is_stmt 0 view .LVU531
 1793 00cc DDED047A 		vldr.32	s15, [sp, #16]
 192:BSP/BSP.h/FusionMath.h **** }
 1794              		.loc 2 192 63 view .LVU532
 1795 00d0 F5EE407A 		vcmp.f32	s15, #0
 1796 00d4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1797 00d8 0FD1     		bne	.L86
 192:BSP/BSP.h/FusionMath.h **** }
 1798              		.loc 2 192 51 view .LVU533
 1799 00da DDED057A 		vldr.32	s15, [sp, #20]
 192:BSP/BSP.h/FusionMath.h **** }
 1800              		.loc 2 192 36 view .LVU534
 1801 00de F5EE407A 		vcmp.f32	s15, #0
 1802 00e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1803 00e6 66D1     		bne	.L87
 192:BSP/BSP.h/FusionMath.h **** }
 1804              		.loc 2 192 78 view .LVU535
 1805 00e8 DDED067A 		vldr.32	s15, [sp, #24]
 192:BSP/BSP.h/FusionMath.h **** }
 1806              		.loc 2 192 63 view .LVU536
 1807 00ec F5EE407A 		vcmp.f32	s15, #0
 1808 00f0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1809 00f4 61D0     		beq	.L88
 1810 00f6 0023     		movs	r3, #0
 1811 00f8 00E0     		b	.L71
 1812              	.L86:
 1813 00fa 0023     		movs	r3, #0
 1814              	.L71:
 1815              	.LBE69:
 1816              	.LBE68:
 126:BSP/BSP.c/FusionAhrs.c **** 
 1817              		.loc 1 126 8 view .LVU537
 1818 00fc 002B     		cmp	r3, #0
 1819 00fe 3AD1     		bne	.L72
 129:BSP/BSP.c/FusionAhrs.c ****             const FusionQuaternion quaternion = ahrs->quaternion;
 1820              		.loc 1 129 9 is_stmt 1 view .LVU538
 129:BSP/BSP.c/FusionAhrs.c ****             const FusionQuaternion quaternion = ahrs->quaternion;
 1821              		.loc 1 129 17 is_stmt 0 view .LVU539
 1822 0100 626D     		ldr	r2, [r4, #84]
 129:BSP/BSP.c/FusionAhrs.c ****             const FusionQuaternion quaternion = ahrs->quaternion;
 1823              		.loc 1 129 62 view .LVU540
 1824 0102 E368     		ldr	r3, [r4, #12]
 129:BSP/BSP.c/FusionAhrs.c ****             const FusionQuaternion quaternion = ahrs->quaternion;
 1825              		.loc 1 129 12 view .LVU541
 1826 0104 9A42     		cmp	r2, r3
 1827 0106 5AD8     		bhi	.L98
 1828              	.LVL73:
 1829              	.L73:
 138:BSP/BSP.c/FusionAhrs.c **** 
 1830              		.loc 1 138 9 is_stmt 1 view .LVU542
 138:BSP/BSP.c/FusionAhrs.c **** 
 1831              		.loc 1 138 43 is_stmt 0 view .LVU543
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 49


 1832 0108 9DED040A 		vldr.32	s0, [sp, #16]
 1833 010c DDED050A 		vldr.32	s1, [sp, #20]
 1834 0110 9DED061A 		vldr.32	s2, [sp, #24]
 1835 0114 FFF7FEFF 		bl	FusionVectorNormalise
 1836              	.LVL74:
 1837 0118 8DED210A 		vstr.32	s0, [sp, #132]
 1838 011c CDED220A 		vstr.32	s1, [sp, #136]
 1839 0120 8DED231A 		vstr.32	s2, [sp, #140]
 1840 0124 DDED1E1A 		vldr.32	s3, [sp, #120]
 1841 0128 9DED1F2A 		vldr.32	s4, [sp, #124]
 1842 012c DDED202A 		vldr.32	s5, [sp, #128]
 1843 0130 FFF7FEFF 		bl	FusionVectorCrossProduct
 1844              	.LVL75:
 1845 0134 84ED0E0A 		vstr.32	s0, [r4, #56]
 1846 0138 C4ED0F0A 		vstr.32	s1, [r4, #60]
 1847 013c 84ED101A 		vstr.32	s2, [r4, #64]
 141:BSP/BSP.c/FusionAhrs.c ****             halfAccelerometerFeedback = ahrs->halfAccelerometerFeedback;
 1848              		.loc 1 141 9 is_stmt 1 view .LVU544
 141:BSP/BSP.c/FusionAhrs.c ****             halfAccelerometerFeedback = ahrs->halfAccelerometerFeedback;
 1849              		.loc 1 141 18 is_stmt 0 view .LVU545
 1850 0140 94F82C30 		ldrb	r3, [r4, #44]	@ zero_extendqisi2
 141:BSP/BSP.c/FusionAhrs.c ****             halfAccelerometerFeedback = ahrs->halfAccelerometerFeedback;
 1851              		.loc 1 141 12 view .LVU546
 1852 0144 43B9     		cbnz	r3, .L74
 141:BSP/BSP.c/FusionAhrs.c ****             halfAccelerometerFeedback = ahrs->halfAccelerometerFeedback;
 1853              		.loc 1 141 46 discriminator 1 view .LVU547
 1854 0146 FFF7FEFF 		bl	FusionVectorMagnitudeSquared
 1855              	.LVL76:
 141:BSP/BSP.c/FusionAhrs.c ****             halfAccelerometerFeedback = ahrs->halfAccelerometerFeedback;
 1856              		.loc 1 141 125 discriminator 1 view .LVU548
 1857 014a D4ED017A 		vldr.32	s15, [r4, #4]
 141:BSP/BSP.c/FusionAhrs.c ****             halfAccelerometerFeedback = ahrs->halfAccelerometerFeedback;
 1858              		.loc 1 141 42 discriminator 1 view .LVU549
 1859 014e B4EEE70A 		vcmpe.f32	s0, s15
 1860 0152 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1861 0156 48D8     		bhi	.L95
 1862              	.L74:
 142:BSP/BSP.c/FusionAhrs.c ****             ahrs->accelerometerIgnored = false;
 1863              		.loc 1 142 13 is_stmt 1 view .LVU550
 142:BSP/BSP.c/FusionAhrs.c ****             ahrs->accelerometerIgnored = false;
 1864              		.loc 1 142 39 is_stmt 0 view .LVU551
 1865 0158 1BAB     		add	r3, sp, #108
 1866 015a 04F13802 		add	r2, r4, #56
 1867 015e 07CA     		ldm	r2, {r0, r1, r2}
 1868 0160 83E80700 		stm	r3, {r0, r1, r2}
 143:BSP/BSP.c/FusionAhrs.c ****             ahrs->accelerationRejectionTimer -= ahrs->accelerationRejectionTimer >= 10 ? 10 : 0;
 1869              		.loc 1 143 13 is_stmt 1 view .LVU552
 143:BSP/BSP.c/FusionAhrs.c ****             ahrs->accelerationRejectionTimer -= ahrs->accelerationRejectionTimer >= 10 ? 10 : 0;
 1870              		.loc 1 143 40 is_stmt 0 view .LVU553
 1871 0164 0023     		movs	r3, #0
 1872 0166 84F85030 		strb	r3, [r4, #80]
 144:BSP/BSP.c/FusionAhrs.c ****         } else {
 1873              		.loc 1 144 13 is_stmt 1 view .LVU554
 144:BSP/BSP.c/FusionAhrs.c ****         } else {
 1874              		.loc 1 144 17 is_stmt 0 view .LVU555
 1875 016a 636D     		ldr	r3, [r4, #84]
 144:BSP/BSP.c/FusionAhrs.c ****         } else {
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 50


 1876              		.loc 1 144 93 view .LVU556
 1877 016c 092B     		cmp	r3, #9
 1878 016e 3AD9     		bls	.L89
 1879 0170 0A22     		movs	r2, #10
 1880              	.L77:
 144:BSP/BSP.c/FusionAhrs.c ****         } else {
 1881              		.loc 1 144 46 discriminator 4 view .LVU557
 1882 0172 9B1A     		subs	r3, r3, r2
 1883 0174 6365     		str	r3, [r4, #84]
 1884              	.L72:
 151:BSP/BSP.c/FusionAhrs.c ****     ahrs->magnetometerIgnored = true;
 1885              		.loc 1 151 5 is_stmt 1 view .LVU558
 151:BSP/BSP.c/FusionAhrs.c ****     ahrs->magnetometerIgnored = true;
 1886              		.loc 1 151 18 is_stmt 0 view .LVU559
 1887 0176 0023     		movs	r3, #0
 1888 0178 1893     		str	r3, [sp, #96]	@ float
 1889 017a 1993     		str	r3, [sp, #100]	@ float
 1890 017c 1A93     		str	r3, [sp, #104]	@ float
 152:BSP/BSP.c/FusionAhrs.c ****     if (FusionVectorIsZero(magnetometer) == false) {
 1891              		.loc 1 152 5 is_stmt 1 view .LVU560
 152:BSP/BSP.c/FusionAhrs.c ****     if (FusionVectorIsZero(magnetometer) == false) {
 1892              		.loc 1 152 31 is_stmt 0 view .LVU561
 1893 017e 0123     		movs	r3, #1
 1894 0180 84F85930 		strb	r3, [r4, #89]
 153:BSP/BSP.c/FusionAhrs.c **** 
 1895              		.loc 1 153 5 is_stmt 1 view .LVU562
 1896              	.LBB71:
 1897              	.LBI71:
 191:BSP/BSP.h/FusionMath.h ****     return (vector.axis.x == 0.0f) && (vector.axis.y == 0.0f) && (vector.axis.z == 0.0f);
 1898              		.loc 2 191 20 view .LVU563
 1899              	.LBB72:
 192:BSP/BSP.h/FusionMath.h **** }
 1900              		.loc 2 192 5 view .LVU564
 192:BSP/BSP.h/FusionMath.h **** }
 1901              		.loc 2 192 24 is_stmt 0 view .LVU565
 1902 0184 DDED017A 		vldr.32	s15, [sp, #4]
 192:BSP/BSP.h/FusionMath.h **** }
 1903              		.loc 2 192 63 view .LVU566
 1904 0188 F5EE407A 		vcmp.f32	s15, #0
 1905 018c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1906 0190 2FD1     		bne	.L90
 192:BSP/BSP.h/FusionMath.h **** }
 1907              		.loc 2 192 51 view .LVU567
 1908 0192 DDED027A 		vldr.32	s15, [sp, #8]
 192:BSP/BSP.h/FusionMath.h **** }
 1909              		.loc 2 192 36 view .LVU568
 1910 0196 F5EE407A 		vcmp.f32	s15, #0
 1911 019a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1912 019e 40F07681 		bne	.L91
 192:BSP/BSP.h/FusionMath.h **** }
 1913              		.loc 2 192 78 view .LVU569
 1914 01a2 DDED037A 		vldr.32	s15, [sp, #12]
 192:BSP/BSP.h/FusionMath.h **** }
 1915              		.loc 2 192 63 view .LVU570
 1916 01a6 F5EE407A 		vcmp.f32	s15, #0
 1917 01aa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1918 01ae 00F07081 		beq	.L92
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 51


 1919 01b2 0023     		movs	r3, #0
 1920 01b4 1EE0     		b	.L78
 1921              	.LVL77:
 1922              	.L87:
 192:BSP/BSP.h/FusionMath.h **** }
 1923              		.loc 2 192 63 view .LVU571
 1924              	.LBE72:
 1925              	.LBE71:
 1926              	.LBB75:
 1927              	.LBB70:
 1928 01b6 0023     		movs	r3, #0
 1929 01b8 A0E7     		b	.L71
 1930              	.L88:
 1931 01ba 0123     		movs	r3, #1
 1932 01bc 9EE7     		b	.L71
 1933              	.L98:
 192:BSP/BSP.h/FusionMath.h **** }
 1934              		.loc 2 192 63 view .LVU572
 1935              	.LBE70:
 1936              	.LBE75:
 1937              	.LBB76:
 130:BSP/BSP.c/FusionAhrs.c ****             FusionAhrsReset(ahrs);
 1938              		.loc 1 130 13 is_stmt 1 view .LVU573
 130:BSP/BSP.c/FusionAhrs.c ****             FusionAhrsReset(ahrs);
 1939              		.loc 1 130 36 is_stmt 0 view .LVU574
 1940 01be 0EAE     		add	r6, sp, #56
 1941 01c0 04F11005 		add	r5, r4, #16
 1942 01c4 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 1943 01c8 86E80F00 		stm	r6, {r0, r1, r2, r3}
 131:BSP/BSP.c/FusionAhrs.c ****             ahrs->quaternion = quaternion;
 1944              		.loc 1 131 13 is_stmt 1 view .LVU575
 1945 01cc 2046     		mov	r0, r4
 1946 01ce FFF7FEFF 		bl	FusionAhrsReset
 1947              	.LVL78:
 132:BSP/BSP.c/FusionAhrs.c ****             ahrs->accelerationRejectionTimer = 0;
 1948              		.loc 1 132 13 view .LVU576
 132:BSP/BSP.c/FusionAhrs.c ****             ahrs->accelerationRejectionTimer = 0;
 1949              		.loc 1 132 30 is_stmt 0 view .LVU577
 1950 01d2 96E80F00 		ldm	r6, {r0, r1, r2, r3}
 1951 01d6 85E80F00 		stm	r5, {r0, r1, r2, r3}
 133:BSP/BSP.c/FusionAhrs.c ****             ahrs->accelerationRejectionTimeout = true;
 1952              		.loc 1 133 13 is_stmt 1 view .LVU578
 133:BSP/BSP.c/FusionAhrs.c ****             ahrs->accelerationRejectionTimeout = true;
 1953              		.loc 1 133 46 is_stmt 0 view .LVU579
 1954 01da 0023     		movs	r3, #0
 1955 01dc 6365     		str	r3, [r4, #84]
 134:BSP/BSP.c/FusionAhrs.c ****         }
 1956              		.loc 1 134 13 is_stmt 1 view .LVU580
 134:BSP/BSP.c/FusionAhrs.c ****         }
 1957              		.loc 1 134 48 is_stmt 0 view .LVU581
 1958 01de 0123     		movs	r3, #1
 1959 01e0 84F85830 		strb	r3, [r4, #88]
 1960 01e4 90E7     		b	.L73
 1961              	.L89:
 134:BSP/BSP.c/FusionAhrs.c ****         }
 1962              		.loc 1 134 48 view .LVU582
 1963              	.LBE76:
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 52


 144:BSP/BSP.c/FusionAhrs.c ****         } else {
 1964              		.loc 1 144 93 view .LVU583
 1965 01e6 0022     		movs	r2, #0
 1966 01e8 C3E7     		b	.L77
 1967              	.L95:
 146:BSP/BSP.c/FusionAhrs.c ****         }
 1968              		.loc 1 146 13 is_stmt 1 view .LVU584
 146:BSP/BSP.c/FusionAhrs.c ****         }
 1969              		.loc 1 146 17 is_stmt 0 view .LVU585
 1970 01ea 636D     		ldr	r3, [r4, #84]
 146:BSP/BSP.c/FusionAhrs.c ****         }
 1971              		.loc 1 146 45 view .LVU586
 1972 01ec 0133     		adds	r3, r3, #1
 1973 01ee 6365     		str	r3, [r4, #84]
 1974 01f0 C1E7     		b	.L72
 1975              	.L90:
 1976              	.LBB77:
 1977              	.LBB73:
 192:BSP/BSP.h/FusionMath.h **** }
 1978              		.loc 2 192 63 view .LVU587
 1979 01f2 0023     		movs	r3, #0
 1980              	.L78:
 1981              	.LBE73:
 1982              	.LBE77:
 153:BSP/BSP.c/FusionAhrs.c **** 
 1983              		.loc 1 153 8 view .LVU588
 1984 01f4 002B     		cmp	r3, #0
 1985 01f6 71D1     		bne	.L79
 1986              	.LBB78:
 156:BSP/BSP.c/FusionAhrs.c ****         if (ahrs->magneticRejectionTimer > ahrs->settings.rejectionTimeout) {
 1987              		.loc 1 156 9 is_stmt 1 view .LVU589
 156:BSP/BSP.c/FusionAhrs.c ****         if (ahrs->magneticRejectionTimer > ahrs->settings.rejectionTimeout) {
 1988              		.loc 1 156 40 is_stmt 0 view .LVU590
 1989 01f8 84F86030 		strb	r3, [r4, #96]
 157:BSP/BSP.c/FusionAhrs.c ****             FusionAhrsSetHeading(ahrs, FusionCompassCalculateHeading(halfGravity, magnetometer));
 1990              		.loc 1 157 9 is_stmt 1 view .LVU591
 157:BSP/BSP.c/FusionAhrs.c ****             FusionAhrsSetHeading(ahrs, FusionCompassCalculateHeading(halfGravity, magnetometer));
 1991              		.loc 1 157 17 is_stmt 0 view .LVU592
 1992 01fc E26D     		ldr	r2, [r4, #92]
 157:BSP/BSP.c/FusionAhrs.c ****             FusionAhrsSetHeading(ahrs, FusionCompassCalculateHeading(halfGravity, magnetometer));
 1993              		.loc 1 157 58 view .LVU593
 1994 01fe E368     		ldr	r3, [r4, #12]
 157:BSP/BSP.c/FusionAhrs.c ****             FusionAhrsSetHeading(ahrs, FusionCompassCalculateHeading(halfGravity, magnetometer));
 1995              		.loc 1 157 12 view .LVU594
 1996 0200 9A42     		cmp	r2, r3
 1997 0202 00F24881 		bhi	.L99
 1998              	.L80:
 164:BSP/BSP.c/FusionAhrs.c ****                 .axis.x = Q.x * Q.y + Q.w * Q.z,
 1999              		.loc 1 164 9 is_stmt 1 view .LVU595
 165:BSP/BSP.c/FusionAhrs.c ****                 .axis.y = Q.w * Q.w - 0.5f + Q.y * Q.y,
 2000              		.loc 1 165 28 is_stmt 0 view .LVU596
 2001 0206 94ED057A 		vldr.32	s14, [r4, #20]
 165:BSP/BSP.c/FusionAhrs.c ****                 .axis.y = Q.w * Q.w - 0.5f + Q.y * Q.y,
 2002              		.loc 1 165 34 view .LVU597
 2003 020a D4ED067A 		vldr.32	s15, [r4, #24]
 165:BSP/BSP.c/FusionAhrs.c ****                 .axis.y = Q.w * Q.w - 0.5f + Q.y * Q.y,
 2004              		.loc 1 165 31 view .LVU598
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 53


 2005 020e 67EE279A 		vmul.f32	s19, s14, s15
 165:BSP/BSP.c/FusionAhrs.c ****                 .axis.y = Q.w * Q.w - 0.5f + Q.y * Q.y,
 2006              		.loc 1 165 40 view .LVU599
 2007 0212 D4ED046A 		vldr.32	s13, [r4, #16]
 165:BSP/BSP.c/FusionAhrs.c ****                 .axis.y = Q.w * Q.w - 0.5f + Q.y * Q.y,
 2008              		.loc 1 165 46 view .LVU600
 2009 0216 94ED076A 		vldr.32	s12, [r4, #28]
 165:BSP/BSP.c/FusionAhrs.c ****                 .axis.y = Q.w * Q.w - 0.5f + Q.y * Q.y,
 2010              		.loc 1 165 43 view .LVU601
 2011 021a 66EE865A 		vmul.f32	s11, s13, s12
 165:BSP/BSP.c/FusionAhrs.c ****                 .axis.y = Q.w * Q.w - 0.5f + Q.y * Q.y,
 2012              		.loc 1 165 37 view .LVU602
 2013 021e 79EEA59A 		vadd.f32	s19, s19, s11
 164:BSP/BSP.c/FusionAhrs.c ****                 .axis.x = Q.x * Q.y + Q.w * Q.z,
 2014              		.loc 1 164 28 view .LVU603
 2015 0222 CDED0E9A 		vstr.32	s19, [sp, #56]
 166:BSP/BSP.c/FusionAhrs.c ****                 .axis.z = Q.y * Q.z - Q.w * Q.x
 2016              		.loc 1 166 31 view .LVU604
 2017 0226 26EEA69A 		vmul.f32	s18, s13, s13
 166:BSP/BSP.c/FusionAhrs.c ****                 .axis.z = Q.y * Q.z - Q.w * Q.x
 2018              		.loc 1 166 37 view .LVU605
 2019 022a F6EE005A 		vmov.f32	s11, #5.0e-1
 2020 022e 39EE659A 		vsub.f32	s18, s18, s11
 166:BSP/BSP.c/FusionAhrs.c ****                 .axis.z = Q.y * Q.z - Q.w * Q.x
 2021              		.loc 1 166 50 view .LVU606
 2022 0232 67EEA75A 		vmul.f32	s11, s15, s15
 166:BSP/BSP.c/FusionAhrs.c ****                 .axis.z = Q.y * Q.z - Q.w * Q.x
 2023              		.loc 1 166 44 view .LVU607
 2024 0236 39EE259A 		vadd.f32	s18, s18, s11
 164:BSP/BSP.c/FusionAhrs.c ****                 .axis.x = Q.x * Q.y + Q.w * Q.z,
 2025              		.loc 1 164 28 view .LVU608
 2026 023a 8DED0F9A 		vstr.32	s18, [sp, #60]
 167:BSP/BSP.c/FusionAhrs.c ****         }; // second column of transposed rotation matrix scaled by 0.5
 2027              		.loc 1 167 31 view .LVU609
 2028 023e 67EE867A 		vmul.f32	s15, s15, s12
 167:BSP/BSP.c/FusionAhrs.c ****         }; // second column of transposed rotation matrix scaled by 0.5
 2029              		.loc 1 167 43 view .LVU610
 2030 0242 27EE267A 		vmul.f32	s14, s14, s13
 167:BSP/BSP.c/FusionAhrs.c ****         }; // second column of transposed rotation matrix scaled by 0.5
 2031              		.loc 1 167 37 view .LVU611
 2032 0246 77EEC78A 		vsub.f32	s17, s15, s14
 164:BSP/BSP.c/FusionAhrs.c ****                 .axis.x = Q.x * Q.y + Q.w * Q.z,
 2033              		.loc 1 164 28 view .LVU612
 2034 024a CDED108A 		vstr.32	s17, [sp, #64]
 171:BSP/BSP.c/FusionAhrs.c **** 
 2035              		.loc 1 171 9 is_stmt 1 view .LVU613
 171:BSP/BSP.c/FusionAhrs.c **** 
 2036              		.loc 1 171 42 is_stmt 0 view .LVU614
 2037 024e DDED011A 		vldr.32	s3, [sp, #4]
 2038 0252 9DED022A 		vldr.32	s4, [sp, #8]
 2039 0256 DDED032A 		vldr.32	s5, [sp, #12]
 2040 025a 9DED1E0A 		vldr.32	s0, [sp, #120]
 2041 025e DDED1F0A 		vldr.32	s1, [sp, #124]
 2042 0262 9DED201A 		vldr.32	s2, [sp, #128]
 2043 0266 FFF7FEFF 		bl	FusionVectorCrossProduct
 2044              	.LVL79:
 2045 026a 8DED240A 		vstr.32	s0, [sp, #144]
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 54


 2046 026e CDED250A 		vstr.32	s1, [sp, #148]
 2047 0272 8DED261A 		vstr.32	s2, [sp, #152]
 2048 0276 FFF7FEFF 		bl	FusionVectorNormalise
 2049              	.LVL80:
 2050 027a 8DED270A 		vstr.32	s0, [sp, #156]
 2051 027e CDED280A 		vstr.32	s1, [sp, #160]
 2052 0282 8DED291A 		vstr.32	s2, [sp, #164]
 2053 0286 F0EE691A 		vmov.f32	s3, s19
 2054 028a B0EE492A 		vmov.f32	s4, s18
 2055 028e F0EE682A 		vmov.f32	s5, s17
 2056 0292 FFF7FEFF 		bl	FusionVectorCrossProduct
 2057              	.LVL81:
 2058 0296 84ED110A 		vstr.32	s0, [r4, #68]
 2059 029a C4ED120A 		vstr.32	s1, [r4, #72]
 2060 029e 84ED131A 		vstr.32	s2, [r4, #76]
 174:BSP/BSP.c/FusionAhrs.c ****             halfMagnetometerFeedback = ahrs->halfMagnetometerFeedback;
 2061              		.loc 1 174 9 is_stmt 1 view .LVU615
 174:BSP/BSP.c/FusionAhrs.c ****             halfMagnetometerFeedback = ahrs->halfMagnetometerFeedback;
 2062              		.loc 1 174 18 is_stmt 0 view .LVU616
 2063 02a2 94F82C30 		ldrb	r3, [r4, #44]	@ zero_extendqisi2
 174:BSP/BSP.c/FusionAhrs.c ****             halfMagnetometerFeedback = ahrs->halfMagnetometerFeedback;
 2064              		.loc 1 174 12 view .LVU617
 2065 02a6 4BB9     		cbnz	r3, .L81
 174:BSP/BSP.c/FusionAhrs.c ****             halfMagnetometerFeedback = ahrs->halfMagnetometerFeedback;
 2066              		.loc 1 174 46 discriminator 1 view .LVU618
 2067 02a8 FFF7FEFF 		bl	FusionVectorMagnitudeSquared
 2068              	.LVL82:
 174:BSP/BSP.c/FusionAhrs.c ****             halfMagnetometerFeedback = ahrs->halfMagnetometerFeedback;
 2069              		.loc 1 174 124 discriminator 1 view .LVU619
 2070 02ac D4ED027A 		vldr.32	s15, [r4, #8]
 174:BSP/BSP.c/FusionAhrs.c ****             halfMagnetometerFeedback = ahrs->halfMagnetometerFeedback;
 2071              		.loc 1 174 42 discriminator 1 view .LVU620
 2072 02b0 B4EEE70A 		vcmpe.f32	s0, s15
 2073 02b4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2074 02b8 00F20681 		bhi	.L96
 2075              	.L81:
 175:BSP/BSP.c/FusionAhrs.c ****             ahrs->magnetometerIgnored = false;
 2076              		.loc 1 175 13 is_stmt 1 view .LVU621
 175:BSP/BSP.c/FusionAhrs.c ****             ahrs->magnetometerIgnored = false;
 2077              		.loc 1 175 38 is_stmt 0 view .LVU622
 2078 02bc 18AB     		add	r3, sp, #96
 2079 02be 04F14402 		add	r2, r4, #68
 2080 02c2 07CA     		ldm	r2, {r0, r1, r2}
 2081 02c4 83E80700 		stm	r3, {r0, r1, r2}
 176:BSP/BSP.c/FusionAhrs.c ****             ahrs->magneticRejectionTimer -= ahrs->magneticRejectionTimer >= 10 ? 10 : 0;
 2082              		.loc 1 176 13 is_stmt 1 view .LVU623
 176:BSP/BSP.c/FusionAhrs.c ****             ahrs->magneticRejectionTimer -= ahrs->magneticRejectionTimer >= 10 ? 10 : 0;
 2083              		.loc 1 176 39 is_stmt 0 view .LVU624
 2084 02c8 0023     		movs	r3, #0
 2085 02ca 84F85930 		strb	r3, [r4, #89]
 177:BSP/BSP.c/FusionAhrs.c ****         } else {
 2086              		.loc 1 177 13 is_stmt 1 view .LVU625
 177:BSP/BSP.c/FusionAhrs.c ****         } else {
 2087              		.loc 1 177 17 is_stmt 0 view .LVU626
 2088 02ce E36D     		ldr	r3, [r4, #92]
 177:BSP/BSP.c/FusionAhrs.c ****         } else {
 2089              		.loc 1 177 85 view .LVU627
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 55


 2090 02d0 092B     		cmp	r3, #9
 2091 02d2 40F2F780 		bls	.L93
 2092 02d6 0A22     		movs	r2, #10
 2093              	.L84:
 177:BSP/BSP.c/FusionAhrs.c ****         } else {
 2094              		.loc 1 177 42 discriminator 4 view .LVU628
 2095 02d8 9B1A     		subs	r3, r3, r2
 2096 02da E365     		str	r3, [r4, #92]
 2097              	.L79:
 177:BSP/BSP.c/FusionAhrs.c ****         } else {
 2098              		.loc 1 177 42 discriminator 4 view .LVU629
 2099              	.LBE78:
 184:BSP/BSP.c/FusionAhrs.c **** 
 2100              		.loc 1 184 5 is_stmt 1 view .LVU630
 2101              	.LVL83:
 2102              	.LBB79:
 2103              	.LBI79:
 238:BSP/BSP.h/FusionMath.h ****     FusionVector result;
 2104              		.loc 2 238 28 view .LVU631
 2105              	.LBB80:
 239:BSP/BSP.h/FusionMath.h ****     result.axis.x = vector.axis.x * scalar;
 2106              		.loc 2 239 5 view .LVU632
 240:BSP/BSP.h/FusionMath.h ****     result.axis.y = vector.axis.y * scalar;
 2107              		.loc 2 240 5 view .LVU633
 240:BSP/BSP.h/FusionMath.h ****     result.axis.y = vector.axis.y * scalar;
 2108              		.loc 2 240 32 is_stmt 0 view .LVU634
 2109 02dc 9DED075A 		vldr.32	s10, [sp, #28]
 240:BSP/BSP.h/FusionMath.h ****     result.axis.y = vector.axis.y * scalar;
 2110              		.loc 2 240 35 view .LVU635
 2111 02e0 DFED7B7A 		vldr.32	s15, .L100
 2112 02e4 25EE275A 		vmul.f32	s10, s10, s15
 240:BSP/BSP.h/FusionMath.h ****     result.axis.y = vector.axis.y * scalar;
 2113              		.loc 2 240 19 view .LVU636
 2114 02e8 0EAD     		add	r5, sp, #56
 2115 02ea 85ED005A 		vstr.32	s10, [r5]
 241:BSP/BSP.h/FusionMath.h ****     result.axis.z = vector.axis.z * scalar;
 2116              		.loc 2 241 5 is_stmt 1 view .LVU637
 241:BSP/BSP.h/FusionMath.h ****     result.axis.z = vector.axis.z * scalar;
 2117              		.loc 2 241 32 is_stmt 0 view .LVU638
 2118 02ee DDED085A 		vldr.32	s11, [sp, #32]
 241:BSP/BSP.h/FusionMath.h ****     result.axis.z = vector.axis.z * scalar;
 2119              		.loc 2 241 35 view .LVU639
 2120 02f2 65EEA75A 		vmul.f32	s11, s11, s15
 241:BSP/BSP.h/FusionMath.h ****     result.axis.z = vector.axis.z * scalar;
 2121              		.loc 2 241 19 view .LVU640
 2122 02f6 C5ED015A 		vstr.32	s11, [r5, #4]
 242:BSP/BSP.h/FusionMath.h ****     return result;
 2123              		.loc 2 242 5 is_stmt 1 view .LVU641
 242:BSP/BSP.h/FusionMath.h ****     return result;
 2124              		.loc 2 242 32 is_stmt 0 view .LVU642
 2125 02fa 9DED096A 		vldr.32	s12, [sp, #36]
 242:BSP/BSP.h/FusionMath.h ****     return result;
 2126              		.loc 2 242 35 view .LVU643
 2127 02fe 26EE276A 		vmul.f32	s12, s12, s15
 242:BSP/BSP.h/FusionMath.h ****     return result;
 2128              		.loc 2 242 19 view .LVU644
 2129 0302 85ED026A 		vstr.32	s12, [r5, #8]
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 56


 243:BSP/BSP.h/FusionMath.h **** }
 2130              		.loc 2 243 5 is_stmt 1 view .LVU645
 243:BSP/BSP.h/FusionMath.h **** }
 2131              		.loc 2 243 12 is_stmt 0 view .LVU646
 2132 0306 4BAB     		add	r3, sp, #300
 2133 0308 95E80700 		ldm	r5, {r0, r1, r2}
 2134 030c 83E80700 		stm	r3, {r0, r1, r2}
 2135 0310 0DF1540C 		add	ip, sp, #84
 2136 0314 8CE80700 		stm	ip, {r0, r1, r2}
 2137              	.LVL84:
 243:BSP/BSP.h/FusionMath.h **** }
 2138              		.loc 2 243 12 view .LVU647
 2139              	.LBE80:
 2140              	.LBE79:
 187:BSP/BSP.c/FusionAhrs.c **** 
 2141              		.loc 1 187 5 is_stmt 1 view .LVU648
 2142              	.LBB81:
 2143              	.LBI81:
 201:BSP/BSP.h/FusionMath.h ****     FusionVector result;
 2144              		.loc 2 201 28 view .LVU649
 2145              	.LBB82:
 202:BSP/BSP.h/FusionMath.h ****     result.axis.x = vectorA.axis.x + vectorB.axis.x;
 2146              		.loc 2 202 5 view .LVU650
 203:BSP/BSP.h/FusionMath.h ****     result.axis.y = vectorA.axis.y + vectorB.axis.y;
 2147              		.loc 2 203 5 view .LVU651
 203:BSP/BSP.h/FusionMath.h ****     result.axis.y = vectorA.axis.y + vectorB.axis.y;
 2148              		.loc 2 203 36 is_stmt 0 view .LVU652
 2149 0318 9DED1B7A 		vldr.32	s14, [sp, #108]
 2150 031c DDED187A 		vldr.32	s15, [sp, #96]
 2151 0320 37EE277A 		vadd.f32	s14, s14, s15
 203:BSP/BSP.h/FusionMath.h ****     result.axis.y = vectorA.axis.y + vectorB.axis.y;
 2152              		.loc 2 203 19 view .LVU653
 2153 0324 85ED007A 		vstr.32	s14, [r5]
 204:BSP/BSP.h/FusionMath.h ****     result.axis.z = vectorA.axis.z + vectorB.axis.z;
 2154              		.loc 2 204 5 is_stmt 1 view .LVU654
 204:BSP/BSP.h/FusionMath.h ****     result.axis.z = vectorA.axis.z + vectorB.axis.z;
 2155              		.loc 2 204 36 is_stmt 0 view .LVU655
 2156 0328 DDED1C7A 		vldr.32	s15, [sp, #112]
 2157 032c DDED196A 		vldr.32	s13, [sp, #100]
 2158 0330 77EEA67A 		vadd.f32	s15, s15, s13
 204:BSP/BSP.h/FusionMath.h ****     result.axis.z = vectorA.axis.z + vectorB.axis.z;
 2159              		.loc 2 204 19 view .LVU656
 2160 0334 C5ED017A 		vstr.32	s15, [r5, #4]
 205:BSP/BSP.h/FusionMath.h ****     return result;
 2161              		.loc 2 205 5 is_stmt 1 view .LVU657
 205:BSP/BSP.h/FusionMath.h ****     return result;
 2162              		.loc 2 205 36 is_stmt 0 view .LVU658
 2163 0338 DDED1D4A 		vldr.32	s9, [sp, #116]
 2164 033c DDED1A6A 		vldr.32	s13, [sp, #104]
 2165 0340 74EEA64A 		vadd.f32	s9, s9, s13
 205:BSP/BSP.h/FusionMath.h ****     return result;
 2166              		.loc 2 205 19 view .LVU659
 2167 0344 C5ED024A 		vstr.32	s9, [r5, #8]
 206:BSP/BSP.h/FusionMath.h **** }
 2168              		.loc 2 206 5 is_stmt 1 view .LVU660
 206:BSP/BSP.h/FusionMath.h **** }
 2169              		.loc 2 206 12 is_stmt 0 view .LVU661
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 57


 2170 0348 48AB     		add	r3, sp, #288
 2171 034a 95E80700 		ldm	r5, {r0, r1, r2}
 2172 034e 83E80700 		stm	r3, {r0, r1, r2}
 2173 0352 0DF1A80C 		add	ip, sp, #168
 2174 0356 8CE80700 		stm	ip, {r0, r1, r2}
 2175              	.LBE82:
 2176              	.LBE81:
 187:BSP/BSP.c/FusionAhrs.c **** 
 2177              		.loc 1 187 48 view .LVU662
 2178 035a D4ED0C6A 		vldr.32	s13, [r4, #48]
 2179              	.LVL85:
 2180              	.LBB83:
 2181              	.LBI83:
 238:BSP/BSP.h/FusionMath.h ****     FusionVector result;
 2182              		.loc 2 238 28 is_stmt 1 view .LVU663
 2183              	.LBB84:
 239:BSP/BSP.h/FusionMath.h ****     result.axis.x = vector.axis.x * scalar;
 2184              		.loc 2 239 5 view .LVU664
 240:BSP/BSP.h/FusionMath.h ****     result.axis.y = vector.axis.y * scalar;
 2185              		.loc 2 240 5 view .LVU665
 240:BSP/BSP.h/FusionMath.h ****     result.axis.y = vector.axis.y * scalar;
 2186              		.loc 2 240 35 is_stmt 0 view .LVU666
 2187 035e 26EE877A 		vmul.f32	s14, s13, s14
 240:BSP/BSP.h/FusionMath.h ****     result.axis.y = vector.axis.y * scalar;
 2188              		.loc 2 240 19 view .LVU667
 2189 0362 85ED007A 		vstr.32	s14, [r5]
 241:BSP/BSP.h/FusionMath.h ****     result.axis.z = vector.axis.z * scalar;
 2190              		.loc 2 241 5 is_stmt 1 view .LVU668
 241:BSP/BSP.h/FusionMath.h ****     result.axis.z = vector.axis.z * scalar;
 2191              		.loc 2 241 35 is_stmt 0 view .LVU669
 2192 0366 66EEA77A 		vmul.f32	s15, s13, s15
 241:BSP/BSP.h/FusionMath.h ****     result.axis.z = vector.axis.z * scalar;
 2193              		.loc 2 241 19 view .LVU670
 2194 036a C5ED017A 		vstr.32	s15, [r5, #4]
 242:BSP/BSP.h/FusionMath.h ****     return result;
 2195              		.loc 2 242 5 is_stmt 1 view .LVU671
 242:BSP/BSP.h/FusionMath.h ****     return result;
 2196              		.loc 2 242 35 is_stmt 0 view .LVU672
 2197 036e 66EEA46A 		vmul.f32	s13, s13, s9
 2198              	.LVL86:
 242:BSP/BSP.h/FusionMath.h ****     return result;
 2199              		.loc 2 242 19 view .LVU673
 2200 0372 C5ED026A 		vstr.32	s13, [r5, #8]
 243:BSP/BSP.h/FusionMath.h **** }
 2201              		.loc 2 243 5 is_stmt 1 view .LVU674
 243:BSP/BSP.h/FusionMath.h **** }
 2202              		.loc 2 243 12 is_stmt 0 view .LVU675
 2203 0376 45AB     		add	r3, sp, #276
 2204 0378 95E80700 		ldm	r5, {r0, r1, r2}
 2205 037c 83E80700 		stm	r3, {r0, r1, r2}
 2206 0380 0DF1B40C 		add	ip, sp, #180
 2207 0384 8CE80700 		stm	ip, {r0, r1, r2}
 2208              	.LVL87:
 243:BSP/BSP.h/FusionMath.h **** }
 2209              		.loc 2 243 12 view .LVU676
 2210              	.LBE84:
 2211              	.LBE83:
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 58


 2212              	.LBB85:
 2213              	.LBI85:
 201:BSP/BSP.h/FusionMath.h ****     FusionVector result;
 2214              		.loc 2 201 28 is_stmt 1 view .LVU677
 2215              	.LBB86:
 202:BSP/BSP.h/FusionMath.h ****     result.axis.x = vectorA.axis.x + vectorB.axis.x;
 2216              		.loc 2 202 5 view .LVU678
 203:BSP/BSP.h/FusionMath.h ****     result.axis.y = vectorA.axis.y + vectorB.axis.y;
 2217              		.loc 2 203 5 view .LVU679
 203:BSP/BSP.h/FusionMath.h ****     result.axis.y = vectorA.axis.y + vectorB.axis.y;
 2218              		.loc 2 203 36 is_stmt 0 view .LVU680
 2219 0388 37EE057A 		vadd.f32	s14, s14, s10
 203:BSP/BSP.h/FusionMath.h ****     result.axis.y = vectorA.axis.y + vectorB.axis.y;
 2220              		.loc 2 203 19 view .LVU681
 2221 038c 85ED007A 		vstr.32	s14, [r5]
 204:BSP/BSP.h/FusionMath.h ****     result.axis.z = vectorA.axis.z + vectorB.axis.z;
 2222              		.loc 2 204 5 is_stmt 1 view .LVU682
 204:BSP/BSP.h/FusionMath.h ****     result.axis.z = vectorA.axis.z + vectorB.axis.z;
 2223              		.loc 2 204 36 is_stmt 0 view .LVU683
 2224 0390 77EEA57A 		vadd.f32	s15, s15, s11
 204:BSP/BSP.h/FusionMath.h ****     result.axis.z = vectorA.axis.z + vectorB.axis.z;
 2225              		.loc 2 204 19 view .LVU684
 2226 0394 C5ED017A 		vstr.32	s15, [r5, #4]
 205:BSP/BSP.h/FusionMath.h ****     return result;
 2227              		.loc 2 205 5 is_stmt 1 view .LVU685
 205:BSP/BSP.h/FusionMath.h ****     return result;
 2228              		.loc 2 205 36 is_stmt 0 view .LVU686
 2229 0398 76EE866A 		vadd.f32	s13, s13, s12
 205:BSP/BSP.h/FusionMath.h ****     return result;
 2230              		.loc 2 205 19 view .LVU687
 2231 039c C5ED026A 		vstr.32	s13, [r5, #8]
 206:BSP/BSP.h/FusionMath.h **** }
 2232              		.loc 2 206 5 is_stmt 1 view .LVU688
 206:BSP/BSP.h/FusionMath.h **** }
 2233              		.loc 2 206 12 is_stmt 0 view .LVU689
 2234 03a0 42AB     		add	r3, sp, #264
 2235 03a2 95E80700 		ldm	r5, {r0, r1, r2}
 2236 03a6 83E80700 		stm	r3, {r0, r1, r2}
 2237 03aa 0DF1480C 		add	ip, sp, #72
 2238 03ae 8CE80700 		stm	ip, {r0, r1, r2}
 2239              	.LBE86:
 2240              	.LBE85:
 190:BSP/BSP.c/FusionAhrs.c **** 
 2241              		.loc 1 190 5 is_stmt 1 view .LVU690
 2242              	.LVL88:
 2243              	.LBB87:
 2244              	.LBI87:
 238:BSP/BSP.h/FusionMath.h ****     FusionVector result;
 2245              		.loc 2 238 28 view .LVU691
 2246              	.LBB88:
 239:BSP/BSP.h/FusionMath.h ****     result.axis.x = vector.axis.x * scalar;
 2247              		.loc 2 239 5 view .LVU692
 240:BSP/BSP.h/FusionMath.h ****     result.axis.y = vector.axis.y * scalar;
 2248              		.loc 2 240 5 view .LVU693
 240:BSP/BSP.h/FusionMath.h ****     result.axis.y = vector.axis.y * scalar;
 2249              		.loc 2 240 35 is_stmt 0 view .LVU694
 2250 03b2 28EE077A 		vmul.f32	s14, s16, s14
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 59


 240:BSP/BSP.h/FusionMath.h ****     result.axis.y = vector.axis.y * scalar;
 2251              		.loc 2 240 19 view .LVU695
 2252 03b6 85ED007A 		vstr.32	s14, [r5]
 241:BSP/BSP.h/FusionMath.h ****     result.axis.z = vector.axis.z * scalar;
 2253              		.loc 2 241 5 is_stmt 1 view .LVU696
 241:BSP/BSP.h/FusionMath.h ****     result.axis.z = vector.axis.z * scalar;
 2254              		.loc 2 241 35 is_stmt 0 view .LVU697
 2255 03ba 68EE277A 		vmul.f32	s15, s16, s15
 241:BSP/BSP.h/FusionMath.h ****     result.axis.z = vector.axis.z * scalar;
 2256              		.loc 2 241 19 view .LVU698
 2257 03be C5ED017A 		vstr.32	s15, [r5, #4]
 242:BSP/BSP.h/FusionMath.h ****     return result;
 2258              		.loc 2 242 5 is_stmt 1 view .LVU699
 242:BSP/BSP.h/FusionMath.h ****     return result;
 2259              		.loc 2 242 35 is_stmt 0 view .LVU700
 2260 03c2 28EE268A 		vmul.f32	s16, s16, s13
 2261              	.LVL89:
 242:BSP/BSP.h/FusionMath.h ****     return result;
 2262              		.loc 2 242 19 view .LVU701
 2263 03c6 85ED028A 		vstr.32	s16, [r5, #8]
 243:BSP/BSP.h/FusionMath.h **** }
 2264              		.loc 2 243 5 is_stmt 1 view .LVU702
 243:BSP/BSP.h/FusionMath.h **** }
 2265              		.loc 2 243 12 is_stmt 0 view .LVU703
 2266 03ca 3FAB     		add	r3, sp, #252
 2267 03cc 95E80700 		ldm	r5, {r0, r1, r2}
 2268 03d0 83E80700 		stm	r3, {r0, r1, r2}
 2269 03d4 0DF1C00C 		add	ip, sp, #192
 2270 03d8 8CE80700 		stm	ip, {r0, r1, r2}
 2271              	.LVL90:
 243:BSP/BSP.h/FusionMath.h **** }
 2272              		.loc 2 243 12 view .LVU704
 2273              	.LBE88:
 2274              	.LBE87:
 190:BSP/BSP.c/FusionAhrs.c **** 
 2275              		.loc 1 190 24 view .LVU705
 2276 03dc 9DED302A 		vldr.32	s4, [sp, #192]
 2277 03e0 DDED312A 		vldr.32	s5, [sp, #196]
 2278 03e4 9DED323A 		vldr.32	s6, [sp, #200]
 2279 03e8 94ED040A 		vldr.32	s0, [r4, #16]
 2280 03ec D4ED050A 		vldr.32	s1, [r4, #20]
 2281 03f0 94ED061A 		vldr.32	s2, [r4, #24]
 2282 03f4 D4ED071A 		vldr.32	s3, [r4, #28]
 2283 03f8 FFF7FEFF 		bl	FusionQuaternionMultiplyVector
 2284              	.LVL91:
 2285 03fc 8DED330A 		vstr.32	s0, [sp, #204]
 2286 0400 CDED340A 		vstr.32	s1, [sp, #208]
 2287 0404 8DED351A 		vstr.32	s2, [sp, #212]
 2288 0408 CDED361A 		vstr.32	s3, [sp, #216]
 2289 040c 0DF1280E 		add	lr, sp, #40
 2290 0410 04F1100C 		add	ip, r4, #16
 2291 0414 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
 2292 0418 8EE80F00 		stm	lr, {r0, r1, r2, r3}
 2293              	.LBB89:
 2294              	.LBI89:
 319:BSP/BSP.h/FusionMath.h ****     FusionQuaternion result;
 2295              		.loc 2 319 32 is_stmt 1 view .LVU706
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 60


 2296              	.LBB90:
 320:BSP/BSP.h/FusionMath.h ****     result.element.w = quaternionA.element.w + quaternionB.element.w;
 2297              		.loc 2 320 5 view .LVU707
 321:BSP/BSP.h/FusionMath.h ****     result.element.x = quaternionA.element.x + quaternionB.element.x;
 2298              		.loc 2 321 5 view .LVU708
 321:BSP/BSP.h/FusionMath.h ****     result.element.x = quaternionA.element.x + quaternionB.element.x;
 2299              		.loc 2 321 43 is_stmt 0 view .LVU709
 2300 041c DEED007A 		vldr.32	s15, [lr]
 321:BSP/BSP.h/FusionMath.h ****     result.element.x = quaternionA.element.x + quaternionB.element.x;
 2301              		.loc 2 321 46 view .LVU710
 2302 0420 77EE807A 		vadd.f32	s15, s15, s0
 321:BSP/BSP.h/FusionMath.h ****     result.element.x = quaternionA.element.x + quaternionB.element.x;
 2303              		.loc 2 321 22 view .LVU711
 2304 0424 C5ED007A 		vstr.32	s15, [r5]
 322:BSP/BSP.h/FusionMath.h ****     result.element.y = quaternionA.element.y + quaternionB.element.y;
 2305              		.loc 2 322 5 is_stmt 1 view .LVU712
 322:BSP/BSP.h/FusionMath.h ****     result.element.y = quaternionA.element.y + quaternionB.element.y;
 2306              		.loc 2 322 43 is_stmt 0 view .LVU713
 2307 0428 DEED017A 		vldr.32	s15, [lr, #4]
 322:BSP/BSP.h/FusionMath.h ****     result.element.y = quaternionA.element.y + quaternionB.element.y;
 2308              		.loc 2 322 46 view .LVU714
 2309 042c 77EEA07A 		vadd.f32	s15, s15, s1
 322:BSP/BSP.h/FusionMath.h ****     result.element.y = quaternionA.element.y + quaternionB.element.y;
 2310              		.loc 2 322 22 view .LVU715
 2311 0430 C5ED017A 		vstr.32	s15, [r5, #4]
 323:BSP/BSP.h/FusionMath.h ****     result.element.z = quaternionA.element.z + quaternionB.element.z;
 2312              		.loc 2 323 5 is_stmt 1 view .LVU716
 323:BSP/BSP.h/FusionMath.h ****     result.element.z = quaternionA.element.z + quaternionB.element.z;
 2313              		.loc 2 323 43 is_stmt 0 view .LVU717
 2314 0434 DEED027A 		vldr.32	s15, [lr, #8]
 323:BSP/BSP.h/FusionMath.h ****     result.element.z = quaternionA.element.z + quaternionB.element.z;
 2315              		.loc 2 323 46 view .LVU718
 2316 0438 77EE817A 		vadd.f32	s15, s15, s2
 323:BSP/BSP.h/FusionMath.h ****     result.element.z = quaternionA.element.z + quaternionB.element.z;
 2317              		.loc 2 323 22 view .LVU719
 2318 043c C5ED027A 		vstr.32	s15, [r5, #8]
 324:BSP/BSP.h/FusionMath.h ****     return result;
 2319              		.loc 2 324 5 is_stmt 1 view .LVU720
 324:BSP/BSP.h/FusionMath.h ****     return result;
 2320              		.loc 2 324 43 is_stmt 0 view .LVU721
 2321 0440 DEED037A 		vldr.32	s15, [lr, #12]
 324:BSP/BSP.h/FusionMath.h ****     return result;
 2322              		.loc 2 324 46 view .LVU722
 2323 0444 77EEA17A 		vadd.f32	s15, s15, s3
 324:BSP/BSP.h/FusionMath.h ****     return result;
 2324              		.loc 2 324 22 view .LVU723
 2325 0448 C5ED037A 		vstr.32	s15, [r5, #12]
 325:BSP/BSP.h/FusionMath.h **** }
 2326              		.loc 2 325 5 is_stmt 1 view .LVU724
 325:BSP/BSP.h/FusionMath.h **** }
 2327              		.loc 2 325 12 is_stmt 0 view .LVU725
 2328 044c 0DF1EC0E 		add	lr, sp, #236
 2329 0450 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 2330 0454 8EE80F00 		stm	lr, {r0, r1, r2, r3}
 2331 0458 37AD     		add	r5, sp, #220
 2332 045a 85E80F00 		stm	r5, {r0, r1, r2, r3}
 2333              	.LBE90:
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 61


 2334              	.LBE89:
 190:BSP/BSP.c/FusionAhrs.c **** 
 2335              		.loc 1 190 24 view .LVU726
 2336 045e 8CE80F00 		stm	ip, {r0, r1, r2, r3}
 193:BSP/BSP.c/FusionAhrs.c **** #undef Q
 2337              		.loc 1 193 5 is_stmt 1 view .LVU727
 193:BSP/BSP.c/FusionAhrs.c **** #undef Q
 2338              		.loc 1 193 24 is_stmt 0 view .LVU728
 2339 0462 94ED040A 		vldr.32	s0, [r4, #16]
 2340 0466 D4ED050A 		vldr.32	s1, [r4, #20]
 2341 046a 94ED061A 		vldr.32	s2, [r4, #24]
 2342 046e D4ED071A 		vldr.32	s3, [r4, #28]
 2343 0472 FFF7FEFF 		bl	FusionQuaternionNormalise
 2344              	.LVL92:
 2345 0476 84ED040A 		vstr.32	s0, [r4, #16]
 2346 047a C4ED050A 		vstr.32	s1, [r4, #20]
 2347 047e 84ED061A 		vstr.32	s2, [r4, #24]
 2348 0482 C4ED071A 		vstr.32	s3, [r4, #28]
 195:BSP/BSP.c/FusionAhrs.c **** 
 2349              		.loc 1 195 1 view .LVU729
 2350 0486 4EB0     		add	sp, sp, #312
 2351              	.LCFI44:
 2352              		.cfi_remember_state
 2353              		.cfi_def_cfa_offset 32
 2354              		@ sp needed
 2355 0488 BDEC048B 		vldm	sp!, {d8-d9}
 2356              	.LCFI45:
 2357              		.cfi_restore 82
 2358              		.cfi_restore 83
 2359              		.cfi_restore 80
 2360              		.cfi_restore 81
 2361              		.cfi_def_cfa_offset 16
 2362 048c 70BD     		pop	{r4, r5, r6, pc}
 2363              	.LVL93:
 2364              	.L91:
 2365              	.LCFI46:
 2366              		.cfi_restore_state
 2367              	.LBB91:
 2368              	.LBB74:
 192:BSP/BSP.h/FusionMath.h **** }
 2369              		.loc 2 192 63 view .LVU730
 2370 048e 0023     		movs	r3, #0
 2371 0490 B0E6     		b	.L78
 2372              	.L92:
 2373 0492 0123     		movs	r3, #1
 2374 0494 AEE6     		b	.L78
 2375              	.L99:
 192:BSP/BSP.h/FusionMath.h **** }
 2376              		.loc 2 192 63 view .LVU731
 2377              	.LBE74:
 2378              	.LBE91:
 2379              	.LBB92:
 158:BSP/BSP.c/FusionAhrs.c ****             ahrs->magneticRejectionTimer = 0;
 2380              		.loc 1 158 13 is_stmt 1 view .LVU732
 2381 0496 DDED011A 		vldr.32	s3, [sp, #4]
 2382 049a 9DED022A 		vldr.32	s4, [sp, #8]
 2383 049e DDED032A 		vldr.32	s5, [sp, #12]
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 62


 2384 04a2 9DED1E0A 		vldr.32	s0, [sp, #120]
 2385 04a6 DDED1F0A 		vldr.32	s1, [sp, #124]
 2386 04aa 9DED201A 		vldr.32	s2, [sp, #128]
 2387 04ae FFF7FEFF 		bl	FusionCompassCalculateHeading
 2388              	.LVL94:
 2389 04b2 2046     		mov	r0, r4
 2390 04b4 FFF7FEFF 		bl	FusionAhrsSetHeading
 2391              	.LVL95:
 159:BSP/BSP.c/FusionAhrs.c ****             ahrs->magneticRejectionTimeout = true;
 2392              		.loc 1 159 13 view .LVU733
 159:BSP/BSP.c/FusionAhrs.c ****             ahrs->magneticRejectionTimeout = true;
 2393              		.loc 1 159 42 is_stmt 0 view .LVU734
 2394 04b8 0023     		movs	r3, #0
 2395 04ba E365     		str	r3, [r4, #92]
 160:BSP/BSP.c/FusionAhrs.c ****         }
 2396              		.loc 1 160 13 is_stmt 1 view .LVU735
 160:BSP/BSP.c/FusionAhrs.c ****         }
 2397              		.loc 1 160 44 is_stmt 0 view .LVU736
 2398 04bc 0123     		movs	r3, #1
 2399 04be 84F86030 		strb	r3, [r4, #96]
 2400 04c2 A0E6     		b	.L80
 2401              	.L93:
 177:BSP/BSP.c/FusionAhrs.c ****         } else {
 2402              		.loc 1 177 85 view .LVU737
 2403 04c4 0022     		movs	r2, #0
 2404 04c6 07E7     		b	.L84
 2405              	.L96:
 179:BSP/BSP.c/FusionAhrs.c ****         }
 2406              		.loc 1 179 13 is_stmt 1 view .LVU738
 179:BSP/BSP.c/FusionAhrs.c ****         }
 2407              		.loc 1 179 17 is_stmt 0 view .LVU739
 2408 04c8 E36D     		ldr	r3, [r4, #92]
 179:BSP/BSP.c/FusionAhrs.c ****         }
 2409              		.loc 1 179 41 view .LVU740
 2410 04ca 0133     		adds	r3, r3, #1
 2411 04cc E365     		str	r3, [r4, #92]
 2412 04ce 05E7     		b	.L79
 2413              	.L101:
 2414              		.align	2
 2415              	.L100:
 2416 04d0 35FA0E3C 		.word	1007614517
 2417              	.LBE92:
 2418              		.cfi_endproc
 2419              	.LFE24:
 2421              		.section	.text.FusionAhrsUpdateExternalHeading,"ax",%progbits
 2422              		.align	1
 2423              		.global	FusionAhrsUpdateExternalHeading
 2424              		.syntax unified
 2425              		.thumb
 2426              		.thumb_func
 2428              	FusionAhrsUpdateExternalHeading:
 2429              	.LVL96:
 2430              	.LFB26:
 225:BSP/BSP.c/FusionAhrs.c **** #define Q ahrs->quaternion.element
 2431              		.loc 1 225 170 is_stmt 1 view -0
 2432              		.cfi_startproc
 2433              		@ args = 0, pretend = 0, frame = 40
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 63


 2434              		@ frame_needed = 0, uses_anonymous_args = 0
 225:BSP/BSP.c/FusionAhrs.c **** #define Q ahrs->quaternion.element
 2435              		.loc 1 225 170 is_stmt 0 view .LVU742
 2436 0000 10B5     		push	{r4, lr}
 2437              	.LCFI47:
 2438              		.cfi_def_cfa_offset 8
 2439              		.cfi_offset 4, -8
 2440              		.cfi_offset 14, -4
 2441 0002 2DED068B 		vpush.64	{d8, d9, d10}
 2442              	.LCFI48:
 2443              		.cfi_def_cfa_offset 32
 2444              		.cfi_offset 80, -32
 2445              		.cfi_offset 81, -28
 2446              		.cfi_offset 82, -24
 2447              		.cfi_offset 83, -20
 2448              		.cfi_offset 84, -16
 2449              		.cfi_offset 85, -12
 2450 0006 8AB0     		sub	sp, sp, #40
 2451              	.LCFI49:
 2452              		.cfi_def_cfa_offset 72
 2453 0008 0446     		mov	r4, r0
 2454 000a B0EE438A 		vmov.f32	s16, s6
 2455 000e B0EE63AA 		vmov.f32	s20, s7
 2456 0012 8DED030A 		vstr.32	s0, [sp, #12]
 2457 0016 CDED040A 		vstr.32	s1, [sp, #16]
 2458 001a 8DED051A 		vstr.32	s2, [sp, #20]
 2459 001e CDED001A 		vstr.32	s3, [sp]
 2460 0022 8DED012A 		vstr.32	s4, [sp, #4]
 2461 0026 CDED022A 		vstr.32	s5, [sp, #8]
 229:BSP/BSP.c/FusionAhrs.c **** 
 2462              		.loc 1 229 5 is_stmt 1 view .LVU743
 229:BSP/BSP.c/FusionAhrs.c **** 
 2463              		.loc 1 229 32 is_stmt 0 view .LVU744
 2464 002a 90ED040A 		vldr.32	s0, [r0, #16]
 229:BSP/BSP.c/FusionAhrs.c **** 
 2465              		.loc 1 229 38 view .LVU745
 2466 002e D0ED057A 		vldr.32	s15, [r0, #20]
 229:BSP/BSP.c/FusionAhrs.c **** 
 2467              		.loc 1 229 35 view .LVU746
 2468 0032 20EE270A 		vmul.f32	s0, s0, s15
 229:BSP/BSP.c/FusionAhrs.c **** 
 2469              		.loc 1 229 44 view .LVU747
 2470 0036 90ED067A 		vldr.32	s14, [r0, #24]
 229:BSP/BSP.c/FusionAhrs.c **** 
 2471              		.loc 1 229 50 view .LVU748
 2472 003a D0ED076A 		vldr.32	s13, [r0, #28]
 229:BSP/BSP.c/FusionAhrs.c **** 
 2473              		.loc 1 229 47 view .LVU749
 2474 003e 67EE266A 		vmul.f32	s13, s14, s13
 229:BSP/BSP.c/FusionAhrs.c **** 
 2475              		.loc 1 229 65 view .LVU750
 2476 0042 27EE077A 		vmul.f32	s14, s14, s14
 229:BSP/BSP.c/FusionAhrs.c **** 
 2477              		.loc 1 229 59 view .LVU751
 2478 0046 F6EE000A 		vmov.f32	s1, #5.0e-1
 2479 004a 70EEC70A 		vsub.f32	s1, s1, s14
 229:BSP/BSP.c/FusionAhrs.c **** 
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 64


 2480              		.loc 1 229 77 view .LVU752
 2481 004e 67EEA77A 		vmul.f32	s15, s15, s15
 229:BSP/BSP.c/FusionAhrs.c **** 
 2482              		.loc 1 229 24 view .LVU753
 2483 0052 70EEE70A 		vsub.f32	s1, s1, s15
 2484 0056 30EE260A 		vadd.f32	s0, s0, s13
 2485 005a FFF7FEFF 		bl	atan2f
 2486              	.LVL97:
 229:BSP/BSP.c/FusionAhrs.c **** 
 2487              		.loc 1 229 24 view .LVU754
 2488 005e F0EE409A 		vmov.f32	s19, s0
 2489              	.LVL98:
 232:BSP/BSP.c/FusionAhrs.c ****     const float sinHeadingRadians = sinf(headingRadians);
 2490              		.loc 1 232 5 is_stmt 1 view .LVU755
 2491              	.LBB93:
 2492              	.LBI93:
 127:BSP/BSP.h/FusionMath.h ****     return degrees * ((float) M_PI / 180.0f);
 2493              		.loc 2 127 21 view .LVU756
 2494              	.LBB94:
 128:BSP/BSP.h/FusionMath.h **** }
 2495              		.loc 2 128 5 view .LVU757
 128:BSP/BSP.h/FusionMath.h **** }
 2496              		.loc 2 128 20 is_stmt 0 view .LVU758
 2497 0062 DFED1D7A 		vldr.32	s15, .L104
 2498 0066 28EE278A 		vmul.f32	s16, s16, s15
 2499              	.LVL99:
 128:BSP/BSP.h/FusionMath.h **** }
 2500              		.loc 2 128 20 view .LVU759
 2501              	.LBE94:
 2502              	.LBE93:
 233:BSP/BSP.c/FusionAhrs.c ****     const FusionVector magnetometer = {
 2503              		.loc 1 233 5 is_stmt 1 view .LVU760
 233:BSP/BSP.c/FusionAhrs.c ****     const FusionVector magnetometer = {
 2504              		.loc 1 233 37 is_stmt 0 view .LVU761
 2505 006a B0EE480A 		vmov.f32	s0, s16
 2506              	.LVL100:
 233:BSP/BSP.c/FusionAhrs.c ****     const FusionVector magnetometer = {
 2507              		.loc 1 233 37 view .LVU762
 2508 006e FFF7FEFF 		bl	sinf
 2509              	.LVL101:
 2510 0072 B0EE409A 		vmov.f32	s18, s0
 2511              	.LVL102:
 234:BSP/BSP.c/FusionAhrs.c ****             .axis.x = cosf(headingRadians),
 2512              		.loc 1 234 5 is_stmt 1 view .LVU763
 235:BSP/BSP.c/FusionAhrs.c ****             .axis.y = -1.0f * cosf(roll) * sinHeadingRadians,
 2513              		.loc 1 235 23 is_stmt 0 view .LVU764
 2514 0076 B0EE480A 		vmov.f32	s0, s16
 2515              	.LVL103:
 235:BSP/BSP.c/FusionAhrs.c ****             .axis.y = -1.0f * cosf(roll) * sinHeadingRadians,
 2516              		.loc 1 235 23 view .LVU765
 2517 007a FFF7FEFF 		bl	cosf
 2518              	.LVL104:
 2519 007e F0EE408A 		vmov.f32	s17, s0
 234:BSP/BSP.c/FusionAhrs.c ****             .axis.x = cosf(headingRadians),
 2520              		.loc 1 234 24 view .LVU766
 2521 0082 8DED070A 		vstr.32	s0, [sp, #28]
 236:BSP/BSP.c/FusionAhrs.c ****             .axis.z = sinHeadingRadians * sinf(roll),
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 65


 2522              		.loc 1 236 31 view .LVU767
 2523 0086 B0EE690A 		vmov.f32	s0, s19
 2524 008a FFF7FEFF 		bl	cosf
 2525              	.LVL105:
 236:BSP/BSP.c/FusionAhrs.c ****             .axis.z = sinHeadingRadians * sinf(roll),
 2526              		.loc 1 236 42 view .LVU768
 2527 008e 20EE498A 		vnmul.f32	s16, s0, s18
 2528              	.LVL106:
 234:BSP/BSP.c/FusionAhrs.c ****             .axis.x = cosf(headingRadians),
 2529              		.loc 1 234 24 view .LVU769
 2530 0092 8DED088A 		vstr.32	s16, [sp, #32]
 237:BSP/BSP.c/FusionAhrs.c ****     };
 2531              		.loc 1 237 43 view .LVU770
 2532 0096 B0EE690A 		vmov.f32	s0, s19
 2533 009a FFF7FEFF 		bl	sinf
 2534              	.LVL107:
 237:BSP/BSP.c/FusionAhrs.c ****     };
 2535              		.loc 1 237 41 view .LVU771
 2536 009e 20EE094A 		vmul.f32	s8, s0, s18
 234:BSP/BSP.c/FusionAhrs.c ****             .axis.x = cosf(headingRadians),
 2537              		.loc 1 234 24 view .LVU772
 2538 00a2 8DED094A 		vstr.32	s8, [sp, #36]
 241:BSP/BSP.c/FusionAhrs.c **** #undef Q
 2539              		.loc 1 241 5 is_stmt 1 view .LVU773
 2540 00a6 F0EE4A4A 		vmov.f32	s9, s20
 2541 00aa B0EE683A 		vmov.f32	s6, s17
 2542 00ae F0EE483A 		vmov.f32	s7, s16
 2543 00b2 DDED001A 		vldr.32	s3, [sp]
 2544 00b6 9DED012A 		vldr.32	s4, [sp, #4]
 2545 00ba DDED022A 		vldr.32	s5, [sp, #8]
 2546 00be 9DED030A 		vldr.32	s0, [sp, #12]
 2547 00c2 DDED040A 		vldr.32	s1, [sp, #16]
 2548 00c6 9DED051A 		vldr.32	s2, [sp, #20]
 2549 00ca 2046     		mov	r0, r4
 2550 00cc FFF7FEFF 		bl	FusionAhrsUpdate
 2551              	.LVL108:
 243:BSP/BSP.c/FusionAhrs.c **** 
 2552              		.loc 1 243 1 is_stmt 0 view .LVU774
 2553 00d0 0AB0     		add	sp, sp, #40
 2554              	.LCFI50:
 2555              		.cfi_def_cfa_offset 32
 2556              		@ sp needed
 2557 00d2 BDEC068B 		vldm	sp!, {d8-d10}
 2558              	.LCFI51:
 2559              		.cfi_restore 84
 2560              		.cfi_restore 85
 2561              		.cfi_restore 82
 2562              		.cfi_restore 83
 2563              		.cfi_restore 80
 2564              		.cfi_restore 81
 2565              		.cfi_def_cfa_offset 8
 2566              	.LVL109:
 243:BSP/BSP.c/FusionAhrs.c **** 
 2567              		.loc 1 243 1 view .LVU775
 2568 00d6 10BD     		pop	{r4, pc}
 2569              	.LVL110:
 2570              	.L105:
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 66


 243:BSP/BSP.c/FusionAhrs.c **** 
 2571              		.loc 1 243 1 view .LVU776
 2572              		.align	2
 2573              	.L104:
 2574 00d8 35FA8E3C 		.word	1016003125
 2575              		.cfi_endproc
 2576              	.LFE26:
 2578              		.section	.text.FusionAhrsUpdateNoMagnetometer,"ax",%progbits
 2579              		.align	1
 2580              		.global	FusionAhrsUpdateNoMagnetometer
 2581              		.syntax unified
 2582              		.thumb
 2583              		.thumb_func
 2585              	FusionAhrsUpdateNoMagnetometer:
 2586              	.LVL111:
 2587              	.LFB25:
 205:BSP/BSP.c/FusionAhrs.c **** 
 2588              		.loc 1 205 148 is_stmt 1 view -0
 2589              		.cfi_startproc
 2590              		@ args = 0, pretend = 0, frame = 40
 2591              		@ frame_needed = 0, uses_anonymous_args = 0
 205:BSP/BSP.c/FusionAhrs.c **** 
 2592              		.loc 1 205 148 is_stmt 0 view .LVU778
 2593 0000 10B5     		push	{r4, lr}
 2594              	.LCFI52:
 2595              		.cfi_def_cfa_offset 8
 2596              		.cfi_offset 4, -8
 2597              		.cfi_offset 14, -4
 2598 0002 8AB0     		sub	sp, sp, #40
 2599              	.LCFI53:
 2600              		.cfi_def_cfa_offset 48
 2601 0004 0446     		mov	r4, r0
 2602 0006 F0EE434A 		vmov.f32	s9, s6
 2603 000a 8DED030A 		vstr.32	s0, [sp, #12]
 2604 000e CDED040A 		vstr.32	s1, [sp, #16]
 2605 0012 8DED051A 		vstr.32	s2, [sp, #20]
 2606 0016 CDED001A 		vstr.32	s3, [sp]
 2607 001a 8DED012A 		vstr.32	s4, [sp, #4]
 2608 001e CDED022A 		vstr.32	s5, [sp, #8]
 208:BSP/BSP.c/FusionAhrs.c **** 
 2609              		.loc 1 208 5 is_stmt 1 view .LVU779
 208:BSP/BSP.c/FusionAhrs.c **** 
 2610              		.loc 1 208 54 is_stmt 0 view .LVU780
 2611 0022 9FED0E4A 		vldr.32	s8, .L110
 2612 0026 8DED074A 		vstr.32	s8, [sp, #28]
 2613 002a 8DED084A 		vstr.32	s8, [sp, #32]
 2614 002e 8DED094A 		vstr.32	s8, [sp, #36]
 208:BSP/BSP.c/FusionAhrs.c **** 
 2615              		.loc 1 208 5 view .LVU781
 2616 0032 B0EE443A 		vmov.f32	s6, s8
 2617              	.LVL112:
 208:BSP/BSP.c/FusionAhrs.c **** 
 2618              		.loc 1 208 5 view .LVU782
 2619 0036 F0EE443A 		vmov.f32	s7, s8
 2620 003a FFF7FEFF 		bl	FusionAhrsUpdate
 2621              	.LVL113:
 211:BSP/BSP.c/FusionAhrs.c ****         FusionAhrsSetHeading(ahrs, 0.0f);
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 67


 2622              		.loc 1 211 5 is_stmt 1 view .LVU783
 211:BSP/BSP.c/FusionAhrs.c ****         FusionAhrsSetHeading(ahrs, 0.0f);
 2623              		.loc 1 211 14 is_stmt 0 view .LVU784
 2624 003e 94F82C30 		ldrb	r3, [r4, #44]	@ zero_extendqisi2
 211:BSP/BSP.c/FusionAhrs.c ****         FusionAhrsSetHeading(ahrs, 0.0f);
 2625              		.loc 1 211 8 view .LVU785
 2626 0042 13B1     		cbz	r3, .L106
 211:BSP/BSP.c/FusionAhrs.c ****         FusionAhrsSetHeading(ahrs, 0.0f);
 2627              		.loc 1 211 46 discriminator 1 view .LVU786
 2628 0044 94F85830 		ldrb	r3, [r4, #88]	@ zero_extendqisi2
 211:BSP/BSP.c/FusionAhrs.c ****         FusionAhrsSetHeading(ahrs, 0.0f);
 2629              		.loc 1 211 38 discriminator 1 view .LVU787
 2630 0048 0BB1     		cbz	r3, .L109
 2631              	.L106:
 214:BSP/BSP.c/FusionAhrs.c **** 
 2632              		.loc 1 214 1 view .LVU788
 2633 004a 0AB0     		add	sp, sp, #40
 2634              	.LCFI54:
 2635              		.cfi_remember_state
 2636              		.cfi_def_cfa_offset 8
 2637              		@ sp needed
 2638 004c 10BD     		pop	{r4, pc}
 2639              	.LVL114:
 2640              	.L109:
 2641              	.LCFI55:
 2642              		.cfi_restore_state
 212:BSP/BSP.c/FusionAhrs.c ****     }
 2643              		.loc 1 212 9 is_stmt 1 view .LVU789
 2644 004e 9FED030A 		vldr.32	s0, .L110
 2645 0052 2046     		mov	r0, r4
 2646 0054 FFF7FEFF 		bl	FusionAhrsSetHeading
 2647              	.LVL115:
 214:BSP/BSP.c/FusionAhrs.c **** 
 2648              		.loc 1 214 1 is_stmt 0 view .LVU790
 2649 0058 F7E7     		b	.L106
 2650              	.L111:
 2651 005a 00BF     		.align	2
 2652              	.L110:
 2653 005c 00000000 		.word	0
 2654              		.cfi_endproc
 2655              	.LFE25:
 2657              		.section	.rodata
 2658              		.align	2
 2659              		.set	.LANCHOR0,. + 0
 2660              	.LC0:
 2661 0000 0000C03F 		.word	1069547520
 2662 0004 00003443 		.word	1127481344
 2663 0008 00003443 		.word	1127481344
 2664 000c 00000000 		.word	0
 2665              		.text
 2666              	.Letext0:
 2667              		.file 3 "c:\\msys64\\mingw64\\arm-none-eabi\\include\\machine\\_default_types.h"
 2668              		.file 4 "c:\\msys64\\mingw64\\arm-none-eabi\\include\\sys\\_stdint.h"
 2669              		.file 5 "BSP/BSP.h/FusionAhrs.h"
 2670              		.file 6 "c:\\msys64\\mingw64\\arm-none-eabi\\include\\math.h"
 2671              		.file 7 "BSP/BSP.h/FusionCompass.h"
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 68


DEFINED SYMBOLS
                            *ABS*:00000000 FusionAhrs.c
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:21     .text.FusionVectorCrossProduct:00000000 $t
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:26     .text.FusionVectorCrossProduct:00000000 FusionVectorCrossProduct
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:90     .text.FusionVectorMagnitudeSquared:00000000 $t
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:95     .text.FusionVectorMagnitudeSquared:00000000 FusionVectorMagnitudeSquared
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:159    .text.FusionVectorNormalise:00000000 $t
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:164    .text.FusionVectorNormalise:00000000 FusionVectorNormalise
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:274    .text.FusionVectorNormalise:00000090 $d
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:281    .text.FusionQuaternionMultiply:00000000 $t
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:286    .text.FusionQuaternionMultiply:00000000 FusionQuaternionMultiply
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:393    .text.FusionQuaternionMultiplyVector:00000000 $t
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:398    .text.FusionQuaternionMultiplyVector:00000000 FusionQuaternionMultiplyVector
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:488    .text.FusionQuaternionNormalise:00000000 $t
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:493    .text.FusionQuaternionNormalise:00000000 FusionQuaternionNormalise
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:592    .text.FusionQuaternionNormalise:00000098 $d
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:599    .text.FusionVectorMagnitude:00000000 $t
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:604    .text.FusionVectorMagnitude:00000000 FusionVectorMagnitude
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:636    .text.FusionAsin:00000000 $t
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:641    .text.FusionAsin:00000000 FusionAsin
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:693    .text.FusionAsin:00000030 $d
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:699    .text.FusionAhrsReset:00000000 $t
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:705    .text.FusionAhrsReset:00000000 FusionAhrsReset
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:768    .text.FusionAhrsReset:00000044 $d
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:773    .text.FusionAhrsSetSettings:00000000 $t
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:779    .text.FusionAhrsSetSettings:00000000 FusionAhrsSetSettings
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:927    .text.FusionAhrsSetSettings:000000ac $d
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:933    .text.FusionAhrsInitialise:00000000 $t
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:939    .text.FusionAhrsInitialise:00000000 FusionAhrsInitialise
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:984    .text.FusionAhrsInitialise:00000024 $d
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:989    .text.FusionAhrsGetQuaternion:00000000 $t
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:995    .text.FusionAhrsGetQuaternion:00000000 FusionAhrsGetQuaternion
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:1031   .text.FusionAhrsGetLinearAcceleration:00000000 $t
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:1037   .text.FusionAhrsGetLinearAcceleration:00000000 FusionAhrsGetLinearAcceleration
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:1153   .text.FusionAhrsGetEarthAcceleration:00000000 $t
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:1159   .text.FusionAhrsGetEarthAcceleration:00000000 FusionAhrsGetEarthAcceleration
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:1313   .text.FusionAhrsGetInternalStates:00000000 $t
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:1319   .text.FusionAhrsGetInternalStates:00000000 FusionAhrsGetInternalStates
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:1440   .text.FusionAhrsGetInternalStates:000000a4 $d
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:1446   .text.FusionAhrsGetFlags:00000000 $t
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:1452   .text.FusionAhrsGetFlags:00000000 FusionAhrsGetFlags
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:1520   .text.FusionAhrsSetHeading:00000000 $t
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:1526   .text.FusionAhrsSetHeading:00000000 FusionAhrsSetHeading
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:1651   .text.FusionAhrsSetHeading:000000b8 $d
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:1657   .text.FusionAhrsUpdate:00000000 $t
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:1663   .text.FusionAhrsUpdate:00000000 FusionAhrsUpdate
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:2416   .text.FusionAhrsUpdate:000004d0 $d
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:2422   .text.FusionAhrsUpdateExternalHeading:00000000 $t
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:2428   .text.FusionAhrsUpdateExternalHeading:00000000 FusionAhrsUpdateExternalHeading
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:2574   .text.FusionAhrsUpdateExternalHeading:000000d8 $d
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:2579   .text.FusionAhrsUpdateNoMagnetometer:00000000 $t
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:2585   .text.FusionAhrsUpdateNoMagnetometer:00000000 FusionAhrsUpdateNoMagnetometer
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:2653   .text.FusionAhrsUpdateNoMagnetometer:0000005c $d
C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s:2658   .rodata:00000000 $d

UNDEFINED SYMBOLS
sqrtf
ARM GAS  C:\Users\purdu\AppData\Local\Temp\cc2fhkEd.s 			page 69


asinf
sinf
powf
atan2f
cosf
FusionCompassCalculateHeading
